var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/ActivatedRouteStub.html",[0,0.041,1,3.208]],["body/classes/ActivatedRouteStub.html",[0,0.063,1,4.983,2,0.135,3,0.118,4,0.086,5,6.637,6,2.731,7,3.888,8,0.55,9,6.322,10,4.983,11,6.322,12,8.335,13,3.908,14,4.171,15,7.359,16,1.343,17,0.931,18,5.338,19,2.117,20,0.673,21,1.414,22,6.977,23,1.411,24,6.419,25,0.753,26,6.322,27,1.413,28,0.751,29,6.322,30,1.414,31,0.013,32,0.766,33,0.931,34,1.115,35,4.932,36,4.983,37,1.726,38,6.322,39,4.932,40,6.322,41,2.505,42,7.359,43,6.322,44,4.932,45,4.269,46,6.322,47,0.839,48,1.347,49,0.239,50,4.932,51,1.26,52,2.421,53,0.118,54,4.932,55,2.657,56,3.888,57,4.932,58,4.932,59,4.932,60,0.01,61,0.01]],["title/injectables/AnswerService.html",[62,0.622,63,2.953]],["body/injectables/AnswerService.html",[0,0.061,2,0.103,3,0.09,4,0.065,8,0.774,13,3.875,16,0.964,17,0.777,19,0.996,20,0.514,21,1.181,23,1.495,25,0.806,27,1.269,28,0.735,30,1.477,31,0.013,32,0.8,33,1.023,34,1.164,37,1.029,41,2.369,47,1.359,49,0.262,52,1.851,53,0.09,60,0.011,61,0.008,62,1.061,63,5.224,64,3.289,65,0.614,66,6.6,67,4.605,68,4.605,69,4.181,70,4.605,71,2.546,72,4.402,73,5.279,74,1.105,75,3.982,76,3.344,77,4.605,78,3.77,79,1.301,80,7.149,81,5.279,82,2.948,83,3.945,84,3.77,85,3.156,86,3.344,87,1.046,88,5.279,89,3.77,90,4.161,91,2.585,92,4.605,93,3.77,94,2.99,95,1.541,96,5.279,97,0.212,98,1.937,99,1.745,100,0.963,101,3.859,102,2.388,103,2.388,104,2.254,105,1.937,106,2.388,107,3.739,108,2.352,109,3.77,110,2.546,111,2.638,112,3.859,113,4.856,114,1.839,115,4.419,116,3.77,117,2.546,118,3.77,119,2.546,120,1.57]],["title/components/AppComponent.html",[121,0.111,122,0.852]],["body/components/AppComponent.html",[0,0.063,2,0.11,3,0.096,4,0.07,8,0.448,17,0.928,19,1.061,20,0.548,21,1.234,23,1.116,25,0.843,27,0.973,28,0.563,30,0.899,31,0.013,32,0.763,33,0.812,34,0.708,37,1.097,49,0.238,51,1.027,53,0.096,60,0.008,61,0.008,65,0.641,74,1.155,79,1.035,87,0.874,95,1.611,97,0.226,105,2.834,114,1.213,121,0.194,122,1.603,123,0.961,124,0.961,125,3.505,126,0.869,127,1.901,128,1.838,129,1.319,130,4.921,131,2.546,132,3.318,133,3.237,134,5.518,135,2.488,136,2.834,137,3.606,138,5.518,139,2.834,140,5.518,141,5.518,142,1.973,143,2.064,144,2.064,145,3.485,146,3.485,147,4.018,148,2.834,149,1.973,150,0.66,151,1.276,152,1.319,153,1.276,154,1.622,155,0.961,156,0.961,157,0.813,158,0.961,159,0.813,160,1.15,161,1.507,162,0.813,163,0.961,164,0.813,165,1.319,166,0.813,167,1.507,168,0.813,169,1.319,170,0.813,171,0.961,172,0.841,173,0.961,174,0.841,175,0.841,176,0.813,177,0.961,178,0.841,179,1.319,180,0.841,181,1.319,182,0.813,183,1.832,184,1.507,185,0.961,186,0.813,187,0.961,188,0.813,189,1.319,190,0.813,191,1.319,192,0.813,193,0.961,194,0.813,195,0.961,196,0.813,197,0.813,198,0.813,199,0.961,200,0.786,201,0.961,202,0.813,203,0.813,204,0.813,205,0.813,206,0.939,207,0.813,208,0.813,209,0.841,210,0.899,211,0.961]],["title/modules/AppModule.html",[212,0.693,213,2.433]],["body/modules/AppModule.html",[0,0.048,2,0.132,3,0.116,4,0.084,14,2.882,31,0.013,49,0.315,53,0.149,60,0.01,61,0.01,97,0.271,98,2.477,120,2.594,122,1.723,128,1.043,150,0.792,212,1.06,213,4.987,214,2.174,215,3.245,216,3.245,217,2.809,218,4.206,219,4.206,220,4.206,221,4.206,222,5.225,223,5.102,224,5.102,225,3.799,226,3.059,227,2.367,228,1.506,229,4.822,230,6.231,231,4.206,232,3.801,233,2.237,234,2.731,235,4.822,236,4.822,237,2.882,238,3.53,239,2.597,240,2.597,241,6.231,242,4.822,243,3.947,244,5.008,245,3.801,246,3.256,247,4.52,248,4.822,249,3.801,250,4.822,251,4.822,252,5.435,253,1.361,254,3.801,255,3.801,256,4.822,257,4.822,258,4.822,259,2.477,260,4.206,261,3.256,262,4.822,263,4.822,264,4.822,265,4.822]],["title/modules/AppRoutingModule.html",[212,0.693,222,2.749]],["body/modules/AppRoutingModule.html",[0,0.057,2,0.156,3,0.137,4,0.099,6,2.849,31,0.013,49,0.293,51,1.456,53,0.166,60,0.011,61,0.011,97,0.32,108,2.199,121,0.156,132,2.467,153,1.318,212,1.177,213,3.406,222,4.671,233,2.483,266,5.697,267,3.227,268,3.553,269,5.453,270,5.697,271,4.013,272,3.406,273,6.034,274,5.697,275,5.018,276,5.697,277,4.133,278,4.97,279,5.697,280,4.491,281,4.491,282,4.491,283,5.697,284,4.133,285,2.926,286,4.97,287,5.697,288,2.926,289,4.97,290,4.133]],["title/components/AuthComponent.html",[121,0.111,157,0.823]],["body/components/AuthComponent.html",[0,0.065,2,0.114,3,0.1,4,0.073,8,0.632,16,1.036,17,0.947,20,0.571,23,0.847,25,0.867,27,0.738,28,0.657,30,0.936,31,0.013,32,0.78,33,0.616,34,0.738,47,0.966,48,1.549,49,0.214,53,0.1,60,0.009,61,0.009,62,0.867,65,0.659,74,1.187,79,1.057,87,0.899,97,0.235,121,0.197,122,0.876,123,1.001,124,1.001,126,0.905,127,1.906,128,1.843,129,1.356,133,3.221,142,2.054,149,2.054,150,0.687,151,1.312,152,1.356,153,1.312,154,1.65,155,1.001,156,1.001,157,1.565,158,1.001,159,0.847,160,1.175,161,1.539,162,0.847,163,1.001,164,0.847,165,1.356,166,0.847,167,1.539,168,0.847,169,1.356,170,0.847,171,1.001,172,0.876,173,1.001,174,0.876,175,0.876,176,0.847,177,1.001,178,0.876,179,1.356,180,0.876,181,1.356,182,0.847,183,1.85,184,1.539,185,1.001,186,0.847,187,1.001,188,0.847,189,1.356,190,0.847,191,1.356,192,0.847,193,1.001,194,0.847,195,1.001,196,0.847,197,0.847,198,0.847,199,1.001,200,0.818,201,1.001,202,0.847,203,0.847,204,0.847,205,0.847,206,0.966,207,0.847,208,0.847,209,0.876,210,1.44,211,1.001,272,3.391,291,3.651,292,1.109,293,1.539,294,3.025,295,3.243,296,1.763,297,3.651,298,4.185,299,1.898,300,4.185,301,4.185]],["title/guards/AuthGuard.html",[269,3.208,302,3.208]],["body/guards/AuthGuard.html",[0,0.07,2,0.133,3,0.117,4,0.085,6,2.252,8,0.699,13,3.564,16,1.145,18,5.033,20,0.665,23,1.269,25,0.958,27,1.291,28,0.64,30,1.403,31,0.013,32,0.76,33,0.923,34,1.106,47,1.247,49,0.293,51,1.603,52,2.392,53,0.117,60,0.01,61,0.01,62,1.185,65,0.729,74,1.312,97,0.274,104,2.913,105,2.503,114,1.471,120,2.029,131,3.087,132,3.527,269,6.116,278,6.612,292,0.953,299,2.099,302,3.841,303,4.873,304,5.118,305,4.873,306,4.551,307,4.873,308,7.58,309,3.763,310,7.58,311,4.873,312,2.828,313,6.273,314,6.273,315,2.678,316,4.25,317,3.535,318,4.25,319,4.25,320,4.873]],["title/interceptors/AuthInterceptorService.html",[321,3.551,322,3.208]],["body/interceptors/AuthInterceptorService.html",[0,0.071,2,0.14,3,0.122,4,0.089,8,0.72,13,3.642,16,1.179,17,1.044,18,5.406,20,0.696,23,1.032,25,0.987,27,1.25,28,0.66,30,1.445,31,0.013,32,0.783,33,0.951,34,1.139,47,1.1,49,0.281,52,2.505,53,0.122,60,0.01,61,0.01,62,1.138,65,0.751,74,1.352,75,3.48,85,4.238,97,0.287,98,2.621,272,4.238,292,0.998,299,2.162,321,4.452,322,5.093,323,7.09,324,5.103,325,7.452,326,7.452,327,4.452,328,3.36,329,5.103,330,6.461,331,7.452,332,7.452,333,5.103,334,5.636,335,5.143,336,7.09,337,5.103,338,6.461,339,4.023,340,6.461,341,2.399,342,5.103,343,5.103,344,5.103]],["title/modules/AuthModule.html",[212,0.693,223,2.749]],["body/modules/AuthModule.html",[0,0.05,2,0.136,3,0.119,4,0.086,14,2.966,31,0.013,47,0.845,49,0.315,53,0.152,60,0.01,61,0.01,97,0.356,98,2.549,105,2.549,150,0.815,157,1.577,200,1.525,212,1.349,213,2.966,214,2.237,215,3.29,216,2.333,217,3.515,223,5.554,226,3.116,227,2.436,228,1.55,233,2.648,234,2.811,238,3.595,239,2.673,240,2.673,272,2.966,277,3.6,299,2.123,322,5.003,345,4.329,346,4.329,347,4.329,348,5.265,349,4.962,350,3.26,351,1.268,352,6.104,353,4.329,354,4.329,355,4.021,356,2.673,357,4.962,358,4.962,359,6.347,360,4.329,361,5.537,362,4.021,363,5.537,364,3.911,365,4.329,366,4.329,367,4.329,368,4.329,369,4.329,370,4.329,371,4.329,372,2.966,373,4.962,374,4.962]],["title/modules/AuthRoutingModule.html",[212,0.693,348,2.749]],["body/modules/AuthRoutingModule.html",[0,0.059,2,0.16,3,0.141,4,0.102,6,2.707,31,0.013,49,0.302,51,1.498,53,0.169,60,0.011,61,0.011,97,0.329,108,2.263,121,0.192,157,1.424,200,1.376,212,0.998,233,2.526,267,3.321,268,3.615,271,4.063,280,4.621,281,4.621,282,4.621,348,4.753,353,5.114,354,5.114,375,5.862,376,3.714,377,5.105,378,3.504]],["title/injectables/AuthService.html",[62,0.622,328,1.695]],["body/injectables/AuthService.html",[0,0.06,2,0.098,3,0.086,4,0.062,8,0.661,13,3.995,16,0.932,19,0.949,20,0.49,21,1.142,23,1.508,25,0.78,27,1.046,28,0.761,30,1.446,31,0.013,32,0.783,33,1.044,34,1.203,37,0.981,41,2.319,45,4.008,47,1.381,48,1.394,49,0.275,52,1.764,53,0.086,60,0.011,61,0.008,62,1.114,65,0.593,69,3.233,72,4.324,74,1.068,75,4.084,76,3.233,85,2.148,95,1.733,97,0.202,98,1.846,99,1.817,100,0.918,101,3.76,102,2.277,103,2.277,104,2.148,105,1.846,106,3.233,107,2.891,108,2.291,111,2.21,112,3.233,113,4.871,114,1.541,120,1.496,228,1.594,259,2.622,272,4.596,299,2.162,304,4.721,306,4.687,316,3.135,317,3.703,318,3.135,319,3.135,328,2.952,335,5.577,341,1.689,377,3.703,379,2.833,380,6.461,381,6.461,382,3.319,383,6.461,384,5.104,385,3.594,386,5.104,387,3.594,388,4.452,389,3.594,390,5.104,391,3.594,392,3.038,393,3.038,394,3.594,395,3.594,396,4.678,397,5.104,398,3.594,399,3.703,400,3.594,401,4.678,402,3.135,403,3.135,404,3.594,405,3.594,406,3.594,407,3.594,408,3.594,409,3.594,410,4.023,411,3.594,412,4.452,413,4.452,414,3.594,415,3.594,416,3.594,417,3.594]],["title/classes/Candidate.html",[0,0.041,79,0.669]],["body/classes/Candidate.html",[0,0.077,2,0.15,3,0.131,4,0.095,8,0.61,20,0.747,21,1.51,28,0.816,31,0.013,33,1.177,34,1.409,49,0.207,53,0.131,60,0.01,61,0.01,65,0.785,79,1.255,82,2.974,95,2.407,206,1.412,372,4.036,418,4.776,419,5.544,420,6.666,421,4.841,422,6.666,423,6.023,424,5.475,425,5.475,426,5.475,427,5.475,428,5.475,429,5.475,430,4.316]],["title/components/CandidateAddEditFormComponent.html",[121,0.111,159,0.823]],["body/components/CandidateAddEditFormComponent.html",[0,0.045,2,0.061,3,0.053,4,0.039,6,2.309,8,0.495,16,0.649,17,1.219,19,1.636,20,0.304,21,0.796,23,1.025,25,0.543,27,0.976,28,0.766,30,0.796,31,0.013,32,0.779,33,0.869,34,0.627,37,1.691,41,1.593,47,1.181,48,1.81,49,0.257,51,0.569,53,0.053,55,2.729,56,1.757,60,0.007,61,0.005,62,0.982,65,0.413,74,0.744,79,1.339,82,1.885,83,3.408,87,0.563,91,2.196,94,2.015,97,0.125,99,1.281,100,0.569,114,0.673,120,2.109,121,0.151,122,0.466,123,0.533,124,0.533,126,0.482,127,1.808,128,1.748,129,0.533,131,1.412,150,0.366,151,0.823,152,0.85,153,0.823,154,1.211,155,0.533,156,0.533,157,0.451,158,0.533,159,1.301,160,1.51,161,1.061,162,0.451,163,0.533,164,0.451,165,0.85,166,0.451,167,1.061,168,0.451,169,0.85,170,0.451,171,0.533,172,0.466,173,0.533,174,0.466,175,0.466,176,0.451,177,0.533,178,0.466,179,0.85,180,0.466,181,0.85,182,0.451,183,1.538,184,1.061,185,0.533,186,0.451,187,0.533,188,0.451,189,0.85,190,0.451,191,0.85,192,0.451,193,0.533,194,0.451,195,0.533,196,0.451,197,0.451,198,0.451,199,0.533,200,0.436,201,0.533,202,0.451,203,0.451,204,0.451,205,0.451,206,1.34,207,0.451,208,0.451,209,0.466,210,0.499,211,0.533,253,1.004,259,1.827,261,1.505,292,0.695,293,1.061,296,1.294,299,1.695,315,1.713,351,0.569,419,3.675,423,3.993,430,1.757,431,5.107,432,5.487,433,1.617,434,4.074,435,1.149,436,2.803,437,1.373,438,2.803,439,3.508,440,5.402,441,3.923,442,4.182,443,3.739,444,4.419,445,2.402,446,3.21,447,2.87,448,3.21,449,4.419,450,4.016,451,3.963,452,3.756,453,3.932,454,3.557,455,1.672,456,2.228,457,2.803,458,2.228,459,2.228,460,2.228,461,2.015,462,2.228,463,2.228,464,2.228,465,2.228,466,2.228,467,2.228,468,2.228,469,2.228,470,2.015,471,2.015,472,2.123,473,2.228,474,3.557,475,2.228,476,2.402,477,2.228,478,2.253,479,2.228,480,1.54,481,2.228,482,2.58,483,1.757,484,1.757,485,1.111,486,1.111,487,1.617,488,1.757,489,4.364,490,1.617,491,2.228,492,1.757,493,2.228,494,3.421,495,1.695,496,1.505,497,2.015,498,1.944,499,1.617,500,2.228,501,2.812,502,2.402,503,2.402,504,2.803,505,2.58,506,2.228,507,1.262,508,2.228,509,2.228,510,5.066,511,4.074,512,2.803]],["title/components/CandidateScreenComponent.html",[121,0.111,162,0.823]],["body/components/CandidateScreenComponent.html",[0,0.04,2,0.052,3,0.045,4,0.033,6,1.964,8,0.513,10,4.764,16,0.569,17,0.584,18,2.259,19,1.654,20,0.258,21,0.697,23,1.029,25,0.476,27,1.104,28,0.784,30,1.138,31,0.013,32,0.701,33,0.973,34,0.897,36,2.455,37,1.71,41,0.679,47,1.205,48,2.016,49,0.25,51,0.483,53,0.045,55,2.947,60,0.006,61,0.005,62,0.985,63,4.542,65,0.362,67,2.717,68,4.014,70,2.717,74,0.652,77,2.717,79,1.306,80,6.7,82,1.893,83,3.074,86,4.275,87,1.256,91,2.036,92,2.717,94,1.764,97,0.106,99,1.338,100,0.483,108,0.73,114,0.571,120,1.916,121,0.139,122,0.396,123,0.452,124,0.452,126,0.409,127,1.773,128,1.715,129,0.452,150,0.311,151,0.72,152,0.745,153,0.72,154,1.1,155,0.452,156,0.452,157,0.383,158,0.452,159,0.383,160,1.056,161,0.949,162,1.222,163,0.452,164,0.383,165,0.745,166,0.383,167,0.949,168,0.383,169,0.745,170,0.383,171,0.452,172,0.396,173,0.452,174,0.396,175,0.396,176,0.383,177,0.452,178,0.396,179,0.745,180,0.396,181,0.745,182,0.383,183,1.445,184,0.949,185,0.452,186,0.383,187,0.452,188,0.383,189,0.745,190,0.383,191,0.745,192,0.383,193,0.452,194,0.383,195,0.452,196,0.383,197,0.383,198,0.383,199,0.452,200,0.37,201,0.452,202,0.383,203,0.383,204,0.383,205,0.383,206,1.276,207,0.383,208,0.383,209,0.396,210,0.423,211,0.452,253,0.534,259,1.6,261,3.107,292,0.609,293,0.949,296,1.176,299,1.831,312,1.404,315,1.532,351,0.483,364,2.455,430,1.491,431,5.212,434,3.466,435,1.007,437,1.202,439,3.277,442,3.906,443,2.915,445,2.103,446,1.973,447,2.606,448,2.915,450,3.69,451,3.612,452,3.547,453,3.743,455,1.464,457,2.455,461,3.1,468,1.896,469,1.896,470,1.764,471,2.606,472,1.807,478,3.829,482,2.259,483,1.491,484,1.491,485,0.591,486,0.591,487,1.372,490,1.372,494,3.695,495,1.831,496,1.278,497,2.249,498,1.65,499,1.372,501,2.515,505,1.372,507,1.072,513,5.599,514,1.65,515,3.114,516,3.114,517,4.601,518,4.601,519,5.784,520,5.272,521,4.677,522,4.601,523,4.601,524,4.014,525,4.601,526,4.601,527,1.491,528,3.114,529,1.892,530,1.892,531,3.114,532,2.455,533,1.892,534,6.043,535,1.892,536,1.892,537,1.892,538,5.472,539,2.455,540,1.892,541,1.892,542,1.764,543,1.892,544,1.892,545,1.892,546,1.892,547,3.114,548,3.114,549,3.114,550,3.114,551,1.892,552,1.892,553,1.892,554,1.892,555,1.892,556,1.892,557,1.892,558,2.455,559,1.892,560,1.862,561,1.892,562,1.892,563,1.892,564,1.892,565,1.491,566,1.892,567,1.65,568,3.969,569,1.892,570,1.892,571,3.114,572,1.892,573,3.114,574,3.114,575,1.892,576,1.892,577,1.892,578,1.65,579,1.892,580,1.892,581,1.892,582,3.114,583,1.892,584,3.114,585,3.969,586,1.892,587,3.466,588,1.892,589,1.892,590,1.892,591,1.892,592,1.892,593,1.892,594,1.892,595,1.892,596,2.717,597,4.773,598,2.717,599,2.717,600,3.114,601,3.114,602,4.601,603,3.114,604,3.114]],["title/injectables/CandidateService.html",[62,0.622,451,2.433]],["body/injectables/CandidateService.html",[0,0.058,2,0.093,3,0.081,4,0.059,8,0.774,13,3.989,16,0.892,17,0.925,19,0.894,20,0.462,21,1.094,23,1.449,25,0.747,27,1.175,28,0.749,30,1.492,31,0.013,32,0.808,33,1.023,34,1.175,37,0.924,41,2.494,47,1.405,49,0.262,52,1.661,53,0.081,60,0.01,61,0.007,62,1.018,65,0.568,69,3.982,71,2.285,72,4.224,74,1.023,75,3.859,76,3.097,79,1.39,82,2.339,83,3.411,85,4.535,90,3.853,91,2.481,94,3.561,95,1.427,97,0.19,98,1.738,99,1.827,100,0.864,101,3.097,102,2.143,103,2.143,104,2.022,105,1.738,106,2.143,107,3.777,108,2.765,110,3.301,111,2.887,112,4.224,113,5.039,114,2.013,115,4.836,117,2.285,119,2.285,120,1.409,246,2.285,444,4.264,445,4.692,449,4.264,451,4.153,457,3.853,605,2.951,606,6.286,607,4.264,608,4.888,609,4.888,610,3.383,611,4.264,612,3.383,613,3.561,614,3.383,615,3.383,616,3.383,617,4.888,618,3.383,619,4.888,620,5.739,621,4.888,622,2.454,623,4.888]],["title/components/CandidatesComponent.html",[121,0.111,164,0.823]],["body/components/CandidatesComponent.html",[0,0.066,2,0.121,3,0.106,4,0.077,6,2.11,8,0.492,16,1.073,17,0.973,20,0.602,25,1.01,28,0.6,31,0.013,32,0.712,47,0.751,48,1.205,49,0.167,53,0.106,60,0.009,61,0.009,65,0.683,79,1.206,87,0.931,97,0.248,121,0.211,122,0.923,123,1.055,124,1.055,126,0.955,127,1.912,128,1.849,129,1.406,150,0.725,151,1.36,152,1.406,153,1.36,154,1.686,155,1.055,156,1.055,157,0.893,158,1.055,159,0.893,160,1.207,161,1.581,162,0.893,163,1.055,164,1.528,165,1.406,166,0.893,167,1.581,168,0.893,169,1.406,170,0.893,171,1.055,172,0.923,173,1.055,174,0.923,175,0.923,176,0.893,177,1.055,178,0.923,179,1.406,180,0.923,181,1.406,182,0.893,183,1.872,184,1.581,185,1.055,186,0.893,187,1.055,188,0.893,189,1.406,190,0.893,191,1.406,192,0.893,193,1.055,194,0.893,195,1.055,196,0.893,197,0.893,198,0.893,199,1.055,200,0.863,201,1.055,202,0.893,203,0.893,204,0.893,205,0.893,206,1.001,207,0.893,208,0.893,209,0.923,210,0.987,211,1.055,277,4.265,292,1.15,293,1.581,296,1.801,362,3.725,624,3.85,625,5.879,626,4.413,627,4.413]],["title/components/CandidatesListComponent.html",[121,0.111,166,0.823]],["body/components/CandidatesListComponent.html",[0,0.054,2,0.083,3,0.073,4,0.053,8,0.502,16,0.823,17,0.792,19,1.421,20,0.413,21,1.008,23,0.912,25,0.688,27,0.794,28,0.742,30,1.008,31,0.013,32,0.722,33,0.792,34,0.794,37,1.469,41,1.618,47,1.015,48,1.824,49,0.268,53,0.073,55,2.427,60,0.008,61,0.007,62,0.911,65,0.524,74,0.943,79,1.371,87,0.714,97,0.17,99,1.245,100,0.774,121,0.174,122,0.634,123,0.724,124,0.724,126,0.655,127,1.862,128,1.801,129,0.724,150,0.497,151,1.042,152,1.077,153,1.042,154,1.425,155,0.724,156,0.724,157,0.613,158,0.724,159,0.613,160,0.982,161,1.287,162,0.613,163,0.724,164,0.613,165,1.077,166,1.438,167,1.287,168,0.613,169,1.077,170,0.613,171,0.724,172,0.634,173,0.724,174,0.634,175,0.634,176,0.613,177,0.724,178,0.634,179,1.077,180,0.634,181,1.077,182,0.613,183,1.7,184,1.287,185,0.724,186,0.613,187,0.724,188,0.613,189,1.077,190,0.613,191,1.077,192,0.613,193,0.724,194,0.613,195,0.724,196,0.613,197,0.613,198,0.613,199,0.724,200,0.592,201,0.724,202,0.613,203,0.613,204,0.613,205,0.613,206,1.015,207,0.613,208,0.613,209,0.634,210,0.677,211,0.724,253,1.519,284,3.269,290,3.269,292,0.881,293,1.287,296,1.523,299,1.994,351,0.774,431,4.992,435,1.456,437,1.739,439,3.919,441,4.383,445,4.025,447,3.377,451,4.249,453,4.25,461,2.553,468,2.314,469,2.314,470,2.553,471,2.553,472,2.269,478,2.855,480,1.951,483,2.387,485,1.681,486,1.681,495,1.013,497,1.715,499,3.269,507,1.715,521,3.269,527,2.387,542,2.553,596,3.931,597,5.2,598,3.931,599,3.931,607,3.931,611,3.931,613,2.553,628,5.363,629,2.197,630,3.552,631,3.552,632,5.019,633,3.552,634,3.028,635,3.028,636,3.028,637,3.028,638,3.028,639,2.387,640,2.387,641,3.269,642,2.642,643,2.642,644,3.028,645,2.197,646,3.028,647,2.387,648,5.961,649,4.506]],["title/modules/CandidatesModule.html",[212,0.693,650,2.953]],["body/modules/CandidatesModule.html",[0,0.049,2,0.134,3,0.118,4,0.085,17,0.927,31,0.013,49,0.315,53,0.151,60,0.01,61,0.01,79,1.206,97,0.275,150,0.805,159,1.572,160,1.15,162,1.572,164,1.572,166,1.572,212,1.072,214,2.21,215,3.271,216,2.304,217,2.21,225,3.816,226,3.092,227,2.407,228,1.531,233,2.261,234,2.777,237,2.93,238,3.567,239,2.641,240,2.641,350,3.235,351,1.252,355,3.99,356,2.641,432,3.556,513,3.556,628,3.556,650,6.141,651,4.276,652,4.276,653,4.276,654,3.816,655,5.248,656,4.403,657,4.902,658,3.864,659,3.864,660,3.106,661,3.106,662,3.556,663,4.276]],["title/modules/CandidatesRoutingModule.html",[212,0.693,655,2.749]],["body/modules/CandidatesRoutingModule.html",[0,0.056,2,0.152,3,0.133,4,0.096,6,2.758,17,1.003,31,0.013,49,0.307,51,1.421,53,0.163,60,0.01,61,0.01,79,1.262,97,0.312,108,2.146,121,0.216,159,1.491,160,1.244,162,1.379,164,1.379,166,1.379,212,0.946,233,2.446,267,3.15,268,3.501,271,3.671,376,3.522,378,3.324,431,3.754,432,4.033,513,4.033,628,4.033,655,4.602,658,4.383,660,3.522,661,3.522,663,4.85,664,4.383,665,4.383,666,5.56]],["title/components/CategoriesComponent.html",[121,0.111,168,0.823]],["body/components/CategoriesComponent.html",[0,0.053,2,0.079,3,0.07,4,0.05,8,0.698,16,0.798,17,1.005,19,1.387,20,0.396,21,0.977,23,0.884,25,0.667,27,1.104,28,0.759,30,1.306,31,0.013,32,0.851,33,0.922,34,1.03,37,1.434,41,1.568,47,1.195,48,1.917,49,0.265,53,0.07,55,2.354,56,2.29,60,0.008,61,0.007,62,0.892,65,0.508,74,0.914,79,0.862,87,0.692,95,1.705,97,0.163,99,1.214,100,0.742,121,0.171,122,0.608,123,0.695,124,0.695,126,0.629,127,1.855,128,1.794,129,0.695,150,0.477,151,1.011,152,1.045,153,1.011,154,1.396,155,0.695,156,0.695,157,0.588,158,0.695,159,0.588,160,1.246,161,1.255,162,0.588,163,0.695,164,0.588,165,1.045,166,0.588,167,1.255,168,1.42,169,1.045,170,0.588,171,0.695,172,0.608,173,0.695,174,0.608,175,0.608,176,0.588,177,0.695,178,0.608,179,1.045,180,0.608,181,1.045,182,0.588,183,1.679,184,1.255,185,0.695,186,0.588,187,0.695,188,0.588,189,1.045,190,0.588,191,1.045,192,0.588,193,0.695,194,0.588,195,0.695,196,0.588,197,0.588,198,0.588,199,0.695,200,0.568,201,0.695,202,0.588,203,0.588,204,0.588,205,0.588,206,0.744,207,0.588,208,0.588,209,0.608,210,0.65,211,0.695,253,1.482,292,0.854,293,1.255,296,1.492,299,1.954,351,0.742,435,1.412,437,1.687,439,3.866,442,4.608,447,3.308,453,4.21,461,2.475,468,2.279,469,2.279,470,2.475,471,2.475,472,2.243,478,2.768,480,1.892,485,1.64,486,1.64,494,1.962,495,1.462,497,2.475,507,1.646,542,2.475,613,3.308,632,4.95,641,3.169,645,2.108,667,2.535,668,3.406,669,4.369,670,3.811,671,3.811,672,3.811,673,3.811,674,4.236,675,2.535,676,4.448,677,4.369,678,3.811,679,2.906,680,3.811,681,2.906,682,3.811,683,2.906,684,2.906,685,2.906,686,2.906,687,2.906,688,2.906,689,2.906,690,2.906,691,2.29,692,2.906,693,2.906,694,2.906,695,2.906,696,2.535,697,3.444,698,2.906,699,2.906]],["title/modules/CategoriesModule.html",[212,0.693,700,2.953]],["body/modules/CategoriesModule.html",[0,0.055,2,0.151,3,0.132,4,0.095,31,0.013,49,0.314,53,0.162,60,0.01,61,0.01,97,0.309,135,2.481,150,0.904,168,1.619,212,1.153,214,2.481,215,3.449,216,2.587,217,2.481,225,3.929,226,3.325,227,2.702,228,1.719,233,2.431,234,3.117,237,3.29,238,3.836,239,2.964,240,2.964,350,3.479,351,1.406,355,4.291,356,2.964,668,2.205,700,6.025,701,4.801,702,4.801,703,4.801,704,5.404,705,5.503,706,4.338,707,6.772,708,4.801]],["title/modules/CategoriesRoutingModule.html",[212,0.693,704,2.749]],["body/modules/CategoriesRoutingModule.html",[0,0.061,2,0.165,3,0.145,4,0.105,6,2.837,31,0.013,49,0.298,51,1.546,53,0.172,60,0.011,61,0.011,97,0.34,108,2.335,121,0.165,168,1.451,212,1.03,233,2.574,267,3.427,268,3.683,271,3.259,362,3.832,378,3.616,668,2.424,704,4.842,706,4.768,709,6.049]],["title/classes/Category.html",[0,0.041,668,1.631]],["body/classes/Category.html",[0,0.076,2,0.16,3,0.141,4,0.102,8,0.653,20,0.8,21,1.575,28,0.77,31,0.013,32,0.853,33,1.11,34,1.379,53,0.141,60,0.011,61,0.011,65,0.681,82,2.806,95,2.335,106,4.459,107,4.532,421,4.955,668,3.341,710,5.114,711,5.862,712,5.862,713,5.862,714,7.038,715,5.862]],["title/injectables/CategoryService.html",[62,0.622,676,2.579]],["body/injectables/CategoryService.html",[0,0.059,2,0.098,3,0.085,4,0.062,8,0.758,13,3.989,16,0.927,17,0.948,19,0.942,20,0.487,21,1.136,23,1.472,25,0.775,27,1.2,28,0.743,30,1.522,31,0.013,32,0.824,33,1.041,34,1.2,37,0.974,41,2.443,47,1.405,49,0.267,52,1.751,53,0.085,60,0.01,61,0.008,62,1.039,65,0.59,69,3.216,71,2.408,72,4.311,74,1.062,75,3.92,76,3.216,83,2.492,90,4.001,91,1.889,95,1.482,97,0.2,98,1.832,99,1.796,100,0.911,101,3.216,102,2.259,103,2.259,104,2.132,105,1.832,106,2.259,107,3.648,108,2.73,110,2.408,111,2.788,112,4.079,113,5.08,114,1.944,117,2.408,119,2.408,120,1.485,160,1.175,246,2.408,388,4.428,412,5.617,413,5.617,613,3.648,622,2.587,668,3.389,671,4.428,672,4.428,673,4.428,674,4.671,676,4.48,678,4.428,680,4.428,682,4.428,716,3.111,717,6.439,718,5.076,719,3.566,720,3.566,721,3.566,722,3.566,723,3.566,724,5.076,725,5.076,726,5.076,727,5.076]],["title/modules/CoreModule.html",[212,0.693,224,2.749]],["body/modules/CoreModule.html",[0,0.053,2,0.143,3,0.126,4,0.091,14,3.135,31,0.013,34,1.266,41,1.882,45,3.541,47,0.893,49,0.306,53,0.126,60,0.01,61,0.01,62,0.801,85,3.135,91,2.446,97,0.294,105,2.694,133,2.736,212,1.346,213,3.929,215,2.465,217,3.495,224,5.34,233,2.702,243,3.322,277,4.768,299,2.199,304,4.164,350,3.376,351,1.34,352,6.262,360,4.575,361,5.734,362,4.164,363,5.734,364,4.134,365,4.575,366,6.262,367,4.575,368,4.575,369,4.575,370,4.575,371,4.575,372,3.135,728,5.244,729,7.179,730,5.244,731,5.244,732,5.244,733,5.244,734,5.244,735,5.244,736,4.575,737,6.573,738,5.244,739,6.573,740,5.244,741,5.244,742,6.573,743,5.244]],["title/components/DashboardComponent.html",[121,0.111,170,0.823]],["body/components/DashboardComponent.html",[0,0.059,2,0.098,3,0.086,4,0.062,8,0.4,16,0.931,17,0.873,19,0.948,20,0.49,21,1.141,25,0.906,28,0.606,31,0.013,32,0.618,33,0.751,37,0.98,47,0.611,48,0.98,49,0.275,53,0.086,60,0.008,61,0.008,65,0.593,79,1.197,87,1.123,97,0.202,121,0.187,122,0.751,123,0.858,124,0.858,126,0.777,127,1.886,128,1.824,129,1.219,130,5.576,150,0.59,151,1.18,152,1.219,153,1.18,154,1.544,155,0.858,156,0.858,157,0.726,158,0.858,159,0.726,160,1.083,161,1.418,162,0.726,163,0.858,164,0.726,165,1.219,166,0.726,167,1.418,168,0.726,169,1.219,170,1.434,171,0.858,172,0.751,173,0.858,174,0.751,175,0.751,176,0.726,177,0.858,178,0.751,179,1.219,180,0.751,181,1.219,182,0.726,183,1.781,184,1.418,185,0.858,186,0.726,187,0.858,188,0.726,189,1.219,190,0.726,191,1.219,192,0.726,193,0.858,194,0.726,195,0.858,196,0.726,197,0.726,198,0.726,199,0.858,200,0.702,201,0.858,202,0.726,203,0.726,204,0.726,205,0.726,206,1.206,207,0.726,208,0.726,209,0.751,210,0.803,211,0.858,253,1.926,271,4.141,275,3.7,292,0.997,293,1.418,296,1.65,440,5.174,472,2.507,485,2.131,486,2.131,558,4.676,668,2.588,744,3.132,745,5.174,746,4.449,747,5.174,748,5.174,749,5.174,750,5.932,751,3.48,752,3.59,753,3.59,754,3.076,755,4.685,756,5.932,757,5.932,758,5.932,759,5.932,760,3.59,761,2.788,762,3.59]],["title/modules/DashboardModule.html",[212,0.693,763,2.953]],["body/modules/DashboardModule.html",[0,0.054,2,0.148,3,0.13,4,0.094,31,0.013,49,0.311,53,0.161,60,0.01,61,0.01,97,0.305,150,0.892,170,1.614,212,1.143,214,2.448,215,3.428,216,2.552,217,2.448,225,3.916,226,3.297,227,2.665,228,1.696,233,2.411,234,3.076,237,3.245,275,3.938,350,3.45,351,1.387,656,4.519,662,3.938,763,6.114,764,4.736,765,4.736,766,4.736,767,5.386,768,5.386,769,5.429,770,5.429,771,4.736]],["title/modules/DashboardRoutingModule.html",[212,0.693,767,2.749]],["body/modules/DashboardRoutingModule.html",[0,0.056,2,0.152,3,0.134,4,0.097,6,2.759,31,0.013,49,0.298,51,1.423,53,0.164,60,0.01,61,0.01,79,0.915,87,0.882,97,0.313,108,2.15,121,0.187,170,1.38,176,1.38,206,0.948,212,0.948,233,2.449,267,3.155,268,3.505,271,4.379,273,6.706,275,4.04,280,4.39,281,4.39,282,4.39,376,3.528,378,3.329,668,2.232,755,4.949,767,4.607,771,4.858,772,5.569,773,5.569,774,5.569,775,5.569,776,5.569,777,5.569]],["title/classes/Error.html",[0,0.041,91,1.515]],["body/classes/Error.html",[0,0.076,2,0.124,3,0.108,4,0.079,8,0.504,20,0.617,21,1.337,23,1.209,25,0.691,27,1.054,28,0.462,31,0.013,33,0.88,49,0.297,51,1.156,53,0.108,60,0.01,61,0.009,62,0.913,65,0.778,74,0.947,91,3.054,95,2.078,97,0.254,99,1.382,100,1.156,114,1.366,120,2.488,121,0.163,127,1.012,128,0.979,132,3.293,200,1.309,210,1.012,253,1.89,259,2.324,272,2.705,292,0.885,293,1.082,294,2.81,295,2.127,299,1.514,315,1.747,328,3.082,339,3.567,356,2.437,377,3.282,392,2.127,393,3.146,434,4.24,435,1.462,437,1.747,443,4.24,448,2.866,468,2.319,469,2.319,472,2.375,480,2.588,485,2.091,486,2.091,501,3.787,502,3.055,503,3.055,778,3.567,779,4.525,780,3.947,781,5.839,782,5.839,783,5.276,784,3.947,785,5.214,786,3.947,787,3.947,788,3.947,789,3.947,790,3.282,791,3.947,792,3.947,793,3.947,794,3.947]],["title/classes/Error-1.html",[0,0.034,91,1.263,587,2.15]],["body/classes/Error-1.html",[0,0.078,2,0.171,3,0.149,4,0.108,8,0.695,20,0.851,21,1.633,28,0.637,31,0.013,33,0.918,53,0.149,60,0.011,61,0.011,65,0.725,91,3.132,95,2.26,480,3.161,795,5.44,796,6.236]],["title/components/ErrorComponent.html",[121,0.111,172,0.852]],["body/components/ErrorComponent.html",[0,0.064,2,0.114,3,0.1,4,0.072,8,0.463,16,1.03,17,0.944,20,0.567,25,0.979,28,0.702,31,0.013,32,0.684,33,0.831,47,0.707,48,1.134,49,0.213,53,0.1,60,0.009,61,0.009,65,0.656,79,1.053,82,2.1,87,0.894,91,3.048,95,1.647,97,0.233,121,0.197,122,0.869,123,0.993,124,0.993,126,0.898,127,1.905,128,1.842,129,0.993,130,5.505,150,0.682,151,1.305,152,1.349,153,1.305,154,1.644,155,0.993,156,0.993,157,0.84,158,0.993,159,0.84,160,1.17,161,1.533,162,0.84,163,0.993,164,0.84,165,1.349,166,0.84,167,1.533,168,0.84,169,1.349,170,0.84,171,0.993,172,1.552,173,0.993,174,0.869,175,0.869,176,0.84,177,0.993,178,0.869,179,1.349,180,0.869,181,1.349,182,0.84,183,1.846,184,1.72,185,0.993,186,0.84,187,0.993,188,0.84,189,1.349,190,0.84,191,1.349,192,0.84,193,0.993,194,0.84,195,0.993,196,0.84,197,0.84,198,0.84,199,0.993,200,0.812,201,0.993,202,0.84,203,0.84,204,0.84,205,0.84,206,0.96,207,0.84,208,0.84,209,0.869,210,0.929,211,0.993,292,1.103,293,1.533,296,1.757,435,1.824,437,2.178,480,2.443,797,3.622,798,5.643,799,5.643,800,3.694,801,5.643,802,4.153,803,4.153]],["title/pipes/FilterPipe.html",[111,1.762,654,1.998]],["body/pipes/FilterPipe.html",[0,0.074,2,0.153,3,0.134,4,0.097,8,0.762,16,1.02,27,1.205,28,0.571,30,1.25,31,0.013,32,0.956,33,0.823,34,0.985,47,1.257,49,0.211,53,0.134,60,0.01,61,0.01,65,0.795,79,1.336,95,2.247,97,0.314,111,3.199,126,1.209,206,1.31,292,1.093,480,2.96,645,4.054,654,3.778,804,4.875,805,6.067,806,4.405,807,6.837,808,6.332,809,5.589,810,5.389,811,4.405,812,5.589,813,5.589]],["title/pipes/FilterPipe-1.html",[111,1.469,587,2.15,654,1.666]],["body/pipes/FilterPipe-1.html",[0,0.074,2,0.151,3,0.132,4,0.096,8,0.756,16,1.006,27,1.195,28,0.563,30,1.233,31,0.013,32,0.889,33,0.811,34,0.972,47,1.304,49,0.208,53,0.132,60,0.01,61,0.01,65,0.788,87,1.285,95,2.236,97,0.31,111,3.179,126,1.193,292,1.078,480,2.387,654,3.76,668,3.069,805,6.457,806,4.345,808,6.311,810,5.344,811,4.345,814,4.809,815,5.914,816,5.512,817,4.809,818,4.345,819,4.809,820,4.809]],["title/pipes/FilterPipe-2.html",[111,1.469,654,1.666,821,2.96]],["body/pipes/FilterPipe-2.html",[0,0.074,2,0.151,3,0.132,4,0.096,8,0.756,16,1.008,27,1.196,28,0.564,30,1.235,31,0.013,32,0.89,33,0.813,34,0.974,47,1.304,49,0.209,53,0.132,60,0.01,61,0.01,65,0.789,87,1.286,95,2.237,97,0.31,111,3.182,126,1.195,292,1.08,654,3.763,668,3.071,805,6.459,806,4.353,808,6.313,810,5.349,811,4.353,815,5.92,817,4.817,818,4.353,819,4.817,820,4.817,822,4.817,823,5.522]],["title/components/HomeCandidatesComponent.html",[121,0.111,174,0.852]],["body/components/HomeCandidatesComponent.html",[0,0.062,2,0.106,3,0.093,4,0.067,8,0.6,16,0.982,17,0.91,19,1.023,20,0.529,21,1.204,23,0.784,25,0.822,27,0.683,28,0.682,30,0.867,31,0.013,32,0.749,33,0.792,34,0.683,37,1.058,47,0.916,48,1.469,49,0.233,53,0.093,60,0.009,61,0.008,62,0.822,65,0.625,74,1.126,79,1.317,82,2.3,86,4.601,87,0.852,97,0.218,99,1.244,100,0.99,121,0.192,122,0.811,123,0.926,124,0.926,126,0.838,127,1.896,128,1.834,129,0.926,150,0.636,151,1.244,152,1.286,153,1.244,154,1.597,155,0.926,156,0.926,157,0.784,158,0.926,159,0.784,160,1.128,161,1.478,162,0.784,163,0.926,164,0.784,165,1.286,166,0.784,167,1.478,168,0.784,169,1.286,170,0.784,171,0.926,172,0.811,173,0.926,174,1.589,175,0.811,176,0.784,177,0.926,178,0.811,179,1.286,180,0.811,181,1.286,182,0.784,183,1.816,184,1.478,185,0.926,186,0.784,187,0.926,188,0.784,189,1.286,190,0.784,191,1.286,192,0.784,193,0.926,194,0.784,195,0.926,196,0.784,197,0.784,198,0.784,199,0.926,200,0.757,201,0.926,202,0.784,203,0.784,204,0.784,205,0.784,206,0.916,207,0.784,208,0.784,209,0.811,210,0.867,211,0.926,292,1.052,293,1.478,296,1.706,299,1.8,437,2.077,445,4.51,451,4.54,495,1.296,527,3.054,560,3.216,642,3.379,643,3.379,824,4.739,825,5.531,826,3.379,827,5.38,828,5.38,829,3.874,830,4.845,831,3.874,832,3.874,833,2.81,834,2.81]],["title/components/HomeCategoriesComponent.html",[121,0.111,175,0.852]],["body/components/HomeCategoriesComponent.html",[0,0.062,2,0.107,3,0.094,4,0.068,8,0.603,16,0.987,17,0.913,19,1.031,20,0.532,21,1.21,23,0.789,25,0.826,27,0.688,28,0.684,30,0.873,31,0.013,32,0.752,33,0.796,34,0.688,37,1.065,47,0.92,48,1.476,49,0.234,53,0.094,60,0.009,61,0.008,62,0.826,65,0.629,74,1.131,79,1.019,82,2.309,86,4.611,87,0.857,97,0.219,99,1.251,100,0.997,121,0.192,122,0.816,123,0.933,124,0.933,126,0.844,127,1.897,128,1.835,129,0.933,150,0.641,151,1.251,152,1.293,153,1.251,154,1.602,155,0.933,156,0.933,157,0.789,158,0.933,159,0.789,160,1.133,161,1.484,162,0.789,163,0.933,164,0.789,165,1.293,166,0.789,167,1.484,168,0.789,169,1.293,170,0.789,171,0.933,172,0.816,173,0.933,174,0.816,175,1.592,176,0.789,177,0.933,178,0.816,179,1.293,180,0.816,181,1.293,182,0.789,183,1.819,184,1.484,185,0.933,186,0.789,187,0.933,188,0.789,189,1.293,190,0.789,191,1.293,192,0.789,193,0.933,194,0.789,195,0.933,196,0.789,197,0.789,198,0.789,199,0.933,200,0.763,201,0.933,202,0.789,203,0.789,204,0.789,205,0.789,206,0.92,207,0.789,208,0.789,209,0.816,210,0.873,211,0.933,292,1.057,293,1.484,296,1.712,299,1.809,437,2.087,495,1.305,560,3.232,668,3.049,670,4.717,674,4.86,675,3.404,676,4.82,691,3.076,696,3.404,824,4.751,830,3.922,833,2.831,834,2.831,835,5.546,836,3.404,837,5.407,838,3.902,839,3.902,840,3.404]],["title/components/HomeComponent.html",[121,0.111,176,0.823]],["body/components/HomeComponent.html",[0,0.066,2,0.121,3,0.106,4,0.077,8,0.495,16,1.077,17,0.976,20,0.606,25,1.013,28,0.602,31,0.013,32,0.715,47,0.755,48,1.212,49,0.168,53,0.106,60,0.009,61,0.009,65,0.686,79,1.089,87,0.935,97,0.249,121,0.201,122,0.928,123,1.061,124,1.061,126,0.96,127,1.912,128,1.85,129,1.061,150,0.729,151,1.365,152,1.411,153,1.365,154,1.689,155,1.061,156,1.061,157,0.898,158,1.061,159,0.898,160,1.21,161,1.585,162,0.898,163,1.061,164,0.898,165,1.411,166,0.898,167,1.585,168,0.898,169,1.411,170,0.898,171,1.061,172,0.928,173,1.061,174,0.928,175,0.928,176,1.53,177,1.061,178,0.928,179,1.411,180,0.928,181,1.411,182,0.898,183,1.874,184,1.585,185,1.061,186,0.898,187,1.061,188,0.898,189,1.411,190,0.898,191,1.411,192,0.898,193,1.061,194,0.898,195,1.061,196,0.898,197,0.898,198,0.898,199,1.061,200,0.868,201,1.061,202,0.898,203,0.898,204,0.898,205,0.898,206,1.004,207,0.898,208,0.898,209,0.928,210,0.993,211,1.061,292,1.154,293,1.585,296,1.805,435,1.907,437,2.278,755,4.281,841,3.871,842,5.901,843,5.901,844,4.438,845,4.438]],["title/modules/HomeModule.html",[212,0.693,768,2.749]],["body/modules/HomeModule.html",[0,0.051,2,0.139,3,0.122,4,0.088,31,0.013,49,0.315,51,1.3,53,0.155,60,0.01,61,0.01,97,0.286,150,0.836,174,1.642,175,1.642,176,1.587,178,1.642,180,1.642,212,1.097,214,2.294,215,3.328,216,2.392,217,2.294,225,3.853,226,3.166,227,2.498,228,1.589,233,2.315,237,3.041,243,3.223,252,5.625,253,1.436,254,4.01,255,4.01,268,3.312,350,3.312,351,1.3,355,4.085,356,2.74,658,4.01,706,4.01,755,5.4,768,5.685,825,4.01,835,4.01,846,4.438,847,4.438,848,5.087,849,5.087,850,5.087,851,4.01,852,4.01,853,4.01,854,4.01]],["title/components/HomeQuestionsComponent.html",[121,0.111,178,0.852]],["body/components/HomeQuestionsComponent.html",[0,0.062,2,0.106,3,0.093,4,0.067,8,0.6,16,0.982,17,0.91,19,1.023,20,0.529,21,1.204,23,0.784,25,0.822,27,0.683,28,0.682,30,0.867,31,0.013,32,0.749,33,0.792,34,0.683,37,1.058,47,0.916,48,1.469,49,0.233,53,0.093,60,0.009,61,0.008,62,0.822,65,0.625,74,1.126,79,1.015,82,2.3,86,4.601,87,1.261,97,0.218,99,1.244,100,0.99,121,0.192,122,0.811,123,0.926,124,0.926,126,0.838,127,1.896,128,1.834,129,0.926,150,0.636,151,1.244,152,1.286,153,1.244,154,1.597,155,0.926,156,0.926,157,0.784,158,0.926,159,0.784,160,1.128,161,1.478,162,0.784,163,0.926,164,0.784,165,1.286,166,0.784,167,1.478,168,0.784,169,1.286,170,0.784,171,0.926,172,0.811,173,0.926,174,0.811,175,0.811,176,0.784,177,0.926,178,1.589,179,1.286,180,0.811,181,1.286,182,0.784,183,1.816,184,1.478,185,0.926,186,0.784,187,0.926,188,0.784,189,1.286,190,0.784,191,1.286,192,0.784,193,0.926,194,0.784,195,0.926,196,0.784,197,0.784,198,0.784,199,0.926,200,0.757,201,0.926,202,0.784,203,0.784,204,0.784,205,0.784,206,0.916,207,0.784,208,0.784,209,0.811,210,0.867,211,0.926,292,1.052,293,1.478,296,1.706,299,1.8,437,2.077,495,1.296,560,3.216,824,4.739,830,4.845,833,2.81,834,2.81,851,5.531,855,3.379,856,5.38,857,4.51,858,3.379,859,4.54,860,5.38,861,3.874,862,3.874,863,3.379,864,3.054,865,3.379]],["title/components/HomeScreensComponent.html",[121,0.111,180,0.852]],["body/components/HomeScreensComponent.html",[0,0.062,2,0.106,3,0.093,4,0.067,8,0.6,16,0.982,17,0.91,19,1.023,20,0.529,21,1.204,23,0.784,25,0.822,27,0.683,28,0.682,30,0.867,31,0.013,32,0.749,33,0.792,34,0.683,37,1.058,47,0.916,48,1.469,49,0.233,53,0.093,60,0.009,61,0.008,62,0.822,65,0.625,74,1.126,79,1.015,82,2.3,86,4.601,87,0.852,97,0.218,99,1.244,100,0.99,121,0.192,122,0.811,123,0.926,124,0.926,126,0.838,127,1.896,128,1.834,129,0.926,150,0.636,151,1.244,152,1.286,153,1.244,154,1.597,155,0.926,156,0.926,157,0.784,158,0.926,159,0.784,160,1.128,161,1.478,162,0.784,163,0.926,164,0.784,165,1.286,166,0.784,167,1.478,168,0.784,169,1.286,170,0.784,171,0.926,172,0.811,173,0.926,174,0.811,175,0.811,176,0.784,177,0.926,178,0.811,179,1.286,180,1.589,181,1.286,182,0.784,183,1.816,184,1.478,185,0.926,186,0.784,187,0.926,188,0.784,189,1.286,190,0.784,191,1.286,192,0.784,193,0.926,194,0.784,195,0.926,196,0.784,197,0.784,198,0.784,199,0.926,200,0.757,201,0.926,202,0.784,203,0.784,204,0.784,205,0.784,206,1.355,207,0.784,208,0.784,209,0.811,210,0.867,211,0.926,292,1.052,293,1.478,296,1.706,299,1.8,437,2.077,446,4.231,452,4.302,484,3.054,492,3.054,495,1.296,560,3.216,824,4.739,830,4.845,833,2.81,834,2.81,853,5.531,866,3.379,867,5.38,868,3.379,869,5.38,870,3.874,871,3.874,872,3.379]],["title/classes/HttpResult.html",[0,0.041,99,0.941]],["body/classes/HttpResult.html",[0,0.066,2,0.12,3,0.105,4,0.076,8,0.652,16,1.068,20,0.598,23,1.184,25,0.894,27,1.032,28,0.786,30,0.981,31,0.013,32,0.531,33,0.645,34,0.773,36,3.455,47,1.398,53,0.105,60,0.009,61,0.009,65,0.51,74,1.225,75,4.211,82,2.452,85,4.505,91,2.976,95,2.138,99,1.694,315,2.909,399,3.18,480,2.853,504,6.065,818,3.455,873,6.82,874,3.824,875,7.031,876,7.031,877,7.031,878,7.031,879,7.031,880,7.031,881,4.383,882,8.211,883,4.383,884,4.383,885,4.383,886,5.853,887,5.853,888,5.853,889,5.853,890,4.383,891,4.383,892,6.133,893,4.383,894,5.853,895,4.383,896,4.383,897,4.383,898,4.383,899,4.383,900,4.383,901,4.383,902,5.853,903,5.853,904,3.824,905,4.383,906,4.383,907,4.383,908,4.383,909,4.383,910,4.383]],["title/classes/InMemoryDataService.html",[0,0.041,247,2.953]],["body/classes/InMemoryDataService.html",[0,0.043,2,0.078,3,0.069,4,0.05,13,3.199,16,0.79,19,1.533,20,0.392,21,0.968,28,0.714,30,1.166,31,0.013,32,0.823,33,0.854,34,0.919,37,1.585,47,1.261,49,0.197,52,1.409,53,0.069,60,0.007,61,0.007,79,1.116,83,3.979,87,1.243,98,1.474,107,3.287,108,2.527,151,1.514,206,1.305,243,3.301,244,5.292,245,2.262,246,1.938,247,3.14,259,2.223,292,0.846,335,2.082,419,4.21,420,5.062,421,4.859,422,5.062,423,4.574,496,1.938,499,2.082,512,3.412,521,4.21,560,4.181,587,4.972,668,3.236,697,2.262,736,3.776,761,1.349,821,6.8,892,5.432,904,2.503,911,6.244,912,2.503,913,5.211,914,5.803,915,4.328,916,4.328,917,4.328,918,5.803,919,4.328,920,4.328,921,4.328,922,5.803,923,4.328,924,4.328,925,4.328,926,4.328,927,4.328,928,2.87,929,4.328,930,6.547,931,4.328,932,4.328,933,5.711,934,4.328,935,4.328,936,4.328,937,4.328,938,4.328,939,5.803,940,2.87,941,4.328,942,4.328,943,4.328,944,2.87,945,4.574,946,4.328,947,5.803,948,5.803,949,4.328,950,2.87,951,2.87,952,4.328,953,2.87,954,4.328,955,4.328,956,2.87,957,4.328,958,5.211,959,2.87,960,4.328,961,6.547,962,2.87,963,2.87,964,2.87,965,2.87,966,4.328,967,2.87,968,2.87,969,2.87,970,4.328,971,4.328,972,2.87,973,6.227,974,3.199,975,2.87,976,6.227,977,2.87,978,4.328,979,4.328,980,4.328,981,3.776,982,4.328,983,4.328,984,4.328,985,2.87,986,4.328,987,2.87,988,2.87,989,2.87,990,2.87,991,3.776,992,2.87,993,2.87,994,2.87,995,2.87,996,2.87,997,2.87,998,2.87,999,2.87,1000,2.87,1001,2.87,1002,2.87,1003,2.87,1004,2.87,1005,2.87,1006,2.87,1007,2.87,1008,2.87,1009,2.082]],["title/components/LayoutCardBodyComponent.html",[121,0.111,182,0.823]],["body/components/LayoutCardBodyComponent.html",[0,0.079,2,0.078,3,0.068,4,0.049,8,0.317,17,0.763,23,1.411,25,1.112,27,1.018,28,0.29,31,0.013,32,0.521,49,0.27,51,0.727,53,0.171,60,0.008,61,0.007,62,0.434,65,0.846,74,0.595,79,0.851,87,0.681,97,0.241,99,0.994,100,0.727,114,0.859,121,0.207,122,0.595,123,0.68,124,0.68,126,0.615,127,1.874,128,1.812,129,1.74,132,2.502,133,2.158,135,1.282,136,1.461,137,2.836,139,2.208,142,1.396,143,1.461,144,1.461,145,1.461,146,1.461,148,1.461,149,1.396,150,0.467,151,0.994,152,1.028,153,0.994,154,1.381,155,0.68,156,0.68,157,0.575,158,0.68,159,0.575,160,0.946,161,1.239,162,0.575,163,0.68,164,0.575,165,1.028,166,0.575,167,1.239,168,0.575,169,1.028,170,0.575,171,0.68,172,0.595,173,0.68,174,0.595,175,0.595,176,0.575,177,0.68,178,0.595,179,1.028,180,0.595,181,1.028,182,1.32,183,1.885,184,1.668,185,0.68,186,1.049,187,0.68,188,1.049,189,1.028,190,1.049,191,1.028,192,1.049,193,0.68,194,1.049,195,0.68,196,1.049,197,1.169,198,1.049,199,0.68,200,0.556,201,0.68,202,0.575,203,0.575,204,0.575,205,0.575,206,0.732,207,0.575,208,0.575,209,0.595,210,0.636,211,0.68,228,1.343,253,0.803,285,1.461,288,2.208,292,0.841,293,1.028,294,2.021,295,1.337,296,0.727,309,1.461,312,1.282,315,1.098,328,2.405,341,2.021,351,0.727,382,1.461,392,1.337,393,1.337,435,1.39,455,2.916,468,0.985,469,0.985,472,1.343,485,0.888,486,0.888,495,0.952,751,3.203,754,1.282,761,2.021,800,2.208,974,2.208,1010,1.461,1011,2.844,1012,2.316,1013,1.532,1014,2.437,1015,2.792,1016,1.532,1017,1.532,1018,2.208,1019,1.532,1020,1.532,1021,1.461,1022,2.316,1023,1.461,1024,1.532,1025,1.532,1026,1.532,1027,2.792,1028,1.532,1029,1.532,1030,1.532,1031,1.532,1032,1.532,1033,1.532,1034,1.532,1035,2.316,1036,2.316,1037,1.532,1038,1.532,1039,3.112,1040,1.532,1041,1.532,1042,1.532,1043,1.532,1044,1.532,1045,1.532,1046,1.532,1047,2.316,1048,1.532,1049,1.532,1050,1.532,1051,1.532,1052,2.316,1053,1.532,1054,2.316,1055,1.532,1056,1.532,1057,2.316,1058,1.532]],["title/components/LayoutCardComponent.html",[121,0.111,186,0.823]],["body/components/LayoutCardComponent.html",[0,0.079,2,0.078,3,0.068,4,0.049,8,0.317,17,0.763,23,1.411,25,1.112,27,1.018,28,0.29,31,0.013,32,0.521,49,0.27,51,0.726,53,0.171,60,0.008,61,0.007,62,0.434,65,0.846,74,0.595,79,0.851,87,0.681,97,0.241,99,0.994,100,0.726,114,0.858,121,0.207,122,0.595,123,0.679,124,0.679,126,0.615,127,1.874,128,1.812,129,1.74,132,2.5,133,2.157,135,1.281,136,1.46,137,2.835,139,2.207,142,1.395,143,1.46,144,1.46,145,1.46,146,1.46,148,1.46,149,1.395,150,0.467,151,0.994,152,1.027,153,0.994,154,1.381,155,0.679,156,0.679,157,0.575,158,0.679,159,0.575,160,0.946,161,1.239,162,0.575,163,0.679,164,0.575,165,1.027,166,0.575,167,1.239,168,0.575,169,1.027,170,0.575,171,0.679,172,0.595,173,0.679,174,0.595,175,0.595,176,0.575,177,0.679,178,0.595,179,1.027,180,0.595,181,1.027,182,1.048,183,1.885,184,1.668,185,0.679,186,1.319,187,0.679,188,1.048,189,1.027,190,1.048,191,1.027,192,1.048,193,0.679,194,1.048,195,0.679,196,1.048,197,1.168,198,1.048,199,0.679,200,0.556,201,0.679,202,0.575,203,0.575,204,0.575,205,0.575,206,0.731,207,0.575,208,0.575,209,0.595,210,0.636,211,0.679,228,1.342,253,0.802,285,1.46,288,2.207,292,0.84,293,1.027,294,2.02,295,1.336,296,0.726,309,1.46,312,1.281,315,1.097,328,2.404,341,2.02,351,0.726,382,1.46,392,1.336,393,1.336,435,1.674,455,2.915,468,0.985,469,0.985,472,1.342,485,0.888,486,0.888,495,0.951,751,3.202,754,1.281,761,2.02,800,2.207,974,1.46,1010,1.46,1012,2.314,1013,1.531,1014,2.435,1015,2.791,1016,1.531,1017,1.531,1018,2.207,1019,1.531,1020,1.531,1021,1.46,1022,2.314,1023,1.46,1024,1.531,1025,1.531,1026,1.531,1027,2.791,1028,1.531,1029,1.531,1030,1.531,1031,1.531,1032,1.531,1033,1.531,1034,1.531,1035,2.314,1036,2.314,1037,1.531,1038,1.531,1039,3.111,1040,1.531,1041,1.531,1042,1.531,1043,1.531,1044,1.531,1045,1.531,1046,1.531,1047,2.314,1048,1.531,1049,1.531,1050,1.531,1051,1.531,1052,2.314,1053,1.531,1054,2.314,1055,1.531,1056,1.531,1057,2.791,1058,1.531,1059,2.842]],["title/components/LayoutCardFooterComponent.html",[121,0.111,188,0.823]],["body/components/LayoutCardFooterComponent.html",[0,0.079,2,0.078,3,0.068,4,0.049,8,0.317,17,0.763,23,1.411,25,1.112,27,1.018,28,0.29,31,0.013,32,0.521,49,0.27,51,0.727,53,0.171,60,0.008,61,0.007,62,0.434,65,0.846,74,0.595,79,0.851,87,0.681,97,0.241,99,0.994,100,0.727,114,0.859,121,0.207,122,0.595,123,0.68,124,0.68,126,0.615,127,1.874,128,1.812,129,1.74,132,2.502,133,2.158,135,1.282,136,1.461,137,2.836,139,2.208,142,1.396,143,1.461,144,1.461,145,1.461,146,1.461,148,1.461,149,1.396,150,0.467,151,0.994,152,1.028,153,0.994,154,1.381,155,0.68,156,0.68,157,0.575,158,0.68,159,0.575,160,0.946,161,1.239,162,0.575,163,0.68,164,0.575,165,1.028,166,0.575,167,1.239,168,0.575,169,1.028,170,0.575,171,0.68,172,0.595,173,0.68,174,0.595,175,0.595,176,0.575,177,0.68,178,0.595,179,1.028,180,0.595,181,1.028,182,1.049,183,1.885,184,1.668,185,0.68,186,1.049,187,0.68,188,1.32,189,1.028,190,1.049,191,1.028,192,1.049,193,0.68,194,1.049,195,0.68,196,1.049,197,1.169,198,1.049,199,0.68,200,0.556,201,0.68,202,0.575,203,0.575,204,0.575,205,0.575,206,0.732,207,0.575,208,0.575,209,0.595,210,0.636,211,0.68,228,1.343,253,0.803,285,1.461,288,2.208,292,0.841,293,1.028,294,2.021,295,1.337,296,0.727,309,1.461,312,1.282,315,1.098,328,2.405,341,2.021,351,0.727,382,1.461,392,1.337,393,1.337,435,1.39,455,2.916,468,0.985,469,0.985,472,1.343,485,0.888,486,0.888,495,0.952,751,3.203,754,1.282,761,2.021,800,2.208,974,1.461,1010,1.461,1012,2.316,1013,1.532,1014,2.437,1015,2.792,1016,1.532,1017,1.532,1018,2.208,1019,1.532,1020,1.532,1021,1.461,1022,2.316,1023,1.461,1024,1.532,1025,1.532,1026,1.532,1027,2.792,1028,1.532,1029,1.532,1030,1.532,1031,1.532,1032,1.532,1033,1.532,1034,1.532,1035,2.316,1036,2.316,1037,1.532,1038,1.532,1039,3.112,1040,1.532,1041,1.532,1042,1.532,1043,1.532,1044,1.532,1045,1.532,1046,1.532,1047,2.316,1048,1.532,1049,1.532,1050,1.532,1051,1.532,1052,2.792,1053,1.532,1054,2.316,1055,1.532,1056,1.532,1057,2.316,1058,1.532,1060,2.844]],["title/components/LayoutCardHeaderComponent.html",[121,0.111,190,0.823]],["body/components/LayoutCardHeaderComponent.html",[0,0.079,2,0.078,3,0.068,4,0.049,8,0.317,17,0.763,23,1.411,25,1.112,27,1.018,28,0.29,31,0.013,32,0.521,49,0.27,51,0.727,53,0.171,60,0.008,61,0.007,62,0.434,65,0.846,74,0.595,79,0.851,87,0.681,97,0.241,99,0.994,100,0.727,114,0.859,121,0.207,122,0.595,123,0.68,124,0.68,126,0.615,127,1.874,128,1.812,129,1.74,132,2.502,133,2.158,135,1.282,136,1.461,137,2.836,139,2.208,142,1.396,143,1.461,144,1.461,145,1.461,146,1.461,148,1.461,149,1.396,150,0.467,151,0.994,152,1.028,153,0.994,154,1.381,155,0.68,156,0.68,157,0.575,158,0.68,159,0.575,160,0.946,161,1.239,162,0.575,163,0.68,164,0.575,165,1.028,166,0.575,167,1.239,168,0.575,169,1.028,170,0.575,171,0.68,172,0.595,173,0.68,174,0.595,175,0.595,176,0.575,177,0.68,178,0.595,179,1.028,180,0.595,181,1.028,182,1.049,183,1.885,184,1.668,185,0.68,186,1.049,187,0.68,188,1.049,189,1.028,190,1.32,191,1.028,192,1.049,193,0.68,194,1.049,195,0.68,196,1.049,197,1.169,198,1.049,199,0.68,200,0.556,201,0.68,202,0.575,203,0.575,204,0.575,205,0.575,206,0.732,207,0.575,208,0.575,209,0.595,210,0.636,211,0.68,228,1.343,253,0.803,285,1.461,288,2.208,292,0.841,293,1.028,294,2.021,295,1.337,296,0.727,309,1.461,312,1.282,315,1.098,328,2.405,341,2.437,351,0.727,382,1.461,392,1.337,393,1.337,435,1.39,455,2.916,468,0.985,469,0.985,472,1.343,485,0.888,486,0.888,495,0.952,751,3.203,754,1.282,761,2.021,800,2.208,974,1.461,1010,1.461,1012,2.316,1013,1.532,1014,2.437,1015,2.792,1016,1.532,1017,1.532,1018,2.208,1019,1.532,1020,1.532,1021,1.461,1022,2.316,1023,1.461,1024,1.532,1025,1.532,1026,1.532,1027,2.792,1028,1.532,1029,1.532,1030,1.532,1031,1.532,1032,1.532,1033,1.532,1034,1.532,1035,2.316,1036,2.316,1037,1.532,1038,1.532,1039,3.112,1040,1.532,1041,1.532,1042,1.532,1043,1.532,1044,1.532,1045,1.532,1046,1.532,1047,2.316,1048,1.532,1049,1.532,1050,1.532,1051,1.532,1052,2.316,1053,1.532,1054,2.316,1055,1.532,1056,1.532,1057,2.316,1058,1.532,1061,2.844]],["title/components/LayoutComponent.html",[121,0.111,192,0.823]],["body/components/LayoutComponent.html",[0,0.079,2,0.076,3,0.067,4,0.048,8,0.311,16,0.774,17,0.754,20,0.381,23,1.403,25,1.085,27,1.009,28,0.433,30,0.624,31,0.013,32,0.621,33,0.411,34,0.492,47,0.475,48,0.762,49,0.268,51,0.713,53,0.17,60,0.008,61,0.006,62,0.426,65,0.842,74,0.584,79,0.841,87,0.671,97,0.238,99,0.98,100,0.713,114,0.842,121,0.207,122,0.584,123,0.667,124,0.667,126,0.604,127,1.871,128,1.81,129,1.732,132,2.477,133,2.697,135,1.258,136,1.433,137,2.809,139,2.177,142,1.37,143,1.433,144,1.433,145,1.433,146,1.433,148,1.433,149,1.37,150,0.458,151,0.98,152,1.013,153,0.98,154,1.368,155,0.667,156,0.667,157,0.564,158,0.667,159,0.564,160,0.935,161,1.225,162,0.564,163,0.667,164,0.564,165,1.013,166,0.564,167,1.225,168,0.564,169,1.013,170,0.564,171,0.667,172,0.584,173,0.667,174,0.584,175,0.584,176,0.564,177,0.667,178,0.584,179,1.013,180,0.584,181,1.013,182,1.036,183,1.88,184,1.609,185,0.667,186,1.036,187,0.667,188,1.036,189,1.013,190,1.036,191,1.013,192,1.31,193,0.667,194,1.036,195,0.667,196,1.036,197,1.157,198,1.036,199,0.667,200,0.546,201,0.667,202,0.564,203,0.564,204,0.564,205,0.564,206,0.721,207,0.564,208,0.564,209,0.584,210,0.624,211,0.667,228,1.323,253,0.788,285,1.433,288,2.177,292,1.002,293,1.013,294,2.408,295,2.689,296,0.713,297,2.434,309,1.433,312,1.258,315,1.077,328,2.382,341,1.992,351,0.713,382,1.433,392,1.312,393,1.312,435,1.656,455,2.892,468,0.967,469,0.967,472,1.323,485,0.871,486,0.871,495,0.934,751,3.18,754,1.258,761,1.992,800,2.177,974,1.433,1010,1.433,1012,2.283,1013,1.503,1014,2.408,1015,2.76,1016,1.503,1017,1.503,1018,2.177,1019,1.503,1020,1.503,1021,1.433,1022,2.283,1023,1.433,1024,1.503,1025,1.503,1026,1.503,1027,2.76,1028,1.503,1029,1.503,1030,1.503,1031,1.503,1032,1.503,1033,1.503,1034,1.503,1035,2.283,1036,2.283,1037,1.503,1038,1.503,1039,3.082,1040,1.503,1041,1.503,1042,1.503,1043,1.503,1044,1.503,1045,1.503,1046,1.503,1047,2.283,1048,1.503,1049,1.503,1050,1.503,1051,1.503,1052,2.283,1053,1.503,1054,2.283,1055,1.503,1056,1.503,1057,2.76,1058,1.503,1062,2.79,1063,2.79]],["title/components/LayoutContentComponent.html",[121,0.111,194,0.823]],["body/components/LayoutContentComponent.html",[0,0.08,2,0.078,3,0.068,4,0.049,8,0.317,17,0.763,23,1.412,25,1.112,27,1.019,28,0.291,31,0.013,32,0.521,49,0.27,51,0.727,53,0.171,60,0.008,61,0.007,62,0.435,65,0.846,74,0.596,79,0.852,87,0.682,97,0.242,99,0.995,100,0.727,114,0.859,121,0.207,122,0.596,123,0.681,124,0.681,126,0.616,127,1.874,128,1.812,129,1.741,132,2.503,133,2.159,135,1.284,136,1.462,137,2.837,139,2.21,142,1.398,143,1.462,144,1.462,145,1.462,146,1.462,148,1.462,149,1.398,150,0.468,151,0.995,152,1.029,153,0.995,154,1.382,155,0.681,156,0.681,157,0.576,158,0.681,159,0.576,160,0.947,161,1.24,162,0.576,163,0.681,164,0.576,165,1.029,166,0.576,167,1.24,168,0.576,169,1.029,170,0.576,171,0.681,172,0.596,173,0.681,174,0.596,175,0.596,176,0.576,177,0.681,178,0.596,179,1.029,180,0.596,181,1.029,182,1.049,183,1.886,184,1.62,185,0.681,186,1.049,187,0.681,188,1.049,189,1.029,190,1.049,191,1.029,192,1.049,193,0.681,194,1.32,195,0.681,196,1.049,197,1.169,198,1.049,199,0.681,200,0.557,201,0.681,202,0.576,203,0.576,204,0.576,205,0.576,206,0.732,207,0.576,208,0.576,209,0.596,210,0.637,211,0.681,228,1.344,253,0.804,285,1.462,288,2.21,292,0.841,293,1.029,294,2.022,295,1.338,296,0.727,309,1.462,312,1.284,315,1.099,328,2.406,341,2.022,351,0.727,382,1.462,392,1.338,393,1.338,435,1.39,455,2.917,468,0.986,469,0.986,472,1.344,485,0.889,486,0.889,495,0.952,751,3.204,754,1.284,761,2.022,800,2.21,974,1.462,1010,1.462,1012,2.318,1013,1.534,1014,2.438,1015,2.794,1016,1.534,1017,1.534,1018,2.21,1019,1.534,1020,1.534,1021,1.462,1022,2.318,1023,1.462,1024,1.534,1025,1.534,1026,1.534,1027,2.794,1028,1.534,1029,1.534,1030,1.534,1031,1.534,1032,1.534,1033,1.534,1034,1.534,1035,2.318,1036,2.318,1037,1.534,1038,1.534,1039,3.113,1040,1.534,1041,1.534,1042,1.534,1043,1.534,1044,1.534,1045,1.534,1046,1.534,1047,2.318,1048,1.534,1049,1.534,1050,1.534,1051,2.318,1052,2.318,1053,1.534,1054,2.318,1055,1.534,1056,1.534,1057,2.318,1058,1.534,1064,2.847]],["title/components/LayoutFooterComponent.html",[121,0.111,196,0.823]],["body/components/LayoutFooterComponent.html",[0,0.08,2,0.078,3,0.068,4,0.049,8,0.317,17,0.763,23,1.412,25,1.112,27,1.019,28,0.291,31,0.013,32,0.521,49,0.27,51,0.727,53,0.171,60,0.008,61,0.007,62,0.435,65,0.846,74,0.596,79,0.852,87,0.682,97,0.242,99,0.995,100,0.727,114,0.859,121,0.207,122,0.596,123,0.681,124,0.681,126,0.616,127,1.874,128,1.812,129,1.741,132,2.503,133,2.159,135,1.284,136,1.462,137,2.837,139,2.21,142,1.398,143,1.462,144,1.462,145,1.462,146,1.462,148,1.462,149,1.398,150,0.468,151,0.995,152,1.029,153,0.995,154,1.382,155,0.681,156,0.681,157,0.576,158,0.681,159,0.576,160,0.947,161,1.24,162,0.576,163,0.681,164,0.576,165,1.029,166,0.576,167,1.24,168,0.576,169,1.029,170,0.576,171,0.681,172,0.596,173,0.681,174,0.596,175,0.596,176,0.576,177,0.681,178,0.596,179,1.029,180,0.596,181,1.029,182,1.049,183,1.886,184,1.62,185,0.681,186,1.049,187,0.681,188,1.049,189,1.029,190,1.049,191,1.029,192,1.049,193,0.681,194,1.049,195,0.681,196,1.32,197,1.169,198,1.049,199,0.681,200,0.557,201,0.681,202,0.576,203,0.576,204,0.576,205,0.576,206,0.732,207,0.576,208,0.576,209,0.596,210,0.637,211,0.681,228,1.344,253,0.804,285,1.462,288,2.21,292,0.841,293,1.029,294,2.022,295,1.338,296,0.727,309,1.462,312,1.284,315,1.099,328,2.406,341,2.022,351,0.727,382,1.462,392,1.338,393,1.338,435,1.39,455,2.917,468,0.986,469,0.986,472,1.344,485,0.889,486,0.889,495,0.952,751,3.204,754,1.284,761,2.022,800,2.21,974,1.462,1010,1.462,1012,2.318,1013,1.534,1014,2.438,1015,2.794,1016,1.534,1017,1.534,1018,2.21,1019,1.534,1020,1.534,1021,1.462,1022,2.318,1023,1.462,1024,1.534,1025,1.534,1026,1.534,1027,2.794,1028,1.534,1029,1.534,1030,1.534,1031,1.534,1032,1.534,1033,1.534,1034,1.534,1035,2.318,1036,2.318,1037,1.534,1038,1.534,1039,3.113,1040,1.534,1041,1.534,1042,1.534,1043,1.534,1044,1.534,1045,1.534,1046,1.534,1047,2.318,1048,1.534,1049,1.534,1050,1.534,1051,1.534,1052,2.794,1053,1.534,1054,2.318,1055,1.534,1056,1.534,1057,2.318,1058,1.534,1065,2.847]],["title/components/LayoutHeaderComponent.html",[121,0.111,197,0.823]],["body/components/LayoutHeaderComponent.html",[0,0.078,2,0.068,3,0.059,4,0.043,8,0.276,16,0.706,17,0.7,19,1.021,20,0.338,21,0.865,23,1.536,25,1.048,27,0.947,28,0.751,30,0.554,31,0.013,32,0.576,33,0.858,34,0.437,37,1.056,47,1.051,48,1.686,49,0.259,51,0.633,53,0.164,60,0.007,61,0.006,62,0.379,65,0.815,74,0.809,79,0.781,87,0.613,95,1.129,97,0.217,99,0.894,100,0.633,114,0.748,121,0.201,122,0.518,123,0.592,124,0.592,126,0.536,127,1.854,128,1.793,129,1.677,131,1.57,132,2.793,133,1.98,135,2.144,136,2.443,137,2.861,139,1.986,142,1.216,143,1.273,144,1.273,145,1.273,146,1.273,148,1.273,149,1.216,150,0.407,151,0.894,152,0.925,153,0.894,154,1.285,155,0.592,156,0.592,157,0.501,158,0.592,159,0.501,160,0.868,161,1.137,162,0.501,163,0.592,164,0.501,165,0.925,166,0.501,167,1.137,168,0.501,169,0.925,170,0.501,171,0.592,172,0.518,173,0.592,174,0.518,175,0.518,176,0.501,177,0.592,178,0.518,179,0.925,180,0.518,181,0.925,182,0.962,183,1.843,184,1.542,185,0.592,186,0.962,187,0.592,188,0.962,189,0.925,190,0.962,191,0.925,192,0.962,193,0.592,194,0.962,195,0.592,196,0.962,197,1.35,198,0.962,199,0.592,200,0.485,201,0.592,202,0.501,203,0.501,204,0.501,205,0.501,206,0.658,207,0.501,208,0.501,209,0.518,210,0.554,211,0.592,228,1.678,253,0.7,285,1.986,288,2.76,292,0.93,293,1.137,294,1.818,295,1.165,296,1.373,309,1.986,312,1.744,315,1.836,328,2.778,341,2.236,351,0.633,382,2.76,392,1.818,393,1.818,435,1.25,455,3.412,468,1.34,469,1.34,472,1.485,485,0.774,486,0.774,495,0.829,751,3.443,754,1.117,761,1.818,800,1.986,974,1.273,1010,1.273,1012,2.895,1013,2.562,1014,2.74,1015,3.475,1016,1.335,1017,2.895,1018,3.172,1019,2.895,1020,2.895,1021,1.986,1022,2.895,1023,1.273,1024,2.083,1025,1.335,1026,1.335,1027,2.562,1028,1.335,1029,1.335,1030,1.335,1031,1.335,1032,2.895,1033,1.335,1034,1.335,1035,2.083,1036,2.083,1037,2.895,1038,1.335,1039,2.895,1040,1.335,1041,2.083,1042,2.895,1043,1.335,1044,1.335,1045,2.083,1046,2.895,1047,2.083,1048,1.335,1049,1.335,1050,1.335,1051,1.335,1052,2.083,1053,1.335,1054,2.083,1055,1.335,1056,1.335,1057,2.083,1058,1.335,1066,4.756,1067,3.867,1068,2.478,1069,2.478,1070,2.478,1071,2.478,1072,2.478,1073,2.478,1074,2.478,1075,2.478,1076,2.478,1077,2.478,1078,2.478]],["title/modules/LayoutModule.html",[212,0.693,225,1.998]],["body/modules/LayoutModule.html",[0,0.046,2,0.127,3,0.111,4,0.08,31,0.013,49,0.289,51,1.184,53,0.172,60,0.009,61,0.009,97,0.26,108,1.789,150,0.761,182,1.646,186,1.646,188,1.646,190,1.646,192,1.646,194,1.646,196,1.646,197,1.646,198,1.646,212,1.034,214,2.09,215,3.184,216,2.179,217,2.09,225,4.2,226,2.981,227,2.275,228,1.448,233,2.18,238,3.44,239,2.497,240,2.497,268,3.119,350,3.119,351,1.184,1079,4.043,1080,4.043,1081,4.043,1082,3.653,1083,4.635,1084,5.339]],["title/components/LayoutSidebarComponent.html",[121,0.111,198,0.823]],["body/components/LayoutSidebarComponent.html",[0,0.079,2,0.077,3,0.067,4,0.049,8,0.312,17,0.756,20,0.382,23,1.404,25,1.107,27,1.01,28,0.434,31,0.013,32,0.515,33,0.412,49,0.268,51,0.715,53,0.17,60,0.008,61,0.006,62,0.428,65,0.843,74,0.586,79,0.843,87,0.673,97,0.239,99,0.983,100,0.715,114,0.845,121,0.207,122,0.586,123,0.669,124,0.669,126,0.606,127,1.872,128,1.81,129,1.733,132,2.482,133,2.137,135,1.262,136,1.438,137,2.814,139,2.182,142,1.375,143,1.438,144,1.438,145,1.438,146,1.438,148,1.438,149,1.375,150,0.46,151,0.983,152,1.016,153,0.983,154,1.37,155,0.669,156,0.669,157,0.566,158,0.669,159,0.566,160,0.937,161,1.228,162,0.566,163,0.669,164,0.566,165,1.016,166,0.566,167,1.228,168,0.566,169,1.016,170,0.566,171,0.669,172,0.586,173,0.669,174,0.586,175,0.586,176,0.566,177,0.669,178,0.586,179,1.016,180,0.586,181,1.016,182,1.039,183,1.881,184,1.611,185,0.669,186,1.039,187,0.669,188,1.039,189,1.016,190,1.039,191,1.016,192,1.039,193,0.669,194,1.039,195,0.669,196,1.039,197,1.159,198,1.312,199,0.669,200,0.547,201,0.669,202,0.566,203,0.566,204,0.566,205,0.566,206,0.723,207,0.566,208,0.566,209,0.586,210,0.626,211,0.669,228,1.327,253,0.79,285,1.438,288,2.182,292,0.831,293,1.016,294,1.997,295,1.316,296,0.715,309,1.438,312,1.262,315,1.081,328,2.386,341,1.997,351,0.715,382,1.438,392,1.316,393,1.316,435,1.373,455,2.896,468,0.97,469,0.97,472,1.327,485,0.874,486,0.874,495,0.937,751,3.308,754,1.915,761,2.896,800,2.944,974,1.438,1010,1.438,1012,2.289,1013,1.508,1014,2.413,1015,2.766,1016,1.508,1017,1.508,1018,2.182,1019,1.508,1020,1.508,1021,1.438,1022,2.289,1023,1.438,1024,1.508,1025,1.508,1026,1.508,1027,2.766,1028,1.508,1029,1.508,1030,1.508,1031,1.508,1032,1.508,1033,1.508,1034,1.508,1035,2.289,1036,2.289,1037,1.508,1038,1.508,1039,3.087,1040,1.508,1041,1.508,1042,1.508,1043,1.508,1044,1.508,1045,1.508,1046,1.508,1047,2.289,1048,1.508,1049,1.508,1050,1.508,1051,1.508,1052,2.289,1053,2.289,1054,3.494,1055,2.766,1056,1.508,1057,2.289,1058,1.508,1085,4.248]],["title/components/LoginComponent.html",[121,0.111,200,0.796]],["body/components/LoginComponent.html",[0,0.064,2,0.084,3,0.074,4,0.053,8,0.509,16,0.833,17,0.8,19,1.695,20,0.42,21,1.021,23,0.923,25,0.697,27,0.805,28,0.758,30,0.689,31,0.013,32,0.659,33,0.989,34,0.543,37,1.752,47,0.777,48,1.246,49,0.27,51,0.787,53,0.074,60,0.008,61,0.007,62,0.918,65,0.632,74,0.955,79,0.893,87,0.723,91,2.915,95,1.332,97,0.173,99,1.056,100,0.787,114,0.93,120,2.263,121,0.176,122,0.644,123,0.736,124,0.736,126,0.666,127,1.864,128,1.803,129,0.736,132,3.261,150,0.506,151,1.056,152,1.091,153,1.056,154,1.437,155,0.736,156,0.736,157,0.623,158,0.736,159,0.623,160,0.992,161,1.3,162,0.623,163,0.736,164,0.623,165,1.091,166,0.623,167,1.3,168,0.623,169,1.091,170,0.623,171,0.736,172,0.644,173,0.736,174,0.644,175,0.644,176,0.623,177,0.736,178,0.644,179,1.091,180,0.644,181,1.091,182,0.623,183,1.708,184,1.3,185,0.736,186,0.623,187,0.736,188,0.623,189,1.091,190,0.623,191,1.091,192,0.623,193,0.736,194,0.623,195,0.736,196,0.623,197,0.623,198,0.623,199,0.736,200,1.397,201,0.736,202,0.623,203,0.623,204,0.623,205,0.623,206,0.777,207,0.623,208,0.623,209,0.644,210,1.216,211,0.736,253,1.535,259,2.344,272,2.728,292,0.892,293,0.736,294,2.556,295,2.826,299,1.527,315,2.098,327,2.687,328,2.974,339,2.428,356,1.659,377,3.31,392,1.448,393,3.27,419,4.36,434,4.258,435,1.475,437,1.762,443,4.526,448,3.808,468,2.329,469,2.329,472,2.279,480,1.334,485,1.698,486,1.698,501,2.891,502,2.08,503,2.08,511,3.808,778,2.428,780,3.981,781,6.068,782,6.068,783,5.483,784,2.687,785,5.243,786,3.981,787,3.981,788,2.687,789,5.243,790,3.31,791,2.687,792,2.687,793,2.687,794,2.687,1021,3.453,1086,4.563,1087,3.08,1088,3.08,1089,3.08,1090,3.08,1091,3.08,1092,3.08,1093,3.08,1094,3.08,1095,3.08,1096,6.011,1097,4.563,1098,6.011]],["title/classes/MenuItem.html",[0,0.041,754,1.835]],["body/classes/MenuItem.html",[0,0.075,2,0.139,3,0.122,4,0.088,8,0.568,20,0.695,21,1.444,28,0.785,31,0.013,33,1.208,34,1.423,49,0.192,53,0.122,60,0.01,61,0.01,65,0.75,83,3.854,95,2.41,130,5.695,253,1.438,271,4.14,376,4.974,472,2.491,485,1.591,486,1.591,751,4.075,754,3.54,761,3.034,1099,6.848,1100,4.445,1101,5.095,1102,7.684,1103,5.095,1104,5.095,1105,5.095,1106,5.095,1107,5.095]],["title/modules/MiscModule.html",[212,0.693,656,2.306]],["body/modules/MiscModule.html",[0,0.054,2,0.148,3,0.13,4,0.094,31,0.013,49,0.308,53,0.183,60,0.01,61,0.01,97,0.304,150,0.89,172,1.751,209,1.751,212,1.142,214,2.444,215,3.426,216,2.548,217,2.444,226,3.294,227,2.661,228,1.693,233,2.408,234,3.07,238,3.801,239,2.92,240,2.92,350,3.446,351,1.385,656,4.74,1108,4.728,1109,4.728,1110,4.728,1111,4.728,1112,5.384,1113,5.42,1114,5.42,1115,5.42,1116,5.42]],["title/modules/MiscRoutingModule.html",[212,0.693,1112,2.749]],["body/modules/MiscRoutingModule.html",[0,0.063,2,0.171,3,0.15,4,0.108,6,2.781,31,0.013,49,0.293,51,1.596,53,0.175,60,0.011,61,0.011,97,0.351,108,2.412,212,1.063,233,2.623,267,3.539,268,3.754,378,3.735,1112,4.935,1117,6.248]],["title/classes/Question.html",[0,0.041,87,0.645]],["body/classes/Question.html",[0,0.078,2,0.157,3,0.138,4,0.1,8,0.642,20,0.786,21,1.558,28,0.764,31,0.013,33,1.102,34,1.371,49,0.217,53,0.138,60,0.011,61,0.011,65,0.809,82,2.785,87,1.336,95,2.185,372,4.162,421,4.926,668,3.35,1118,5.023,1119,5.758,1120,5.758,1121,5.758,1122,5.023]],["title/components/QuestionAddEditFormComponent.html",[121,0.111,202,0.823]],["body/components/QuestionAddEditFormComponent.html",[0,0.043,2,0.058,3,0.051,4,0.037,6,2.27,8,0.382,16,0.625,17,1.222,19,1.605,20,0.29,21,0.767,23,0.998,25,0.523,27,0.953,28,0.765,30,0.963,31,0.013,32,0.655,33,0.931,34,0.759,37,1.66,41,1.544,45,3.331,47,1.207,48,1.782,49,0.253,51,0.544,53,0.051,55,3.114,60,0.007,61,0.005,62,0.966,65,0.398,74,0.717,79,0.707,82,1.601,83,2.838,87,1.291,91,2.493,94,1.941,97,0.119,99,1.251,100,0.544,114,0.642,120,2.531,121,0.148,122,0.445,123,0.509,124,0.509,126,0.46,127,1.798,128,1.739,129,0.509,131,1.348,150,0.349,151,0.793,152,0.819,153,0.793,154,1.179,155,0.509,156,0.509,157,0.43,158,0.509,159,0.43,160,1.512,161,1.029,162,0.43,163,0.509,164,0.43,165,0.819,166,0.43,167,1.029,168,0.43,169,0.819,170,0.43,171,0.509,172,0.445,173,0.509,174,0.445,175,0.445,176,0.43,177,0.509,178,0.445,179,0.819,180,0.445,181,0.819,182,0.43,183,1.512,184,1.029,185,0.509,186,0.43,187,0.509,188,0.43,189,0.819,190,0.43,191,0.819,192,0.43,193,0.509,194,0.43,195,0.509,196,0.43,197,0.43,198,0.43,199,0.509,200,0.416,201,0.509,202,1.279,203,0.43,204,0.43,205,0.43,206,0.583,207,0.43,208,0.43,209,0.445,210,0.476,211,0.509,253,0.967,259,1.76,261,1.436,292,0.67,293,1.029,296,1.26,299,1.65,315,2.441,351,0.544,399,2.486,433,1.543,434,4.006,435,1.107,436,2.701,437,1.323,438,2.701,439,3.443,441,3.851,442,4.104,443,3.662,447,2.794,448,3.125,450,3.923,453,3.88,461,3.274,468,2.003,469,2.003,470,1.941,471,1.941,472,1.975,476,2.314,478,3.426,480,1.484,482,2.486,485,1.07,486,1.07,487,1.543,488,1.677,489,4.263,490,1.543,494,3.331,495,1.65,497,1.941,501,2.726,502,2.314,503,2.314,504,3.888,505,2.486,507,1.205,511,3.125,532,3.888,542,1.941,668,3.12,674,3.578,676,4.135,691,1.677,697,1.677,840,1.856,857,2.314,859,3.902,1009,1.543,1122,1.856,1123,5.481,1124,5.481,1125,4.933,1126,4.303,1127,3.426,1128,4.303,1129,2.989,1130,2.127,1131,3.426,1132,5.408,1133,1.856,1134,3.426,1135,3.426,1136,4.302,1137,2.127,1138,2.989,1139,2.127,1140,2.127,1141,1.856,1142,2.127,1143,2.127,1144,1.856,1145,1.856,1146,1.856,1147,1.856,1148,1.856,1149,1.856,1150,1.856,1151,3.426,1152,3.426,1153,1.856,1154,1.856,1155,2.127,1156,2.127,1157,2.127,1158,2.127,1159,2.127,1160,2.127,1161,2.127,1162,2.127,1163,3.426,1164,2.127,1165,2.127,1166,3.426,1167,3.426,1168,3.426]],["title/injectables/QuestionService.html",[62,0.622,859,2.433]],["body/injectables/QuestionService.html",[0,0.058,2,0.095,3,0.083,4,0.06,8,0.78,13,4.006,16,0.907,17,0.935,19,0.914,20,0.472,21,1.111,23,1.459,25,0.759,27,1.186,28,0.753,30,1.505,31,0.013,32,0.815,33,1.031,34,1.186,37,0.945,41,2.513,47,1.404,49,0.264,52,1.698,53,0.083,60,0.01,61,0.008,62,1.027,65,0.577,69,4.023,71,2.336,72,4.261,74,1.039,75,3.623,76,3.147,82,2.363,83,3.437,87,1.343,91,2.162,94,3.597,95,1.45,97,0.194,98,1.777,99,1.82,100,0.884,101,3.147,102,2.192,103,2.192,104,2.068,105,1.777,106,2.192,107,3.966,108,2.784,110,3.354,111,2.912,112,4.261,113,5.056,114,2.03,115,4.879,117,2.336,119,2.336,120,1.44,613,3.597,622,2.509,857,4.727,859,4.185,1126,4.333,1128,4.333,1138,4.333,1169,3.018,1170,6.35,1171,4.333,1172,4.967,1173,4.967,1174,3.459,1175,4.333,1176,3.459,1177,3.459,1178,3.459,1179,3.459,1180,4.967,1181,3.459,1182,4.967,1183,5.811,1184,4.333,1185,4.967]],["title/components/QuestionsComponent.html",[121,0.111,203,0.823]],["body/components/QuestionsComponent.html",[0,0.046,2,0.124,3,0.109,4,0.079,16,1.094,17,0.987,20,0.62,25,1.025,28,0.612,31,0.013,32,0.726,47,0.773,48,1.241,49,0.172,53,0.109,60,0.009,61,0.009,79,1.102,87,1.13,97,0.255,121,0.203,122,0.951,123,1.086,124,1.086,126,0.983,127,1.915,128,1.852,129,1.433,150,0.746,151,1.386,152,1.433,153,1.386,154,1.705,155,1.086,156,1.086,157,0.919,158,1.086,159,0.919,160,1.224,161,1.604,162,0.919,163,1.086,164,0.919,165,1.433,166,0.919,167,1.604,168,0.919,169,1.433,170,0.919,171,1.086,172,0.951,173,1.086,174,0.951,175,0.951,176,0.919,177,1.086,178,0.951,179,1.433,180,0.951,181,1.433,182,0.919,183,1.884,184,1.604,185,1.086,186,0.919,187,1.086,188,0.919,189,1.433,190,0.919,191,1.433,192,0.919,193,1.086,194,0.919,195,1.086,196,0.919,197,0.919,198,0.919,199,1.086,200,0.888,201,1.086,202,0.919,203,1.443,204,0.919,205,0.919,206,1.02,207,0.919,208,0.919,209,0.951,210,1.017,211,1.086,292,1.172,293,1.604,296,1.822,1186,3.964,1187,4.544,1188,4.544]],["title/components/QuestionsListComponent.html",[121,0.111,204,0.823]],["body/components/QuestionsListComponent.html",[0,0.055,2,0.085,3,0.074,4,0.054,8,0.511,16,0.837,17,0.803,19,1.441,20,0.423,21,1.025,23,0.927,25,0.7,27,0.962,28,0.746,30,1.025,31,0.013,32,0.73,33,0.803,34,0.808,37,1.489,41,1.645,47,1.026,48,1.839,49,0.27,53,0.074,55,2.469,60,0.008,61,0.007,65,0.533,74,0.959,79,0.896,87,1.329,97,0.174,99,1.262,100,0.791,121,0.176,122,0.648,123,0.741,124,0.741,126,0.67,127,1.865,128,1.804,129,0.741,150,0.509,151,1.06,152,1.096,153,1.06,154,1.441,155,0.741,156,0.741,157,0.627,158,0.741,159,0.627,160,0.996,161,1.304,162,0.627,163,0.741,164,0.627,165,1.096,166,0.627,167,1.304,168,0.627,169,1.096,170,0.627,171,0.741,172,0.648,173,0.741,174,0.648,175,0.648,176,0.627,177,0.741,178,0.648,179,1.096,180,0.648,181,1.096,182,0.627,183,1.711,184,1.304,185,0.741,186,0.627,187,0.741,188,0.627,189,1.096,190,0.627,191,1.096,192,0.627,193,0.741,194,0.627,195,0.741,196,0.627,197,0.627,198,0.627,199,0.741,200,0.606,201,0.741,202,0.627,203,0.627,204,1.447,205,0.627,206,0.78,207,0.627,208,0.627,209,0.648,210,0.693,211,0.741,253,1.54,290,3.325,292,0.896,293,1.304,296,1.54,351,0.791,435,1.481,437,1.769,439,3.948,441,4.415,447,3.415,453,4.054,461,2.596,468,2.334,469,2.334,470,2.596,471,2.596,472,2.282,476,3.095,480,1.984,485,1.704,486,1.704,495,1.036,497,1.755,507,1.755,542,2.596,613,3.415,629,2.247,630,3.612,631,3.612,632,5.056,633,2.442,639,2.442,640,2.442,641,3.325,647,2.442,668,1.836,857,4.07,858,2.702,859,4.166,864,2.442,865,2.702,1009,3.325,1123,5.393,1154,2.702,1171,3.998,1175,3.998,1189,5.393,1190,3.998,1191,2.702,1192,2.702,1193,2.702,1194,2.702,1195,3.098,1196,2.702,1197,3.098,1198,3.998,1199,4.583,1200,4.583]],["title/modules/QuestionsModule.html",[212,0.693,1201,2.953]],["body/modules/QuestionsModule.html",[0,0.051,2,0.139,3,0.122,4,0.088,17,0.947,31,0.013,49,0.315,53,0.154,60,0.01,61,0.01,87,1.12,97,0.285,150,0.833,160,1.175,202,1.586,203,1.586,204,1.586,212,1.095,214,2.286,215,3.323,216,2.384,217,2.286,225,3.85,226,3.159,227,2.49,228,1.584,233,2.31,234,2.873,237,3.031,238,3.645,239,2.732,240,2.732,350,3.306,351,1.296,355,4.077,356,2.732,654,3.159,656,4.442,659,3.997,660,3.213,661,3.213,662,3.679,852,3.997,1124,3.679,1189,3.679,1201,6.105,1202,4.424,1203,4.424,1204,4.424,1205,5.295,1206,5.071]],["title/modules/QuestionsRoutingModule.html",[212,0.693,1205,2.749]],["body/modules/QuestionsRoutingModule.html",[0,0.057,2,0.155,3,0.136,4,0.098,6,2.776,17,1.015,31,0.013,49,0.304,51,1.448,53,0.165,60,0.011,61,0.011,87,1.178,97,0.318,108,2.188,121,0.211,160,1.259,202,1.503,203,1.395,204,1.395,212,0.965,233,2.475,267,3.21,268,3.542,271,3.714,362,3.59,376,3.59,378,3.388,660,3.59,661,3.59,664,4.467,665,4.467,852,4.467,1123,4.111,1124,4.111,1189,4.111,1205,4.656]],["title/classes/Screen.html",[0,0.041,206,0.693]],["body/classes/Screen.html",[0,0.078,2,0.158,3,0.139,4,0.1,8,0.644,20,0.789,21,1.561,28,0.765,31,0.013,32,0.981,33,1.103,34,1.23,49,0.218,53,0.139,60,0.011,61,0.011,65,0.811,82,2.789,87,1.325,95,2.188,206,1.378,372,4.171,421,4.932,565,4.555,1207,5.041,1208,5.779,1209,5.779,1210,5.779]],["title/components/ScreenAddEditFormComponent.html",[121,0.111,205,0.823]],["body/components/ScreenAddEditFormComponent.html",[0,0.042,2,0.057,3,0.05,4,0.036,6,2.157,8,0.47,16,0.612,17,1.221,19,1.587,20,0.282,21,0.749,23,0.982,25,0.512,27,1.059,28,0.767,30,1.086,31,0.013,32,0.728,33,0.952,34,0.856,37,1.641,41,1.515,47,1.13,48,1.813,49,0.251,51,0.529,53,0.05,55,1.805,60,0.006,61,0.005,62,0.956,65,0.389,74,0.701,79,0.693,82,1.806,83,3.26,87,1.297,91,2.124,94,1.898,97,0.116,99,1.233,100,0.529,114,0.625,120,2.021,121,0.146,122,0.433,123,0.495,124,0.495,126,0.448,127,1.793,128,1.734,129,0.495,131,1.311,150,0.34,151,0.775,152,0.801,153,0.775,154,1.16,155,0.495,156,0.495,157,0.418,158,0.495,159,0.418,160,1.514,161,1.009,162,0.418,163,0.495,164,0.418,165,0.801,166,0.418,167,1.009,168,0.418,169,0.801,170,0.418,171,0.495,172,0.433,173,0.495,174,0.433,175,0.433,176,0.418,177,0.495,178,0.433,179,0.801,180,0.433,181,0.801,182,0.418,183,1.496,184,1.009,185,0.495,186,0.418,187,0.495,188,0.418,189,0.801,190,0.418,191,0.801,192,0.418,193,0.495,194,0.418,195,0.495,196,0.418,197,0.418,198,0.418,199,0.495,200,0.404,201,0.495,202,0.418,203,0.418,204,0.418,205,1.266,206,1.383,207,0.418,208,0.418,209,0.433,210,0.463,211,0.495,253,0.946,259,1.721,261,2.262,292,0.655,293,1.009,296,1.24,299,1.624,312,1.51,315,1.873,351,0.529,396,2.641,421,2.675,433,1.501,434,3.964,435,1.083,436,2.641,437,1.293,438,2.641,439,3.404,441,3.807,442,4.057,443,3.615,446,2.122,447,2.749,448,3.075,450,3.868,452,3.662,453,3.848,455,1.575,461,1.898,468,1.977,469,1.977,470,1.898,471,1.898,472,1.954,476,2.262,478,2.122,480,1.451,482,2.43,485,1.046,486,1.046,487,1.501,488,1.631,489,4.203,490,1.501,494,3.277,495,1.624,496,2.262,497,1.898,501,2.675,502,2.262,503,2.262,505,2.43,507,1.172,511,2.122,520,2.922,539,2.641,542,1.898,565,1.631,567,1.805,578,1.805,587,2.675,857,3.277,859,3.864,863,1.805,864,1.631,945,2.641,1009,1.501,1129,2.922,1133,1.805,1141,1.805,1144,1.805,1145,1.805,1146,1.805,1147,1.805,1148,1.805,1149,1.805,1150,1.805,1153,1.805,1184,3.683,1196,2.922,1198,3.683,1211,5.492,1212,5.492,1213,4.853,1214,4.234,1215,3.35,1216,3.35,1217,4.234,1218,2.069,1219,3.35,1220,5.707,1221,2.069,1222,2.069,1223,2.069,1224,2.069,1225,3.35,1226,2.069,1227,2.069,1228,1.805,1229,2.069,1230,2.069,1231,4.222,1232,2.069,1233,2.069,1234,3.35,1235,2.069,1236,2.069,1237,2.069,1238,2.069,1239,2.069,1240,2.069,1241,2.069,1242,2.069,1243,2.069,1244,3.35,1245,3.35]],["title/injectables/ScreenService.html",[62,0.622,452,2.306]],["body/injectables/ScreenService.html",[0,0.056,2,0.088,3,0.077,4,0.056,8,0.786,13,4.024,16,0.861,17,0.904,19,0.851,20,0.44,21,1.055,23,1.427,25,0.721,27,1.244,28,0.754,30,1.528,31,0.013,32,0.827,33,1.039,34,1.204,37,0.88,41,2.533,47,1.408,49,0.258,52,1.581,53,0.077,60,0.009,61,0.007,62,0.999,65,0.548,69,3.891,71,2.175,72,4.142,74,0.987,75,3.522,76,2.988,79,1.009,82,2.862,83,3.846,91,2.076,94,3.479,95,1.377,97,0.181,98,1.655,99,1.812,100,0.823,101,2.041,102,2.041,103,2.041,104,1.926,105,1.655,107,3.869,108,2.793,110,3.768,111,2.958,112,4.327,113,5.087,114,2.062,115,4.955,117,2.175,119,2.175,120,1.341,206,1.439,446,4.327,452,3.869,521,3.422,524,4.114,539,3.718,613,3.479,622,2.337,991,4.114,1214,4.114,1217,4.114,1246,2.81,1247,6.142,1248,4.114,1249,4.717,1250,4.717,1251,3.221,1252,4.114,1253,3.221,1254,4.717,1255,3.221,1256,4.717,1257,3.221,1258,3.221,1259,3.221,1260,4.717,1261,3.221,1262,4.717,1263,3.221,1264,5.58,1265,4.717]],["title/components/ScreensComponent.html",[121,0.111,207,0.823]],["body/components/ScreensComponent.html",[0,0.067,2,0.123,3,0.107,4,0.078,8,0.499,16,1.084,17,0.981,20,0.611,25,1.018,28,0.606,31,0.013,32,0.719,47,0.763,48,1.223,49,0.169,53,0.107,60,0.009,61,0.009,65,0.69,79,1.094,87,0.941,97,0.252,121,0.202,122,0.938,123,1.071,124,1.071,126,0.97,127,1.913,128,1.851,129,1.42,150,0.736,151,1.374,152,1.42,153,1.374,154,1.696,155,1.071,156,1.071,157,0.906,158,1.071,159,0.906,160,1.216,161,1.593,162,0.906,163,1.071,164,0.906,165,1.42,166,0.906,167,1.593,168,0.906,169,1.42,170,0.906,171,1.071,172,0.938,173,1.071,174,0.938,175,0.938,176,0.906,177,1.071,178,0.938,179,1.42,180,0.938,181,1.42,182,0.906,183,1.878,184,1.593,185,1.071,186,0.906,187,1.071,188,0.906,189,1.42,190,0.906,191,1.42,192,0.906,193,1.071,194,0.906,195,1.071,196,0.906,197,0.906,198,0.906,199,1.071,200,0.876,201,1.071,202,0.906,203,0.906,204,0.906,205,0.906,206,1.207,207,1.534,208,0.906,209,0.938,210,1.002,211,1.071,292,1.161,293,1.593,296,1.812,1266,3.909,1267,4.481,1268,4.481]],["title/components/ScreensListComponent.html",[121,0.111,208,0.823]],["body/components/ScreensListComponent.html",[0,0.055,2,0.085,3,0.074,4,0.054,8,0.609,16,0.838,17,0.804,19,1.442,20,0.424,21,1.027,23,0.928,25,0.701,27,0.963,28,0.746,30,1.027,31,0.013,32,0.731,33,0.804,34,0.809,37,1.491,41,1.647,47,1.027,48,1.84,49,0.27,53,0.074,55,2.472,60,0.008,61,0.007,62,0.922,65,0.534,74,0.96,79,0.897,87,0.727,97,0.174,99,1.263,100,0.793,121,0.176,122,0.649,123,0.742,124,0.742,126,0.672,127,1.866,128,1.804,129,0.742,150,0.51,151,1.062,152,1.097,153,1.062,154,1.443,155,0.742,156,0.742,157,0.628,158,0.742,159,0.628,160,0.997,161,1.306,162,0.628,163,0.742,164,0.628,165,1.097,166,0.628,167,1.306,168,0.628,169,1.097,170,0.628,171,0.742,172,0.649,173,0.742,174,0.649,175,0.649,176,0.628,177,0.742,178,0.649,179,1.097,180,0.649,181,1.097,182,0.628,183,1.712,184,1.306,185,0.742,186,0.628,187,0.742,188,0.628,189,1.097,190,0.628,191,1.097,192,0.628,193,0.742,194,0.628,195,0.742,196,0.628,197,0.628,198,0.628,199,0.742,200,0.607,201,0.742,202,0.628,203,0.628,204,0.628,205,0.628,206,1.429,207,0.628,208,1.448,209,0.649,210,0.694,211,0.742,253,1.542,290,3.329,292,0.897,293,1.306,296,1.542,299,1.535,351,0.793,435,1.483,437,1.772,439,3.95,441,4.418,446,3.822,447,3.418,452,4.056,453,4.273,461,2.6,468,2.335,469,2.335,470,2.6,471,2.6,472,2.284,476,3.099,480,1.987,485,1.706,486,1.706,492,2.447,495,1.038,496,3.099,497,1.758,507,1.758,512,3.618,542,2.6,613,3.418,629,2.252,630,3.618,631,3.618,632,5.059,633,2.447,639,2.447,640,2.447,641,3.329,647,2.447,868,2.708,872,2.708,981,2.708,1190,4.003,1191,2.708,1192,2.708,1193,2.708,1194,2.708,1211,5.395,1228,2.708,1248,4.003,1252,4.003,1269,5.395,1270,3.104,1271,3.104]],["title/modules/ScreensModule.html",[212,0.693,1272,2.953]],["body/modules/ScreensModule.html",[0,0.051,2,0.139,3,0.122,4,0.088,17,0.947,31,0.013,49,0.315,53,0.154,60,0.01,61,0.01,97,0.285,150,0.833,160,1.175,205,1.586,206,1.203,207,1.586,208,1.586,212,1.095,214,2.286,215,3.323,216,2.384,217,2.286,225,3.85,226,3.159,227,2.49,228,1.584,233,2.31,234,2.873,237,3.031,238,3.645,239,2.732,240,2.732,350,3.306,351,1.296,355,4.077,356,2.732,654,3.159,656,4.442,659,3.997,660,3.213,661,3.213,662,3.679,854,3.997,1212,3.679,1269,3.679,1272,6.105,1273,4.424,1274,4.424,1275,4.424,1276,5.295,1277,5.071]],["title/modules/ScreensRoutingModule.html",[212,0.693,1276,2.749]],["body/modules/ScreensRoutingModule.html",[0,0.057,2,0.155,3,0.136,4,0.099,6,2.778,17,1.016,31,0.013,49,0.304,51,1.451,53,0.165,60,0.011,61,0.011,97,0.319,108,2.191,121,0.212,160,1.26,205,1.505,206,1.266,207,1.396,208,1.396,212,0.966,233,2.478,267,3.216,268,3.546,271,3.718,362,3.597,376,3.597,378,3.394,660,3.597,661,3.597,664,4.475,665,4.475,854,4.475,1211,4.118,1212,4.118,1269,4.118,1276,4.661]],["title/components/SpinnerComponent.html",[121,0.111,209,0.852]],["body/components/SpinnerComponent.html",[0,0.065,2,0.116,3,0.102,4,0.074,8,0.474,16,1.047,17,0.955,19,1.123,20,0.58,21,1.283,25,0.991,28,0.662,31,0.013,32,0.695,37,1.161,47,0.724,48,1.161,49,0.217,53,0.102,60,0.009,61,0.009,65,0.666,79,1.066,87,0.908,97,0.239,121,0.198,122,0.889,123,1.016,124,1.016,126,0.92,127,1.907,128,1.845,129,1.016,150,0.698,151,1.326,152,1.371,153,1.326,154,1.66,155,1.016,156,1.016,157,0.86,158,1.016,159,0.86,160,1.184,161,1.551,162,0.86,163,1.016,164,0.86,165,1.371,166,0.86,167,1.551,168,0.86,169,1.371,170,0.86,171,1.016,172,0.889,173,1.016,174,0.889,175,0.889,176,0.86,177,1.016,178,0.889,179,1.371,180,0.889,181,1.371,182,0.86,183,1.856,184,1.551,185,1.016,186,0.86,187,1.016,188,0.86,189,1.371,190,0.86,191,1.371,192,0.86,193,1.016,194,0.86,195,1.016,196,0.86,197,0.86,198,0.86,199,1.016,200,0.831,201,1.016,202,0.86,203,0.86,204,0.86,205,0.86,206,0.976,207,0.86,208,0.86,209,1.563,210,1.622,211,1.016,253,1.2,292,1.121,293,1.551,296,1.774,435,1.853,437,2.213,468,1.986,469,1.986,472,2.026,485,1.328,486,1.328,783,6.018,1278,3.708,1279,5.733,1280,5.733,1281,5.733,1282,4.251]],["title/injectables/SpinnerService.html",[62,0.622,133,1.695]],["body/injectables/SpinnerService.html",[0,0.071,2,0.141,3,0.124,4,0.089,8,0.574,16,1.187,19,1.361,20,0.703,21,1.454,23,1.617,25,0.993,27,0.908,28,0.787,30,1.153,31,0.013,32,0.624,33,0.957,34,0.908,37,1.407,47,1.106,48,1.775,49,0.245,53,0.124,60,0.01,61,0.01,62,1.142,65,0.756,74,1.36,95,2.079,97,0.289,127,1.673,133,3.278,210,1.761,351,1.316,1014,3.515,1018,3.658,1023,2.647,1283,4.494,1284,7.478,1285,7.873,1286,7.873,1287,5.152,1288,6.5,1289,5.152,1290,5.152,1291,6.5,1292,5.152,1293,5.152,1294,5.152,1295,6.5,1296,5.152,1297,5.152]],["title/injectables/StorageService.html",[62,0.622,304,2.579]],["body/injectables/StorageService.html",[0,0.07,2,0.134,3,0.117,4,0.085,8,0.818,14,4.386,16,1.148,19,2.087,20,0.668,25,1.062,27,1.294,28,0.749,30,1.555,31,0.013,32,0.842,33,1.023,34,1.226,45,5.246,47,1.249,48,1.718,49,0.185,53,0.117,60,0.01,61,0.01,62,1.062,65,0.731,95,2.448,97,0.275,259,3.991,304,4.649,306,5.323,372,4.386,396,4.959,410,5.784,790,6.115,1298,4.27,1299,6.291,1300,4.895,1301,6.291,1302,4.895,1303,6.291,1304,4.895,1305,6.291,1306,4.895,1307,6.291,1308,4.895,1309,4.895,1310,4.895]],["title/coverage.html",[1311,4.856]],["body/coverage.html",[0,0.077,1,2.849,4,0.063,5,3.153,6,1.297,7,4.039,17,1.046,31,0.013,33,0.532,41,1.297,60,0.008,61,0.008,62,1.14,63,2.622,64,3.153,79,0.594,87,0.573,91,1.907,99,0.836,111,2.578,121,0.23,122,0.756,125,3.153,133,1.505,157,0.731,159,0.731,160,1.297,162,0.731,164,0.731,166,0.731,168,0.731,170,0.731,172,0.756,174,0.756,175,0.756,176,0.731,178,0.756,180,0.756,182,0.731,186,0.731,188,0.731,190,0.731,192,0.731,194,0.731,196,0.731,197,0.731,198,0.731,200,0.707,202,0.731,203,0.731,204,0.731,205,0.731,206,0.615,207,0.731,208,0.731,209,0.756,244,2.622,247,2.622,249,4.039,291,3.153,299,1.209,304,2.29,317,2.622,328,1.505,379,4.039,401,2.849,418,3.153,431,4.02,432,2.622,433,4.319,451,2.16,452,2.047,511,2.29,513,2.622,514,3.153,560,4.461,605,3.153,624,3.153,628,2.622,629,4.319,654,2.923,667,3.153,668,1.448,676,2.29,710,3.153,716,3.153,744,3.153,754,1.629,778,4.039,795,3.153,797,3.153,804,3.153,814,3.153,822,3.153,824,4.374,825,2.849,826,3.153,835,2.849,836,3.153,841,3.153,851,2.849,853,2.849,855,3.153,859,2.16,866,3.153,873,3.153,874,3.153,911,3.153,912,3.153,1010,3.9,1014,1.699,1082,2.849,1084,2.849,1099,3.153,1100,3.153,1118,3.153,1123,3.717,1124,2.622,1169,3.153,1186,3.153,1189,2.622,1207,3.153,1211,3.717,1212,2.622,1246,3.153,1266,3.153,1269,2.622,1278,3.153,1283,3.153,1298,3.153,1311,3.153,1312,3.614,1313,3.614,1314,5.953,1315,5.124,1316,7.592,1317,5.953,1318,3.153,1319,5.883,1320,7.592,1321,6.839,1322,3.614,1323,3.614,1324,5.124,1325,5.124,1326,5.124,1327,3.614,1328,3.614,1329,6.839,1330,6.478,1331,5.124,1332,3.614,1333,3.614,1334,3.614,1335,3.614,1336,3.614,1337,5.953,1338,5.953,1339,6.478,1340,6.478,1341,3.614,1342,3.614,1343,3.614,1344,3.614,1345,5.953,1346,5.953,1347,3.614,1348,3.614,1349,5.953,1350,5.953,1351,3.614,1352,3.614,1353,3.614,1354,3.614,1355,3.614,1356,3.614,1357,3.614,1358,3.614,1359,7.103,1360,3.614,1361,3.614,1362,7.103,1363,3.614,1364,3.153,1365,3.153,1366,4.47,1367,3.153,1368,3.153,1369,3.153,1370,3.614,1371,3.614]],["title/dependencies.html",[214,2.209,1372,3.393]],["body/dependencies.html",[31,0.013,51,1.461,52,2.807,60,0.011,61,0.011,97,0.321,135,2.578,214,2.578,216,2.688,231,6.047,232,5.464,239,3.08,240,3.08,243,4.392,244,4.147,245,4.507,246,3.861,253,2.106,254,4.507,255,4.507,351,1.461,356,3.08,472,1.786,485,1.786,486,1.786,708,4.987,1373,5.717,1374,8.305,1375,5.717,1376,5.717,1377,5.717,1378,5.717,1379,6.932,1380,4.987,1381,6.932,1382,6.932,1383,5.717,1384,5.717,1385,5.717,1386,5.717,1387,5.717,1388,5.717,1389,5.717,1390,5.717,1391,5.717,1392,5.717,1393,5.717,1394,5.717]],["title/index.html",[20,0.463,284,2.462,1395,2.96]],["body/index.html",[3,0.135,4,0.097,10,6.232,14,4.426,31,0.01,32,0.681,41,2.017,60,0.01,61,0.01,121,0.202,128,1.216,135,3.672,228,1.755,243,4.69,260,4.901,286,4.901,312,2.533,542,3.182,945,4.428,1396,5.618,1397,6.859,1398,7.71,1399,7.404,1400,5.618,1401,5.618,1402,6.859,1403,8.143,1404,5.618,1405,5.618,1406,5.618,1407,5.618,1408,5.618,1409,5.618,1410,5.618,1411,7.906,1412,5.618,1413,5.618,1414,5.618,1415,5.618,1416,5.618,1417,5.618,1418,4.901,1419,6.859,1420,6.859,1421,6.859,1422,5.618,1423,7.71,1424,5.618,1425,5.618,1426,5.618,1427,7.404,1428,5.618,1429,5.618,1430,5.618]],["title/license.html",[284,2.462,1395,2.96,1431,2.96]],["body/license.html",[4,0.097,14,4.096,24,4.892,31,0.01,60,0.01,61,0.01,137,2.753,217,2.529,228,1.752,334,4.892,372,3.352,532,4.421,558,4.421,645,4.068,745,6.454,746,6.722,747,4.892,748,4.892,749,4.892,1014,2.636,1380,4.892,1431,4.892,1432,5.608,1433,6.851,1434,5.608,1435,5.608,1436,5.608,1437,6.851,1438,5.608,1439,8.279,1440,6.851,1441,7.398,1442,5.608,1443,7.398,1444,6.851,1445,5.608,1446,5.608,1447,5.608,1448,5.608,1449,5.608,1450,5.608,1451,5.608,1452,5.608,1453,5.608,1454,5.608,1455,5.608,1456,5.608,1457,6.851,1458,6.851,1459,5.608,1460,5.608,1461,6.851,1462,5.608,1463,5.608,1464,5.608,1465,5.608,1466,5.608,1467,5.608,1468,5.608,1469,5.608,1470,5.608,1471,5.608,1472,5.608,1473,5.608,1474,5.608,1475,5.608,1476,5.608,1477,5.608,1478,5.608,1479,5.608,1480,5.608]],["title/modules.html",[212,0.947]],["body/modules.html",[31,0.011,60,0.011,61,0.011,212,0.965,213,3.388,222,3.827,223,3.827,224,3.827,225,2.782,232,6.575,253,2.355,289,7.234,348,3.827,650,4.111,655,3.827,656,3.21,700,4.111,704,3.827,763,4.111,767,3.827,768,3.827,1112,3.827,1201,4.111,1205,3.827,1272,4.111,1276,3.827,1481,8.341,1482,8.554,1483,8.293]],["title/overview.html",[1484,4.856]],["body/overview.html",[0,0.035,6,1.247,31,0.013,53,0.083,60,0.008,61,0.008,62,0.531,111,1.504,121,0.095,122,1.511,150,0.571,157,1.178,159,1.178,162,1.178,164,1.178,166,1.178,168,1.178,170,1.178,172,1.511,174,1.219,175,1.219,176,1.178,178,1.219,180,1.219,182,1.461,186,1.461,188,1.461,190,1.461,192,1.461,194,1.461,196,1.461,197,1.461,198,1.461,200,1.139,202,1.178,203,1.178,204,1.178,205,1.178,207,1.178,208,1.178,209,1.511,212,0.848,213,4.707,214,1.566,215,1.633,216,1.633,217,1.566,218,3.031,219,3.031,220,3.031,221,3.031,222,3.933,223,5.079,224,3.933,225,4.145,226,2.446,227,1.706,228,1.085,302,2.738,345,3.031,346,3.031,347,3.031,348,3.933,587,2.201,650,5.884,651,3.031,652,3.031,653,3.031,654,2.86,655,3.933,656,4.494,700,5.358,701,3.031,702,3.031,703,3.031,704,3.933,763,5.662,764,3.031,765,3.031,766,3.031,767,3.933,768,5.393,846,3.031,847,3.031,933,3.031,1079,3.031,1080,3.031,1081,3.031,1108,3.031,1109,3.031,1110,3.031,1111,3.031,1112,3.933,1201,5.755,1202,3.031,1203,3.031,1204,3.031,1205,3.933,1272,5.755,1273,3.031,1274,3.031,1275,3.031,1276,3.933,1484,3.031,1485,3.474,1486,3.474,1487,3.474,1488,3.474,1489,3.474]],["title/routes.html",[6,1.998]],["body/routes.html",[6,2.396,31,0.012,60,0.012,61,0.012]],["title/miscellaneous/variables.html",[1319,3.861,1490,2.96]],["body/miscellaneous/variables.html",[7,5.213,19,2.094,20,0.723,31,0.013,33,1.197,34,0.934,37,2.165,41,1.901,60,0.01,61,0.01,75,2.853,85,3.166,95,1.93,114,1.997,120,2.205,182,1.071,186,1.071,188,1.071,190,1.071,192,1.071,194,1.071,196,1.071,197,1.071,198,1.071,249,6.249,299,2.212,306,3.842,317,5.231,335,3.842,341,2.49,379,4.174,399,5.751,401,5.684,402,4.62,403,4.62,410,4.174,511,4.568,790,3.842,1082,4.174,1084,5.684,1318,4.62,1319,4.174,1364,4.62,1365,4.62,1366,4.62,1367,6.29,1368,4.62,1369,6.29,1418,5.769,1490,4.62,1491,6.613,1492,5.296,1493,5.296,1494,5.296,1495,5.296,1496,5.296,1497,5.296,1498,5.296,1499,5.296,1500,6.613,1501,5.296]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":560,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"coverage.html":{}}}],["0.1.1",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":587,"title":{"classes/Error-1.html":{},"pipes/FilterPipe-1.html":{}},"body":{"components/CandidateScreenComponent.html":{},"classes/InMemoryDataService.html":{},"components/ScreenAddEditFormComponent.html":{},"overview.html":{}}}],["1.0.5",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1488,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1485,"title":{},"body":{"overview.html":{}}}],["19/20",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":821,"title":{"pipes/FilterPipe-2.html":{}},"body":{"classes/InMemoryDataService.html":{}}}],["2.0.0",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":976,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["2018",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{}}}],["25/26",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":933,"title":{},"body":{"classes/InMemoryDataService.html":{},"overview.html":{}}}],["3.3.1",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1486,"title":{},"body":{"overview.html":{}}}],["33",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":935,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["4.1.3",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":937,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["5.3.1",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["6.1.2",{"_index":1401,"title":{},"body":{"index.html":{}}}],["6.1.7",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1489,"title":{},"body":{"overview.html":{}}}],["64",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["768",{"_index":1034,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["77",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1487,"title":{},"body":{"overview.html":{}}}],["8/10",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["abov",{"_index":1456,"title":{},"body":{"license.html":{}}}],["access",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["action",{"_index":1476,"title":{},"body":{"license.html":{}}}],["activ",{"_index":455,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["activatedrout",{"_index":450,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["activatedroutesnapshot",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroutestub",{"_index":1,"title":{"classes/ActivatedRouteStub.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{}}}],["activaterout",{"_index":9,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["activecl",{"_index":1020,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["actual_compon",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["add",{"_index":17,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["addansw",{"_index":67,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{}}}],["addanswer(answ",{"_index":77,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{}}}],["addcandid",{"_index":444,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"injectables/CandidateService.html":{}}}],["addcandidate(candid",{"_index":609,"title":{},"body":{"injectables/CandidateService.html":{}}}],["addcategori",{"_index":671,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{}}}],["addcategory(categori",{"_index":678,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{}}}],["addquest",{"_index":1126,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{}}}],["addquestion(quest",{"_index":1173,"title":{},"body":{"injectables/QuestionService.html":{}}}],["address",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["addscreen",{"_index":1214,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{}}}],["addscreen(screen",{"_index":1250,"title":{},"body":{"injectables/ScreenService.html":{}}}],["afterviewinit",{"_index":294,"title":{},"body":{"components/AuthComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{}}}],["alreadi",{"_index":743,"title":{},"body":{"modules/CoreModule.html":{}}}],["ancestor",{"_index":735,"title":{},"body":{"modules/CoreModule.html":{}}}],["and/or",{"_index":1450,"title":{},"body":{"license.html":{}}}],["angular",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"classes/InMemoryDataService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"modules/MiscModule.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":98,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/InMemoryDataService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["angular/compil",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":97,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"classes/Error.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":51,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"modules/HomeModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"modules/MiscRoutingModule.html":{},"components/QuestionAddEditFormComponent.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"modules/ScreensRoutingModule.html":{},"dependencies.html":{}}}],["anoth",{"_index":1162,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["answer",{"_index":80,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{}}}],["answer_correct",{"_index":591,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["answer_qu",{"_index":593,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["answerservic",{"_index":63,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{},"coverage.html":{}}}],["answerurl",{"_index":66,"title":{},"body":{"injectables/AnswerService.html":{}}}],["api",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/InMemoryDataService.html":{},"dependencies.html":{}}}],["app",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":122,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodul",{"_index":213,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":222,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":1479,"title":{},"body":{"license.html":{}}}],["around",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["array",{"_index":480,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"classes/HttpResult.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["array.isarray(responseoptions.bodi",{"_index":963,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["arrow",{"_index":471,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["artifact",{"_index":1412,"title":{},"body":{"index.html":{}}}],["assocait",{"_index":1307,"title":{},"body":{"injectables/StorageService.html":{}}}],["associ",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{},"classes/Candidate.html":{},"modules/CoreModule.html":{},"classes/Question.html":{},"classes/Screen.html":{},"injectables/StorageService.html":{},"license.html":{}}}],["attempt",{"_index":791,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["auth",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Error.html":{},"components/LoginComponent.html":{}}}],["auth'},{'nam",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["auth.compon",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["auth.const",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth/auth.modul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodul",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/guards/auth.guard",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/services/auth.servic",{"_index":1016,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["authcompon",{"_index":157,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":269,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authinterceptor",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["authinterceptorservic",{"_index":322,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{}}}],["authmodul",{"_index":223,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule.forroot",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"license.html":{}}}],["authroutingmodul",{"_index":348,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":328,"title":{"injectables/AuthService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authtoken",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authurl",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["automat",{"_index":1406,"title":{},"body":{"index.html":{}}}],["avail",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["awesom",{"_index":469,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["billi",{"_index":924,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["billy@bob.com",{"_index":925,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["block",{"_index":1296,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["bob",{"_index":918,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["bob@bob.com",{"_index":920,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["bodi",{"_index":974,"title":{},"body":{"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["body'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["boolean",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/Error.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["bootstrap",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["brows",{"_index":1482,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1151,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["build",{"_index":1411,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":886,"title":{},"body":{"classes/HttpResult.html":{}}}],["c",{"_index":645,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"pipes/FilterPipe.html":{},"license.html":{}}}],["c.pk",{"_index":988,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["c.screen_name.tolowercase().includes(term",{"_index":813,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["c1",{"_index":1136,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["c1.pk",{"_index":1156,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["c2",{"_index":1132,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["c2.pk",{"_index":1157,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["call",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"components/CandidateScreenComponent.html":{},"modules/CoreModule.html":{}}}],["can't",{"_index":738,"title":{},"body":{"modules/CoreModule.html":{}}}],["canactiv",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["candid",{"_index":79,"title":{"classes/Candidate.html":{}},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["candidate.first_nam",{"_index":596,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{}}}],["candidate.pk",{"_index":621,"title":{},"body":{"injectables/CandidateService.html":{}}}],["candidate.scor",{"_index":648,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["candidate.screen_nam",{"_index":599,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{}}}],["candidate.surnam",{"_index":598,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{}}}],["candidate_id",{"_index":1256,"title":{},"body":{"injectables/ScreenService.html":{}}}],["candidateaddeditformcompon",{"_index":159,"title":{"components/CandidateAddEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["candidates'},{'nam",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["candidates.compon",{"_index":658,"title":{},"body":{"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/HomeModule.html":{}}}],["candidates.component.html",{"_index":827,"title":{},"body":{"components/HomeCandidatesComponent.html":{}}}],["candidates.component.t",{"_index":826,"title":{},"body":{"components/HomeCandidatesComponent.html":{},"coverage.html":{}}}],["candidates.component.ts:15",{"_index":828,"title":{},"body":{"components/HomeCandidatesComponent.html":{}}}],["candidates.component.ts:25",{"_index":831,"title":{},"body":{"components/HomeCandidatesComponent.html":{}}}],["candidates.component.ts:32",{"_index":829,"title":{},"body":{"components/HomeCandidatesComponent.html":{}}}],["candidates.filt",{"_index":812,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["candidates/candidates.module#candidatesmodul",{"_index":777,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["candidates/hom",{"_index":825,"title":{},"body":{"components/HomeCandidatesComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["candidates/services/candidate.servic",{"_index":832,"title":{},"body":{"components/HomeCandidatesComponent.html":{}}}],["candidatescompon",{"_index":164,"title":{"components/CandidatesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["candidatescreencompon",{"_index":162,"title":{"components/CandidateScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["candidateservic",{"_index":451,"title":{"injectables/CandidateService.html":{}},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/HomeCandidatesComponent.html":{},"coverage.html":{}}}],["candidateslistcompon",{"_index":166,"title":{"components/CandidatesListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["candidatesmodul",{"_index":650,"title":{"modules/CandidatesModule.html":{}},"body":{"modules/CandidatesModule.html":{},"modules.html":{},"overview.html":{}}}],["candidatesroutingmodul",{"_index":655,"title":{"modules/CandidatesRoutingModule.html":{}},"body":{"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["candidateurl",{"_index":606,"title":{},"body":{"injectables/CandidateService.html":{}}}],["card",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["card'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["case",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["cat.categori",{"_index":1199,"title":{},"body":{"components/QuestionsListComponent.html":{}}}],["catch",{"_index":969,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["catcherror",{"_index":102,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["catcherror((r",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{}}}],["catcherror(this.handleerror",{"_index":115,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CandidateService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["categori",{"_index":668,"title":{"classes/Category.html":{}},"body":{"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCategoriesComponent.html":{},"classes/InMemoryDataService.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"coverage.html":{}}}],["categories'},{'nam",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["categories.compon",{"_index":706,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/HomeModule.html":{}}}],["categories.component.html",{"_index":670,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeCategoriesComponent.html":{}}}],["categories.component.scss",{"_index":669,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.t",{"_index":836,"title":{},"body":{"components/HomeCategoriesComponent.html":{},"coverage.html":{}}}],["categories.component.ts:14",{"_index":837,"title":{},"body":{"components/HomeCategoriesComponent.html":{}}}],["categories.component.ts:24",{"_index":839,"title":{},"body":{"components/HomeCategoriesComponent.html":{}}}],["categories.component.ts:31",{"_index":838,"title":{},"body":{"components/HomeCategoriesComponent.html":{}}}],["categories/categori",{"_index":1122,"title":{},"body":{"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{}}}],["categories/categories.module#categoriesmodul",{"_index":774,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["categories/hom",{"_index":835,"title":{},"body":{"components/HomeCategoriesComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["categories/services/category.servic",{"_index":840,"title":{},"body":{"components/HomeCategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{}}}],["categoriescompon",{"_index":168,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoriesmodul",{"_index":700,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesroutingmodul",{"_index":704,"title":{"modules/CategoriesRoutingModule.html":{}},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["category.categori",{"_index":1168,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["category.pk",{"_index":725,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.trim",{"_index":693,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categoryservic",{"_index":676,"title":{"injectables/CategoryService.html":{}},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/HomeCategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"coverage.html":{}}}],["categoryurl",{"_index":717,"title":{},"body":{"injectables/CategoryService.html":{}}}],["chang",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["charg",{"_index":1436,"title":{},"body":{"license.html":{}}}],["check",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"components/CandidateScreenComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"index.html":{}}}],["checkact",{"_index":1032,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["checkdon",{"_index":522,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["checkselect",{"_index":1215,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["checkselected(quest",{"_index":1219,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["child",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"components/CandidatesComponent.html":{},"modules/CategoriesRoutingModule.html":{},"modules/CoreModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["child.titl",{"_index":1055,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["children",{"_index":376,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/MenuItem.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["claim",{"_index":1472,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ActivatedRouteStub.html":{},"classes/Candidate.html":{},"classes/Category.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"classes/Screen.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":1299,"title":{},"body":{"injectables/StorageService.html":{}}}],["clear(key",{"_index":1301,"title":{},"body":{"injectables/StorageService.html":{}}}],["cli",{"_index":1399,"title":{},"body":{"index.html":{}}}],["click",{"_index":1167,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["client",{"_index":76,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["cluster_appmodul",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_candidatesmodul",{"_index":651,"title":{},"body":{"modules/CandidatesModule.html":{},"overview.html":{}}}],["cluster_candidatesmodule_declar",{"_index":652,"title":{},"body":{"modules/CandidatesModule.html":{},"overview.html":{}}}],["cluster_candidatesmodule_import",{"_index":653,"title":{},"body":{"modules/CandidatesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodul",{"_index":701,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_declar",{"_index":702,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_import",{"_index":703,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":764,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":765,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":766,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":846,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":847,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":848,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_layoutmodul",{"_index":1079,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":1080,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_export",{"_index":1081,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_miscmodul",{"_index":1108,"title":{},"body":{"modules/MiscModule.html":{},"overview.html":{}}}],["cluster_miscmodule_declar",{"_index":1109,"title":{},"body":{"modules/MiscModule.html":{},"overview.html":{}}}],["cluster_miscmodule_export",{"_index":1111,"title":{},"body":{"modules/MiscModule.html":{},"overview.html":{}}}],["cluster_miscmodule_import",{"_index":1110,"title":{},"body":{"modules/MiscModule.html":{},"overview.html":{}}}],["cluster_questionsmodul",{"_index":1202,"title":{},"body":{"modules/QuestionsModule.html":{},"overview.html":{}}}],["cluster_questionsmodule_declar",{"_index":1203,"title":{},"body":{"modules/QuestionsModule.html":{},"overview.html":{}}}],["cluster_questionsmodule_import",{"_index":1204,"title":{},"body":{"modules/QuestionsModule.html":{},"overview.html":{}}}],["cluster_screensmodul",{"_index":1273,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["cluster_screensmodule_declar",{"_index":1274,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["cluster_screensmodule_import",{"_index":1275,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["code",{"_index":1408,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["compar",{"_index":1134,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["comparefn",{"_index":1127,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["comparefn(c1",{"_index":1131,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["compon",{"_index":121,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["condit",{"_index":1455,"title":{},"body":{"license.html":{}}}],["connect",{"_index":1480,"title":{},"body":{"license.html":{}}}],["console.log(r",{"_index":647,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["const",{"_index":108,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"injectables/CategoryService.html":{},"modules/DashboardRoutingModule.html":{},"classes/InMemoryDataService.html":{},"modules/LayoutModule.html":{},"modules/MiscRoutingModule.html":{},"injectables/QuestionService.html":{},"modules/QuestionsRoutingModule.html":{},"injectables/ScreenService.html":{},"modules/ScreensRoutingModule.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["constructor(@opt",{"_index":741,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(authservic",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["constructor(candidateservic",{"_index":527,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/HomeCandidatesComponent.html":{}}}],["constructor(categoryservic",{"_index":675,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeCategoriesComponent.html":{}}}],["constructor(docu",{"_index":1287,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["constructor(http",{"_index":71,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["constructor(initialparam",{"_index":26,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["constructor(priv",{"_index":1058,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["constructor(questionservic",{"_index":858,"title":{},"body":{"components/HomeQuestionsComponent.html":{},"components/QuestionsListComponent.html":{}}}],["constructor(rout",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CandidateAddEditFormComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["constructor(screenservic",{"_index":868,"title":{},"body":{"components/HomeScreensComponent.html":{},"components/ScreensListComponent.html":{}}}],["constructor(spinnerservic",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{},"components/LayoutComponent.html":{}}}],["constructor(storageservic",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(success",{"_index":881,"title":{},"body":{"classes/HttpResult.html":{}}}],["content",{"_index":1051,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["content'},{'nam",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["contentedit",{"_index":708,"title":{},"body":{"modules/CategoriesModule.html":{},"dependencies.html":{}}}],["contenteditabledirect",{"_index":707,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["context",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1477,"title":{},"body":{"license.html":{}}}],["converttoparammap",{"_index":50,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["copi",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{}}}],["copyright",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{}}}],["core",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http",{"_index":100,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{}}}],["core/services/spinner.servic",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["core/services/storage.servic",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["coremodul",{"_index":224,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["correctli",{"_index":604,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["count",{"_index":830,"title":{},"body":{"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{}}}],["coverag",{"_index":1311,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":74,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{}}}],["createdb",{"_index":914,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["css",{"_index":939,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["ctrl",{"_index":1166,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["current",{"_index":86,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{}}}],["currentansw",{"_index":517,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["currentquest",{"_index":518,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["currentquestion?.quest",{"_index":603,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["damag",{"_index":1473,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["dashboard'},{'nam",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["dashboard.compon",{"_index":771,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["dashboard/dashboard.module#dashboardmodul",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dashboardcompon",{"_index":170,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":763,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodul",{"_index":767,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/Error.html":{},"classes/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/StorageService.html":{}}}],["data.email",{"_index":1005,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.first_nam",{"_index":1001,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.id",{"_index":986,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.pk",{"_index":989,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.screen",{"_index":984,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.screen_nam",{"_index":985,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.screen_pk",{"_index":990,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.servic",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["data.service.t",{"_index":912,"title":{},"body":{"classes/InMemoryDataService.html":{},"coverage.html":{}}}],["data.service.ts:130",{"_index":956,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:15",{"_index":944,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:165",{"_index":951,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:36",{"_index":950,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:57",{"_index":928,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:7",{"_index":940,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:80",{"_index":959,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.service.ts:92",{"_index":953,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["data.surnam",{"_index":1003,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["dataencapsul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":1440,"title":{},"body":{"license.html":{}}}],["declar",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"overview.html":{}}}],["decor",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["default",{"_index":37,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["delet",{"_index":613,"title":{},"body":{"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{}}}],["deletecandid",{"_index":607,"title":{},"body":{"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{}}}],["deletecandidate(candid",{"_index":611,"title":{},"body":{"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{}}}],["deletecategori",{"_index":672,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{}}}],["deletecategory(categori",{"_index":680,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{}}}],["deletequest",{"_index":1171,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{}}}],["deletequestion(quest",{"_index":1175,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{}}}],["deletescreen",{"_index":1248,"title":{},"body":{"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{}}}],["deletescreen(screen",{"_index":1252,"title":{},"body":{"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{}}}],["depend",{"_index":214,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":8,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["desktop",{"_index":474,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["dev",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["develop",{"_index":945,"title":{},"body":{"classes/InMemoryDataService.html":{},"components/ScreenAddEditFormComponent.html":{},"index.html":{}}}],["direct",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1410,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1415,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1414,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1448,"title":{},"body":{"license.html":{}}}],["document",{"_index":1014,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["done",{"_index":531,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["doubl",{"_index":11,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["duplic",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["dynam",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1424,"title":{},"body":{"index.html":{}}}],["each",{"_index":550,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["edit",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["editcategori",{"_index":673,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{}}}],["editcategory(categori",{"_index":682,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{}}}],["eg",{"_index":1244,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["el",{"_index":1284,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["element",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["email",{"_index":419,"title":{},"body":{"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"classes/InMemoryDataService.html":{},"components/LoginComponent.html":{}}}],["end",{"_index":1423,"title":{},"body":{"index.html":{}}}],["environ",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":904,"title":{},"body":{"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{}}}],["error",{"_index":91,"title":{"classes/Error.html":{},"classes/Error-1.html":{}},"body":{"injectables/AnswerService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"classes/HttpResult.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"coverage.html":{}}}],["error'},{'nam",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["error.component.html",{"_index":799,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.scss",{"_index":798,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.compon",{"_index":1115,"title":{},"body":{"modules/MiscModule.html":{}}}],["errorcompon",{"_index":172,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"modules/MiscModule.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errors.push(err",{"_index":905,"title":{},"body":{"classes/HttpResult.html":{}}}],["errors.push(this.response.statustext",{"_index":909,"title":{},"body":{"classes/HttpResult.html":{}}}],["errors.push(v",{"_index":908,"title":{},"body":{"classes/HttpResult.html":{}}}],["etc",{"_index":549,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["event",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"license.html":{}}}],["execut",{"_index":1420,"title":{},"body":{"index.html":{}}}],["export",{"_index":53,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"overview.html":{}}}],["express",{"_index":1463,"title":{},"body":{"license.html":{}}}],["faarrowleft",{"_index":439,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["faarrowright",{"_index":519,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["faat",{"_index":782,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["fadesktop",{"_index":440,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/DashboardComponent.html":{}}}],["fahom",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fake",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["faketoken",{"_index":975,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["fakey",{"_index":781,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["falistalt",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fals",{"_index":120,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"miscellaneous/variables.html":{}}}],["faplu",{"_index":441,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidatesListComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["faquest",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fasav",{"_index":442,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["fasignoutalt",{"_index":1015,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["faspinn",{"_index":783,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{},"components/SpinnerComponent.html":{}}}],["fatrash",{"_index":632,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["fauser",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":805,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["filterpip",{"_index":654,"title":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}},"body":{"modules/CandidatesModule.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":739,"title":{},"body":{"modules/CoreModule.html":{}}}],["first",{"_index":510,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["first_nam",{"_index":420,"title":{},"body":{"classes/Candidate.html":{},"classes/InMemoryDataService.html":{}}}],["fit",{"_index":1466,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1417,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1454,"title":{},"body":{"license.html":{}}}],["font",{"_index":468,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["fontawesom",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{}}}],["fontawesomemodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["footer",{"_index":1052,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["footer'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["form",{"_index":434,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form'},{'nam",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["form.compon",{"_index":660,"title":{},"body":{"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["form.component.html",{"_index":438,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.scss",{"_index":436,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.t",{"_index":433,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:100",{"_index":1221,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:108",{"_index":1130,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["form.component.ts:113",{"_index":1222,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:115",{"_index":464,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:126",{"_index":1143,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["form.component.ts:131",{"_index":1218,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:132",{"_index":460,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:139",{"_index":463,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:142",{"_index":1140,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["form.component.ts:147",{"_index":1227,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:153",{"_index":1142,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["form.component.ts:163",{"_index":1223,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:170",{"_index":1224,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:22",{"_index":465,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:23",{"_index":1149,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:24",{"_index":466,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:25",{"_index":1144,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:26",{"_index":481,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:27",{"_index":1145,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:28",{"_index":479,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:29",{"_index":1153,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:30",{"_index":467,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:31",{"_index":1150,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:32",{"_index":477,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:33",{"_index":1148,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:34",{"_index":473,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:35",{"_index":1146,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:36",{"_index":475,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:37",{"_index":1147,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:38",{"_index":454,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:39",{"_index":1129,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:54",{"_index":462,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:55",{"_index":1141,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:73",{"_index":459,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:74",{"_index":1133,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:81",{"_index":1137,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["form.component.ts:83",{"_index":1226,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["form.component.ts:86",{"_index":458,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form.component.ts:94",{"_index":1139,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["form.component.ts:98",{"_index":456,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["form/candid",{"_index":432,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"coverage.html":{}}}],["form/quest",{"_index":1124,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"coverage.html":{}}}],["form/screen",{"_index":1212,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"coverage.html":{}}}],["formgroup",{"_index":784,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["formsmodul",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/HomeModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["forroot",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["fortawesome/angular",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fre",{"_index":485,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{}}}],["free",{"_index":1380,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["full",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["furnish",{"_index":1453,"title":{},"body":{"license.html":{}}}],["further",{"_index":1426,"title":{},"body":{"index.html":{}}}],["gener",{"_index":1398,"title":{},"body":{"index.html":{}}}],["get",{"_index":1395,"title":{"index.html":{},"license.html":{}},"body":{}}],["get(key",{"_index":1303,"title":{},"body":{"injectables/StorageService.html":{}}}],["getbodyerror",{"_index":875,"title":{},"body":{"classes/HttpResult.html":{}}}],["getcandid",{"_index":445,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/HomeCandidatesComponent.html":{}}}],["getcandidate(id",{"_index":457,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{}}}],["getcategori",{"_index":674,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/HomeCategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{}}}],["getcurrentansw",{"_index":68,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{}}}],["getcurrentanswer(questionid",{"_index":81,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getcurrentquest",{"_index":523,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["geterror",{"_index":876,"title":{},"body":{"classes/HttpResult.html":{}}}],["getquest",{"_index":857,"title":{},"body":{"components/HomeQuestionsComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["getquestion(id",{"_index":1138,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{}}}],["getrespons",{"_index":877,"title":{},"body":{"classes/HttpResult.html":{}}}],["getscor",{"_index":524,"title":{},"body":{"components/CandidateScreenComponent.html":{},"injectables/ScreenService.html":{}}}],["getscore(candidate_id",{"_index":1254,"title":{},"body":{"injectables/ScreenService.html":{}}}],["getscreen",{"_index":446,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/HomeScreensComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{}}}],["getscreen(id",{"_index":539,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{}}}],["getstatu",{"_index":878,"title":{},"body":{"classes/HttpResult.html":{}}}],["getstatustext",{"_index":879,"title":{},"body":{"classes/HttpResult.html":{}}}],["gettoken",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["global",{"_index":1291,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["go",{"_index":1429,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1435,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1483,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":302,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["handl",{"_index":90,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{}}}],["handleerror",{"_index":69,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["handleerror(r",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{}}}],["header",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'nam",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["help",{"_index":1427,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":1434,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1285,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["holder",{"_index":1470,"title":{},"body":{"license.html":{}}}],["home",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["home'},{'nam",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["home.compon",{"_index":850,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":773,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["home/home.modul",{"_index":770,"title":{},"body":{"modules/DashboardModule.html":{}}}],["homecandidatescompon",{"_index":174,"title":{"components/HomeCandidatesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecategoriescompon",{"_index":175,"title":{"components/HomeCategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecompon",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":768,"title":{"modules/HomeModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homequestionscompon",{"_index":178,"title":{"components/HomeQuestionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homescreenscompon",{"_index":180,"title":{"components/HomeScreensComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlisten",{"_index":1013,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["hostlistener('window:res",{"_index":1025,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["html",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["htmlelement",{"_index":1018,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"injectables/SpinnerService.html":{}}}],["http",{"_index":75,"title":{},"body":{"injectables/AnswerService.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/HttpResult.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1405,"title":{},"body":{"index.html":{}}}],["http_interceptor",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{}}}],["httpclient",{"_index":72,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["httpclientinmemorywebapimodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientinmemorywebapimodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpheader",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpheaders({'cont",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpoption",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httprequest",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httprespons",{"_index":961,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["httpresult",{"_index":99,"title":{"classes/HttpResult.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"coverage.html":{}}}],["hyperlink",{"_index":714,"title":{},"body":{"classes/Category.html":{}}}],["i.id",{"_index":966,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["i.pk",{"_index":965,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["icon",{"_index":472,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{}}}],["icondefinit",{"_index":1102,"title":{},"body":{"classes/MenuItem.html":{}}}],["id",{"_index":83,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/InMemoryDataService.html":{},"classes/MenuItem.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{}}}],["identifi",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":520,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["if(pmap.get('id",{"_index":488,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["if(res.getresponse().length",{"_index":575,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["if(res.issuccess",{"_index":793,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["implement",{"_index":292,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["impli",{"_index":1464,"title":{},"body":{"license.html":{}}}],["import",{"_index":49,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["inact",{"_index":1041,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["includ",{"_index":1443,"title":{},"body":{"license.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["initi",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialparam",{"_index":35,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["inject",{"_index":62,"title":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}},"body":{"injectables/AnswerService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"classes/Error.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(docu",{"_index":1023,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"injectables/SpinnerService.html":{}}}],["injector",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["inmemorydataservic",{"_index":247,"title":{"classes/InMemoryDataService.html":{}},"body":{"modules/AppModule.html":{},"classes/InMemoryDataService.html":{},"coverage.html":{}}}],["inmemorydbservic",{"_index":913,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["input",{"_index":800,"title":{},"body":{"components/ErrorComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["instanceof",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["intercept",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":321,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.servic",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{}}}],["interceptor.service.t",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:13",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:28",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors/auth",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{}}}],["issuccess",{"_index":880,"title":{},"body":{"classes/HttpResult.html":{}}}],["item",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"classes/MenuItem.html":{}}}],["item.email",{"_index":1004,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.first_nam",{"_index":1000,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.nam",{"_index":996,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.quest",{"_index":998,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.screen",{"_index":1006,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.screen_nam",{"_index":1007,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.screen_pk",{"_index":1008,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.surnam",{"_index":1002,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["item.t",{"_index":1100,"title":{},"body":{"classes/MenuItem.html":{},"coverage.html":{}}}],["item.titl",{"_index":1054,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["item.ts:14",{"_index":1105,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":1103,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:24",{"_index":1104,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:29",{"_index":1101,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:9",{"_index":1106,"title":{},"body":{"classes/MenuItem.html":{}}}],["items:menuitem",{"_index":1056,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["itself",{"_index":733,"title":{},"body":{"modules/CoreModule.html":{}}}],["javascript",{"_index":930,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["jone",{"_index":919,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["jqueri",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":906,"title":{},"body":{"classes/HttpResult.html":{}}}],["karma",{"_index":1422,"title":{},"body":{"index.html":{}}}],["key",{"_index":790,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1462,"title":{},"body":{"license.html":{}}}],["last",{"_index":1200,"title":{},"body":{"components/QuestionsListComponent.html":{}}}],["layout",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["layout'},{'nam",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["layout.compon",{"_index":1083,"title":{},"body":{"modules/LayoutModule.html":{}}}],["layout.component.scss",{"_index":1057,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["layout/layout.modul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["layout/menu",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["layout_compon",{"_index":1084,"title":{},"body":{"modules/LayoutModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["layoutcardbodycompon",{"_index":182,"title":{"components/LayoutCardBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutcardcompon",{"_index":186,"title":{"components/LayoutCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutcardfootercompon",{"_index":188,"title":{"components/LayoutCardFooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutcardheadercompon",{"_index":190,"title":{"components/LayoutCardHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutcompon",{"_index":192,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutcontentcompon",{"_index":194,"title":{"components/LayoutContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutfootercompon",{"_index":196,"title":{"components/LayoutFooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutheadercompon",{"_index":197,"title":{"components/LayoutHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["layoutmodul",{"_index":225,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["layoutsidebarcompon",{"_index":198,"title":{"components/LayoutSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["lazi",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leahi",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{}}}],["left",{"_index":470,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["legend",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"modules/MiscModule.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["liabil",{"_index":1474,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1471,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1431,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1444,"title":{},"body":{"license.html":{}}}],["list",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list'},{'nam",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["list.compon",{"_index":661,"title":{},"body":{"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["list.component.html",{"_index":631,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.scss",{"_index":630,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.t",{"_index":629,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":638,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["list.component.ts:21",{"_index":640,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:23",{"_index":639,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:25",{"_index":633,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:27",{"_index":1190,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:37",{"_index":637,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["list.component.ts:39",{"_index":1194,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:44",{"_index":636,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["list.component.ts:46",{"_index":1193,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:51",{"_index":635,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["list.component.ts:53",{"_index":1192,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list.component.ts:62",{"_index":634,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["list.component.ts:65",{"_index":1191,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["list/candid",{"_index":628,"title":{},"body":{"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"coverage.html":{}}}],["list/quest",{"_index":1189,"title":{},"body":{"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"coverage.html":{}}}],["list/screen",{"_index":1269,"title":{},"body":{"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"coverage.html":{}}}],["listen",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["load",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/CandidatesComponent.html":{},"modules/CoreModule.html":{}}}],["loadchildren",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["local",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem(key",{"_index":1308,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1310,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.setitem(key",{"_index":1309,"title":{},"body":{"injectables/StorageService.html":{}}}],["locat",{"_index":453,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["locationback",{"_index":447,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["log",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":377,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Error.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["login(data",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":786,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":787,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincompon",{"_index":200,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":789,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["loginurl",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["logouturl",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["look",{"_index":734,"title":{},"body":{"modules/CoreModule.html":{}}}],["main",{"_index":1019,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["make",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["map",{"_index":101,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["map((r",{"_index":112,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["match",{"_index":61,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.max(...reqinfo.collection.map(c",{"_index":987,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["memori",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"classes/InMemoryDataService.html":{},"coverage.html":{},"dependencies.html":{}}}],["menu",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"classes/MenuItem.html":{}}}],["menuitem",{"_index":754,"title":{"classes/MenuItem.html":{}},"body":{"components/DashboardComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"classes/MenuItem.html":{},"coverage.html":{}}}],["merchant",{"_index":1465,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1446,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["misc",{"_index":1114,"title":{},"body":{"modules/MiscModule.html":{}}}],["misc/misc.modul",{"_index":662,"title":{},"body":{"modules/CandidatesModule.html":{},"modules/DashboardModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["miscellan",{"_index":1490,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miscmodul",{"_index":656,"title":{"modules/MiscModule.html":{}},"body":{"modules/CandidatesModule.html":{},"modules/DashboardModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["miscroutingmodul",{"_index":1112,"title":{"modules/MiscRoutingModule.html":{}},"body":{"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mit",{"_index":1432,"title":{},"body":{"license.html":{}}}],["mock",{"_index":40,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["mode",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["modifi",{"_index":1445,"title":{},"body":{"license.html":{}}}],["modul",{"_index":212,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["more",{"_index":1428,"title":{},"body":{"index.html":{}}}],["multi:tru",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{}}}],["multiselect",{"_index":1135,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["n/a",{"_index":649,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["navig",{"_index":542,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"index.html":{}}}],["navigationcancel",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["navigationerror",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":18,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/CandidateScreenComponent.html":{}}}],["next.handle(req",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/CategoriesModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":295,"title":{},"body":{"components/AuthComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{}}}],["ngform",{"_index":785,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["ngmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["ngoninit",{"_index":296,"title":{},"body":{"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["ngscreener",{"_index":1396,"title":{},"body":{"index.html":{}}}],["none",{"_index":1297,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["noninfring",{"_index":1469,"title":{},"body":{"license.html":{}}}],["notic",{"_index":1457,"title":{},"body":{"license.html":{}}}],["number",{"_index":82,"title":{},"body":{"injectables/AnswerService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"classes/Category.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{}}}],["object",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpResult.html":{},"components/QuestionAddEditFormComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(this.response.error",{"_index":907,"title":{},"body":{"classes/HttpResult.html":{}}}],["observ",{"_index":13,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/InMemoryDataService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["observables'",{"_index":46,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["obtain",{"_index":1438,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":973,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["ok",{"_index":740,"title":{},"body":{"modules/CoreModule.html":{}}}],["on",{"_index":736,"title":{},"body":{"modules/CoreModule.html":{},"classes/InMemoryDataService.html":{}}}],["oninit",{"_index":293,"title":{},"body":{"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["onres",{"_index":1026,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["onsubmit",{"_index":448,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["option",{"_index":34,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["otherwis",{"_index":532,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"license.html":{}}}],["out",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1484,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1372,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":461,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["param",{"_index":27,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["parammap",{"_index":12,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["parent",{"_index":625,"title":{},"body":{"components/CandidatesComponent.html":{}}}],["parentmodul",{"_index":742,"title":{},"body":{"modules/CoreModule.html":{}}}],["partial",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":1467,"title":{},"body":{"license.html":{}}}],["password",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"classes/MenuItem.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["path:'detail/:id",{"_index":665,"title":{},"body":{"modules/CandidatesRoutingModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["path:'new",{"_index":664,"title":{},"body":{"modules/CandidatesRoutingModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["path:'screen/:id",{"_index":666,"title":{},"body":{"modules/CandidatesRoutingModule.html":{}}}],["path?:str",{"_index":1107,"title":{},"body":{"classes/MenuItem.html":{}}}],["pathmatch",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pattern",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["permiss",{"_index":1433,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1452,"title":{},"body":{"license.html":{}}}],["person",{"_index":1437,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":111,"title":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/filter.pip",{"_index":659,"title":{},"body":{"modules/CandidatesModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["pipetransform",{"_index":810,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["pk",{"_index":421,"title":{},"body":{"classes/Candidate.html":{},"classes/Category.html":{},"classes/InMemoryDataService.html":{},"classes/Question.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["pk:1",{"_index":929,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["pk:2",{"_index":931,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["pk:3",{"_index":934,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["pk:4",{"_index":936,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["pk:5",{"_index":938,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["plu",{"_index":476,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["pmap.get('id",{"_index":490,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["portion",{"_index":1460,"title":{},"body":{"license.html":{}}}],["post",{"_index":915,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["post(reqinfo",{"_index":952,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["post204",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["prevent",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["previou",{"_index":55,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["prevquest",{"_index":525,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["privat",{"_index":23,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{}}}],["prod",{"_index":1416,"title":{},"body":{"index.html":{}}}],["product",{"_index":1418,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressbar",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"dependencies.html":{}}}],["project",{"_index":1397,"title":{},"body":{"index.html":{}}}],["promis",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":21,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["protractor",{"_index":1425,"title":{},"body":{"index.html":{}}}],["provid",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":104,"title":{},"body":{"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["publish",{"_index":1447,"title":{},"body":{"license.html":{}}}],["pump",{"_index":57,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["purpos",{"_index":1468,"title":{},"body":{"license.html":{}}}],["put",{"_index":916,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["put(reqinfo",{"_index":955,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["python",{"_index":1245,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["q",{"_index":1196,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["q.categori",{"_index":819,"title":{},"body":{"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["q.pk",{"_index":1231,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["question",{"_index":87,"title":{"classes/Question.html":{}},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["question.pk",{"_index":1184,"title":{},"body":{"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["question.quest",{"_index":1198,"title":{},"body":{"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["question:q.quest",{"_index":1237,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["questionaddeditformcompon",{"_index":202,"title":{"components/QuestionAddEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionid",{"_index":88,"title":{},"body":{"injectables/AnswerService.html":{}}}],["questions'},{'nam",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["questions.compon",{"_index":852,"title":{},"body":{"modules/HomeModule.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{}}}],["questions.component.html",{"_index":856,"title":{},"body":{"components/HomeQuestionsComponent.html":{}}}],["questions.component.t",{"_index":855,"title":{},"body":{"components/HomeQuestionsComponent.html":{},"coverage.html":{}}}],["questions.component.ts:15",{"_index":860,"title":{},"body":{"components/HomeQuestionsComponent.html":{}}}],["questions.component.ts:25",{"_index":862,"title":{},"body":{"components/HomeQuestionsComponent.html":{}}}],["questions.component.ts:32",{"_index":861,"title":{},"body":{"components/HomeQuestionsComponent.html":{}}}],["questions.filter(q",{"_index":817,"title":{},"body":{"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["questions/hom",{"_index":851,"title":{},"body":{"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"coverage.html":{}}}],["questions/quest",{"_index":565,"title":{},"body":{"components/CandidateScreenComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["questions/questions.module#questionsmodul",{"_index":775,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["questions/services/question.servic",{"_index":863,"title":{},"body":{"components/HomeQuestionsComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["questions_answ",{"_index":948,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["questionscompon",{"_index":203,"title":{"components/QuestionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionservic",{"_index":859,"title":{"injectables/QuestionService.html":{}},"body":{"components/HomeQuestionsComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"coverage.html":{}}}],["questionslistcompon",{"_index":204,"title":{"components/QuestionsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionsmodul",{"_index":1201,"title":{"modules/QuestionsModule.html":{}},"body":{"modules/QuestionsModule.html":{},"modules.html":{},"overview.html":{}}}],["questionsroutingmodul",{"_index":1205,"title":{"modules/QuestionsRoutingModule.html":{}},"body":{"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["questionurl",{"_index":1170,"title":{},"body":{"injectables/QuestionService.html":{}}}],["re",{"_index":113,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["readm",{"_index":1430,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":22,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["redirectto",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["refresh",{"_index":547,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["refreshdata",{"_index":526,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["regist",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["reload",{"_index":1407,"title":{},"body":{"index.html":{}}}],["remov",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/StorageService.html":{}}}],["removetoken",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["render",{"_index":1022,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["renderer2",{"_index":1012,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["replaysubject",{"_index":42,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["repres",{"_index":65,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["req",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.clon",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["reqinfo",{"_index":954,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.collection.find(i",{"_index":993,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.collection.push(data",{"_index":992,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.req.bodi",{"_index":979,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.req.body.nam",{"_index":997,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.req.body.pk",{"_index":994,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.req.body.quest",{"_index":999,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.req.body.screen",{"_index":983,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["reqinfo.resourceurl",{"_index":971,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["request",{"_index":85,"title":{},"body":{"injectables/AnswerService.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"modules/CoreModule.html":{},"classes/HttpResult.html":{},"miscellaneous/variables.html":{}}}],["requestinfo",{"_index":958,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["requir",{"_index":511,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.geterror",{"_index":503,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["res.getrespons",{"_index":497,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["res.getresponse().length",{"_index":834,"title":{},"body":{"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{}}}],["res.getresponse()['key",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.getresponse()[0",{"_index":576,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["res.issuccess",{"_index":495,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["reserv",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reset",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"overview.html":{}}}],["resiz",{"_index":1024,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["resourceurl",{"_index":970,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["resourceurl.includes('candid",{"_index":978,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["resourceurl.includes('login",{"_index":972,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["resourceurl.includes('logout",{"_index":977,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["resourceurl.includes('screen",{"_index":995,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["respons",{"_index":882,"title":{},"body":{"classes/HttpResult.html":{}}}],["responseinterceptor",{"_index":917,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["responseinterceptor(responseopt",{"_index":957,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["responseopt",{"_index":960,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["responseoptions.body.id",{"_index":968,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["responseoptions.body.map(i",{"_index":964,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["responseoptions.body.pk",{"_index":967,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["rest",{"_index":106,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{}}}],["restrict",{"_index":1442,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.t",{"_index":874,"title":{},"body":{"classes/HttpResult.html":{},"coverage.html":{}}}],["result.ts:18",{"_index":885,"title":{},"body":{"classes/HttpResult.html":{}}}],["result.ts:2",{"_index":883,"title":{},"body":{"classes/HttpResult.html":{}}}],["result.ts:29",{"_index":890,"title":{},"body":{"classes/HttpResult.html":{}}}],["result.ts:36",{"_index":891,"title":{},"body":{"classes/HttpResult.html":{}}}],["result.ts:43",{"_index":893,"title":{},"body":{"classes/HttpResult.html":{}}}],["result.ts:51",{"_index":884,"title":{},"body":{"classes/HttpResult.html":{}}}],["result.ts:74",{"_index":895,"title":{},"body":{"classes/HttpResult.html":{}}}],["return",{"_index":47,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["richard",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{}}}],["right",{"_index":558,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/DashboardComponent.html":{},"license.html":{}}}],["root",{"_index":105,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["root'},{'nam",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["round",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"dependencies.html":{}}}],["roundprogressmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["rout",{"_index":6,"title":{"routes.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/MiscRoutingModule.html":{},"components/QuestionAddEditFormComponent.html":{},"modules/QuestionsRoutingModule.html":{},"components/ScreenAddEditFormComponent.html":{},"modules/ScreensRoutingModule.html":{},"coverage.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscRoutingModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":378,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/MiscRoutingModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{}}}],["routing.module.t",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CandidatesRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/MiscRoutingModule.html":{},"modules/QuestionsRoutingModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["run",{"_index":1403,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":52,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/InMemoryDataService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":103,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["s",{"_index":981,"title":{},"body":{"classes/InMemoryDataService.html":{},"components/ScreensListComponent.html":{}}}],["s.url",{"_index":982,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["sass",{"_index":932,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["save",{"_index":478,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["saveandadd",{"_index":1125,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["scaffold",{"_index":1409,"title":{},"body":{"index.html":{}}}],["score",{"_index":521,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"classes/InMemoryDataService.html":{},"injectables/ScreenService.html":{}}}],["score.questions_answ",{"_index":601,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["score.scor",{"_index":600,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen",{"_index":206,"title":{"classes/Screen.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["screen'},{'nam",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["screen.compon",{"_index":663,"title":{},"body":{"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{}}}],["screen.component.html",{"_index":516,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.scss",{"_index":515,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.t",{"_index":514,"title":{},"body":{"components/CandidateScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:108",{"_index":537,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:121",{"_index":533,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:135",{"_index":529,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:149",{"_index":551,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:164",{"_index":530,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:177",{"_index":546,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:186",{"_index":541,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:193",{"_index":545,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:201",{"_index":544,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:22",{"_index":552,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:24",{"_index":563,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:26",{"_index":556,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:28",{"_index":559,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:30",{"_index":557,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:32",{"_index":555,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:34",{"_index":562,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:36",{"_index":561,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:38",{"_index":554,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:40",{"_index":553,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:42",{"_index":528,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:60",{"_index":543,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:72",{"_index":540,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:85",{"_index":536,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.component.ts:92",{"_index":535,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen.nam",{"_index":512,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"classes/InMemoryDataService.html":{},"components/ScreensListComponent.html":{}}}],["screen.pk",{"_index":991,"title":{},"body":{"classes/InMemoryDataService.html":{},"injectables/ScreenService.html":{}}}],["screen/candid",{"_index":513,"title":{},"body":{"components/CandidateScreenComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"coverage.html":{}}}],["screen?.questions.length",{"_index":602,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["screen_nam",{"_index":922,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["screen_pk",{"_index":422,"title":{},"body":{"classes/Candidate.html":{},"classes/InMemoryDataService.html":{}}}],["screenaddeditformcompon",{"_index":205,"title":{"components/ScreenAddEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screener",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["screener/answ",{"_index":96,"title":{},"body":{"injectables/AnswerService.html":{}}}],["screener/candid",{"_index":619,"title":{},"body":{"injectables/CandidateService.html":{}}}],["screener/categori",{"_index":724,"title":{},"body":{"injectables/CategoryService.html":{}}}],["screener/quest",{"_index":1182,"title":{},"body":{"injectables/QuestionService.html":{}}}],["screener/screen",{"_index":1262,"title":{},"body":{"injectables/ScreenService.html":{}}}],["screens'},{'nam",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["screens.compon",{"_index":854,"title":{},"body":{"modules/HomeModule.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{}}}],["screens.component.html",{"_index":867,"title":{},"body":{"components/HomeScreensComponent.html":{}}}],["screens.component.t",{"_index":866,"title":{},"body":{"components/HomeScreensComponent.html":{},"coverage.html":{}}}],["screens.component.ts:15",{"_index":869,"title":{},"body":{"components/HomeScreensComponent.html":{}}}],["screens.component.ts:25",{"_index":871,"title":{},"body":{"components/HomeScreensComponent.html":{}}}],["screens.component.ts:32",{"_index":870,"title":{},"body":{"components/HomeScreensComponent.html":{}}}],["screens/hom",{"_index":853,"title":{},"body":{"modules/HomeModule.html":{},"components/HomeScreensComponent.html":{},"coverage.html":{}}}],["screens/screen",{"_index":430,"title":{},"body":{"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{}}}],["screens/screens.module#screensmodul",{"_index":776,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["screens/services/screen.servic",{"_index":484,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/HomeScreensComponent.html":{}}}],["screenscompon",{"_index":207,"title":{"components/ScreensComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screenservic",{"_index":452,"title":{"injectables/ScreenService.html":{}},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/HomeScreensComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"coverage.html":{}}}],["screenslistcompon",{"_index":208,"title":{"components/ScreensListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screensmodul",{"_index":1272,"title":{"modules/ScreensModule.html":{}},"body":{"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["screensroutingmodul",{"_index":1276,"title":{"modules/ScreensRoutingModule.html":{}},"body":{"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["screenurl",{"_index":1247,"title":{},"body":{"injectables/ScreenService.html":{}}}],["select",{"_index":1220,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["selectedquest",{"_index":1213,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["selector",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["sell",{"_index":1451,"title":{},"body":{"license.html":{}}}],["serv",{"_index":1404,"title":{},"body":{"index.html":{}}}],["server",{"_index":1402,"title":{},"body":{"index.html":{}}}],["servic",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"modules/CoreModule.html":{},"classes/Error.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/answer.servic",{"_index":564,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["services/auth.servic",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"classes/Error.html":{},"components/LoginComponent.html":{}}}],["services/candidate.servic",{"_index":483,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{}}}],["services/category.servic",{"_index":690,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["services/question.servic",{"_index":1154,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{}}}],["services/screen.servic",{"_index":1228,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["services/spinner.servic",{"_index":730,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/storage.servic",{"_index":731,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":45,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/StorageService.html":{}}}],["set(key",{"_index":1305,"title":{},"body":{"injectables/StorageService.html":{}}}],["setact",{"_index":1037,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["setheaders:{['author",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["setinact",{"_index":1042,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["setparammap",{"_index":15,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["setparammap(param",{"_index":43,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["settoken",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(r",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["shall",{"_index":1458,"title":{},"body":{"license.html":{}}}],["share",{"_index":54,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["show",{"_index":1286,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["sidebar",{"_index":1053,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["sidenav",{"_index":1017,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["sign",{"_index":1021,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{}}}],["skipself",{"_index":729,"title":{},"body":{"modules/CoreModule.html":{}}}],["softwar",{"_index":1439,"title":{},"body":{"license.html":{}}}],["solid",{"_index":486,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesModule.html":{},"modules/CandidatesRoutingModule.html":{},"components/CategoriesComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"modules/MiscModule.html":{},"modules/MiscRoutingModule.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsModule.html":{},"modules/QuestionsRoutingModule.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensModule.html":{},"modules/ScreensRoutingModule.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["spec\\.t",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["spinner.component.html",{"_index":1280,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":1279,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.compon",{"_index":1116,"title":{},"body":{"modules/MiscModule.html":{}}}],["spinnercompon",{"_index":209,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"modules/MiscModule.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinnerservic",{"_index":133,"title":{"injectables/SpinnerService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/CoreModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{}}}],["spinnerservicestub",{"_index":1369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.constants.t",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.t",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layout.module.t",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../spinner",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":375,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.component.t",{"_index":291,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:11",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":301,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.constants.t",{"_index":1318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.module.t",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/guards/auth.guard.t",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts:13",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts:30",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/interceptors/auth",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":778,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":779,"title":{},"body":{"classes/Error.html":{}}}],["src/app/auth/login/login.component.ts:26",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:28",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:34",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:36",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:38",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:50",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:55",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/services/auth.service.t",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/services/auth.service.ts:111",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:22",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:38",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:45",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:53",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:64",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:90",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/core.module.t",{"_index":728,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/services/http",{"_index":873,"title":{},"body":{"classes/HttpResult.html":{},"coverage.html":{}}}],["src/app/core/services/spinner.service.t",{"_index":1283,"title":{},"body":{"injectables/SpinnerService.html":{},"coverage.html":{}}}],["src/app/core/services/spinner.service.ts:22",{"_index":1290,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/core/services/spinner.service.ts:29",{"_index":1289,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/core/services/spinner.service.ts:7",{"_index":1292,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/core/services/spinner.service.ts:8",{"_index":1288,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/core/services/storage.service.t",{"_index":1298,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/core/services/storage.service.ts:15",{"_index":1304,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/core/services/storage.service.ts:24",{"_index":1306,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/core/services/storage.service.ts:32",{"_index":1302,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/core/services/storage.service.ts:7",{"_index":1300,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/dashboard/candidates/candid",{"_index":431,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"modules/CandidatesRoutingModule.html":{},"coverage.html":{}}}],["src/app/dashboard/candidates/candidate.t",{"_index":418,"title":{},"body":{"classes/Candidate.html":{},"coverage.html":{}}}],["src/app/dashboard/candidates/candidate.ts:10",{"_index":424,"title":{},"body":{"classes/Candidate.html":{}}}],["src/app/dashboard/candidates/candidate.ts:12",{"_index":427,"title":{},"body":{"classes/Candidate.html":{}}}],["src/app/dashboard/candidates/candidate.ts:13",{"_index":428,"title":{},"body":{"classes/Candidate.html":{}}}],["src/app/dashboard/candidates/candidate.ts:7",{"_index":426,"title":{},"body":{"classes/Candidate.html":{}}}],["src/app/dashboard/candidates/candidate.ts:8",{"_index":425,"title":{},"body":{"classes/Candidate.html":{}}}],["src/app/dashboard/candidates/candidate.ts:9",{"_index":429,"title":{},"body":{"classes/Candidate.html":{}}}],["src/app/dashboard/candidates/candidates.component.t",{"_index":624,"title":{},"body":{"components/CandidatesComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/candidates/candidates.component.ts:11",{"_index":626,"title":{},"body":{"components/CandidatesComponent.html":{}}}],["src/app/dashboard/candidates/candidates.component.ts:15",{"_index":627,"title":{},"body":{"components/CandidatesComponent.html":{}}}],["src/app/dashboard/candidates/candidates.module.t",{"_index":657,"title":{},"body":{"modules/CandidatesModule.html":{}}}],["src/app/dashboard/candidates/pipes/filter.pipe.t",{"_index":804,"title":{},"body":{"pipes/FilterPipe.html":{},"coverage.html":{}}}],["src/app/dashboard/candidates/pipes/filter.pipe.ts:14",{"_index":809,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/dashboard/candidates/services/answer.service.t",{"_index":64,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/dashboard/candidates/services/answer.service.ts:14",{"_index":73,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/dashboard/candidates/services/answer.service.ts:29",{"_index":84,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/dashboard/candidates/services/answer.service.ts:51",{"_index":78,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/dashboard/candidates/services/answer.service.ts:74",{"_index":93,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/dashboard/candidates/services/answer.service.ts:95",{"_index":89,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.t",{"_index":605,"title":{},"body":{"injectables/CandidateService.html":{},"coverage.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:100",{"_index":610,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:121",{"_index":615,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:142",{"_index":616,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:15",{"_index":608,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:30",{"_index":614,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:53",{"_index":612,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/candidates/services/candidate.service.ts:77",{"_index":618,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/dashboard/categories/categori",{"_index":709,"title":{},"body":{"modules/CategoriesRoutingModule.html":{}}}],["src/app/dashboard/categories/categories.component.t",{"_index":667,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/categories/categories.component.ts:21",{"_index":687,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:23",{"_index":689,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:25",{"_index":688,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:27",{"_index":677,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:39",{"_index":686,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:46",{"_index":685,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:54",{"_index":683,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:64",{"_index":679,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:80",{"_index":684,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.component.ts:92",{"_index":681,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/dashboard/categories/categories.module.t",{"_index":705,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/app/dashboard/categories/category.t",{"_index":710,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/app/dashboard/categories/category.ts:6",{"_index":711,"title":{},"body":{"classes/Category.html":{}}}],["src/app/dashboard/categories/category.ts:7",{"_index":712,"title":{},"body":{"classes/Category.html":{}}}],["src/app/dashboard/categories/category.ts:9",{"_index":713,"title":{},"body":{"classes/Category.html":{}}}],["src/app/dashboard/categories/services/category.service.t",{"_index":716,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/dashboard/categories/services/category.service.ts:106",{"_index":722,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/dashboard/categories/services/category.service.ts:129",{"_index":723,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/dashboard/categories/services/category.service.ts:17",{"_index":718,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/dashboard/categories/services/category.service.ts:32",{"_index":721,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/dashboard/categories/services/category.service.ts:57",{"_index":719,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/dashboard/categories/services/category.service.ts:81",{"_index":720,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/dashboard/dashboard",{"_index":772,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dashboard.component.t",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:31",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:57",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:61",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.module.t",{"_index":769,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/home/hom",{"_index":824,"title":{},"body":{"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/home/home.component.t",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/home/home.component.ts:11",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/dashboard/home/home.component.ts:15",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/dashboard/home/home.module.t",{"_index":849,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/dashboard/misc/error/error.component.t",{"_index":797,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/misc/error/error.component.ts:15",{"_index":802,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/dashboard/misc/error/error.component.ts:17",{"_index":801,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/dashboard/misc/error/error.component.ts:21",{"_index":803,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/dashboard/misc/error/error.t",{"_index":795,"title":{},"body":{"classes/Error-1.html":{},"coverage.html":{}}}],["src/app/dashboard/misc/error/error.ts:6",{"_index":796,"title":{},"body":{"classes/Error-1.html":{}}}],["src/app/dashboard/misc/misc",{"_index":1117,"title":{},"body":{"modules/MiscRoutingModule.html":{}}}],["src/app/dashboard/misc/misc.module.t",{"_index":1113,"title":{},"body":{"modules/MiscModule.html":{}}}],["src/app/dashboard/misc/spinner/spinner.component.t",{"_index":1278,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/misc/spinner/spinner.component.ts:15",{"_index":1281,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/dashboard/misc/spinner/spinner.component.ts:19",{"_index":1282,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/dashboard/questions/pipes/filter.pipe.t",{"_index":814,"title":{},"body":{"pipes/FilterPipe-1.html":{},"coverage.html":{}}}],["src/app/dashboard/questions/pipes/filter.pipe.ts:16",{"_index":816,"title":{},"body":{"pipes/FilterPipe-1.html":{}}}],["src/app/dashboard/questions/quest",{"_index":1123,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"modules/QuestionsRoutingModule.html":{},"coverage.html":{}}}],["src/app/dashboard/questions/question.t",{"_index":1118,"title":{},"body":{"classes/Question.html":{},"coverage.html":{}}}],["src/app/dashboard/questions/question.ts:11",{"_index":1119,"title":{},"body":{"classes/Question.html":{}}}],["src/app/dashboard/questions/question.ts:7",{"_index":1120,"title":{},"body":{"classes/Question.html":{}}}],["src/app/dashboard/questions/question.ts:9",{"_index":1121,"title":{},"body":{"classes/Question.html":{}}}],["src/app/dashboard/questions/questions.component.t",{"_index":1186,"title":{},"body":{"components/QuestionsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/questions/questions.component.ts:12",{"_index":1188,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["src/app/dashboard/questions/questions.component.ts:8",{"_index":1187,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["src/app/dashboard/questions/questions.module.t",{"_index":1206,"title":{},"body":{"modules/QuestionsModule.html":{}}}],["src/app/dashboard/questions/services/question.service.t",{"_index":1169,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:102",{"_index":1174,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:123",{"_index":1178,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:140",{"_index":1179,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:17",{"_index":1172,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:32",{"_index":1177,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:55",{"_index":1176,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/questions/services/question.service.ts:79",{"_index":1181,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/dashboard/screens/pipes/filter.pipe.t",{"_index":822,"title":{},"body":{"pipes/FilterPipe-2.html":{},"coverage.html":{}}}],["src/app/dashboard/screens/pipes/filter.pipe.ts:16",{"_index":823,"title":{},"body":{"pipes/FilterPipe-2.html":{}}}],["src/app/dashboard/screens/screen",{"_index":1211,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"modules/ScreensRoutingModule.html":{},"coverage.html":{}}}],["src/app/dashboard/screens/screen.t",{"_index":1207,"title":{},"body":{"classes/Screen.html":{},"coverage.html":{}}}],["src/app/dashboard/screens/screen.ts:11",{"_index":1210,"title":{},"body":{"classes/Screen.html":{}}}],["src/app/dashboard/screens/screen.ts:7",{"_index":1209,"title":{},"body":{"classes/Screen.html":{}}}],["src/app/dashboard/screens/screen.ts:9",{"_index":1208,"title":{},"body":{"classes/Screen.html":{}}}],["src/app/dashboard/screens/screens.component.t",{"_index":1266,"title":{},"body":{"components/ScreensComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/screens/screens.component.ts:10",{"_index":1267,"title":{},"body":{"components/ScreensComponent.html":{}}}],["src/app/dashboard/screens/screens.component.ts:14",{"_index":1268,"title":{},"body":{"components/ScreensComponent.html":{}}}],["src/app/dashboard/screens/screens.module.t",{"_index":1277,"title":{},"body":{"modules/ScreensModule.html":{}}}],["src/app/dashboard/screens/services/screen.service.t",{"_index":1246,"title":{},"body":{"injectables/ScreenService.html":{},"coverage.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:100",{"_index":1261,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:123",{"_index":1251,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:144",{"_index":1258,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:16",{"_index":1249,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:161",{"_index":1259,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:32",{"_index":1255,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:54",{"_index":1257,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/dashboard/screens/services/screen.service.ts:76",{"_index":1253,"title":{},"body":{"injectables/ScreenService.html":{}}}],["src/app/in",{"_index":911,"title":{},"body":{"classes/InMemoryDataService.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.t",{"_index":1010,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.ts:101",{"_index":1072,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:109",{"_index":1073,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:117",{"_index":1074,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:130",{"_index":1070,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:149",{"_index":1064,"title":{},"body":{"components/LayoutContentComponent.html":{}}}],["src/app/layout/layout.component.ts:164",{"_index":1065,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["src/app/layout/layout.component.ts:206",{"_index":1085,"title":{},"body":{"components/LayoutSidebarComponent.html":{}}}],["src/app/layout/layout.component.ts:231",{"_index":1062,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:235",{"_index":1063,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:248",{"_index":1061,"title":{},"body":{"components/LayoutCardHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:261",{"_index":1011,"title":{},"body":{"components/LayoutCardBodyComponent.html":{}}}],["src/app/layout/layout.component.ts:275",{"_index":1060,"title":{},"body":{"components/LayoutCardFooterComponent.html":{}}}],["src/app/layout/layout.component.ts:294",{"_index":1059,"title":{},"body":{"components/LayoutCardComponent.html":{}}}],["src/app/layout/layout.component.ts:44",{"_index":1078,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:45",{"_index":1077,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:46",{"_index":1075,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:47",{"_index":1076,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:49",{"_index":1067,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:68",{"_index":1068,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:72",{"_index":1071,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.component.ts:90",{"_index":1069,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":1082,"title":{},"body":{"modules/LayoutModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/layout/menu",{"_index":1099,"title":{},"body":{"classes/MenuItem.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/activ",{"_index":5,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{}}}],["src/testing/spinn",{"_index":1368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":284,"title":{"index.html":{},"license.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CandidatesListComponent.html":{}}}],["stat",{"_index":548,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["state",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["statement",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["statu",{"_index":892,"title":{},"body":{"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{}}}],["statuscod",{"_index":889,"title":{},"body":{"classes/HttpResult.html":{}}}],["statustext",{"_index":888,"title":{},"body":{"classes/HttpResult.html":{}}}],["storag",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["storage_token_key",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageservic",{"_index":304,"title":{"injectables/StorageService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["store",{"_index":1413,"title":{},"body":{"index.html":{}}}],["string",{"_index":95,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"injectables/CandidateService.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"classes/HttpResult.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Screen.html":{},"injectables/ScreenService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["stub.t",{"_index":7,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stub.ts:11",{"_index":29,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["stub.ts:18",{"_index":39,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["stub.ts:21",{"_index":44,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["styleurl",{"_index":435,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["subject",{"_index":24,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"license.html":{}}}],["sublicens",{"_index":1449,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":482,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["submit",{"_index":443,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["subscrib",{"_index":56,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CategoriesComponent.html":{}}}],["subscribe((r",{"_index":494,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["substanti",{"_index":1459,"title":{},"body":{"license.html":{}}}],["success",{"_index":504,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"classes/HttpResult.html":{},"components/QuestionAddEditFormComponent.html":{}}}],["support",{"_index":1481,"title":{},"body":{"modules.html":{}}}],["surnam",{"_index":423,"title":{},"body":{"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"classes/InMemoryDataService.html":{}}}],["svg",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"modules/HomeModule.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["tabl",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["tell",{"_index":732,"title":{},"body":{"modules/CoreModule.html":{}}}],["templat",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":437,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Error.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["term",{"_index":808,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["term.tolowercas",{"_index":811,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["test",{"_index":10,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/CandidateScreenComponent.html":{},"index.html":{}}}],["text",{"_index":894,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.act",{"_index":1047,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.activecl",{"_index":1039,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.addanswer(answ",{"_index":595,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.addcandid",{"_index":509,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["this.addquest",{"_index":1165,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.addscreen",{"_index":1243,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.answerservice.addanswer(answ",{"_index":581,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.answerservice.getcurrentansw",{"_index":572,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.answerservice.updateanswer(answ",{"_index":583,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.answerurl",{"_index":116,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerurl}${id",{"_index":118,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerurl}?question=${questionid}&candidate=${id",{"_index":109,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.authservice.gettoken",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.login(this.user).subscribe((r",{"_index":792,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["this.authservice.logout().subscribe((r",{"_index":1049,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.authurl}/login",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authurl}/logout",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.candid",{"_index":499,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"classes/InMemoryDataService.html":{}}}],["this.candidate.pk",{"_index":574,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.candidates.filter(c",{"_index":644,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["this.candidateservice.addcandidate(this.candid",{"_index":500,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["this.candidateservice.deletecandidate(candidate).subscribe((r",{"_index":646,"title":{},"body":{"components/CandidatesListComponent.html":{}}}],["this.candidateservice.getcandidate(id",{"_index":498,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{}}}],["this.candidateservice.getcandidates().subscribe((r",{"_index":643,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/HomeCandidatesComponent.html":{}}}],["this.candidateservice.updatecandidate(this.candid",{"_index":506,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["this.candidateurl",{"_index":623,"title":{},"body":{"injectables/CandidateService.html":{}}}],["this.candidateurl}${id",{"_index":620,"title":{},"body":{"injectables/CandidateService.html":{}}}],["this.categori",{"_index":697,"title":{},"body":{"components/CategoriesComponent.html":{},"classes/InMemoryDataService.html":{},"components/QuestionAddEditFormComponent.html":{}}}],["this.categories.filter(c",{"_index":698,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.categories.push",{"_index":695,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.categories[0",{"_index":941,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.categories[2",{"_index":942,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.categories[4",{"_index":943,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.categoryservice.addcategori",{"_index":694,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.categoryservice.deletecategory(category).subscrib",{"_index":699,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.categoryservice.editcategory(categori",{"_index":692,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.categoryservice.getcategori",{"_index":1158,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.categoryservice.getcategories().subscribe((r",{"_index":696,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeCategoriesComponent.html":{}}}],["this.categoryurl",{"_index":727,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryurl}${id",{"_index":726,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.checkact",{"_index":1027,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.checkdon",{"_index":582,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.curr",{"_index":833,"title":{},"body":{"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{}}}],["this.currentansw",{"_index":571,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.currentanswer.answer_correct",{"_index":592,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.currentanswer.pk",{"_index":584,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.currentquest",{"_index":569,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.currentquestion.pk",{"_index":573,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.document.getelementbyid('main",{"_index":1031,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.document.getelementbyid('sidebar",{"_index":1029,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.document.getelementbyid(this.selector",{"_index":1294,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["this.el",{"_index":1293,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["this.el.style['display",{"_index":1295,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["this.error",{"_index":502,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.getbodyerror",{"_index":896,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.getcandid",{"_index":642,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/HomeCandidatesComponent.html":{}}}],["this.getcandidate(id",{"_index":566,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.getcandidate(this.id",{"_index":491,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["this.getcategori",{"_index":691,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{}}}],["this.getcurrentansw",{"_index":590,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.getcurrentquest",{"_index":589,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.getquest",{"_index":864,"title":{},"body":{"components/HomeQuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.getquestion(this.id",{"_index":1155,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.getscor",{"_index":588,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.getscreen",{"_index":492,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/HomeScreensComponent.html":{},"components/ScreensListComponent.html":{}}}],["this.getscreen(this.candidate.screen_pk",{"_index":580,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.getscreen(this.id",{"_index":1229,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.getstatu",{"_index":898,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.getstatustext",{"_index":897,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.handleerror(r",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{}}}],["this.http.delete(url",{"_index":622,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["this.http.get(url",{"_index":110,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["this.http.post(loginurl",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(logouturl",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(url",{"_index":117,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["this.http.put(url",{"_index":119,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["this.id",{"_index":489,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.idx",{"_index":585,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.location.back",{"_index":507,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["this.locationback",{"_index":505,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.main",{"_index":1030,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.quest",{"_index":1009,"title":{},"body":{"classes/InMemoryDataService.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.questions.filter(q",{"_index":1195,"title":{},"body":{"components/QuestionsListComponent.html":{}}}],["this.questions[0",{"_index":946,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.questions[1",{"_index":947,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.questionservice.addquestion(this.quest",{"_index":1160,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.questionservice.deletequestion(question).subscribe((r",{"_index":1197,"title":{},"body":{"components/QuestionsListComponent.html":{}}}],["this.questionservice.getquest",{"_index":1235,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.questionservice.getquestion(id",{"_index":1159,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.questionservice.getquestions().subscribe((r",{"_index":865,"title":{},"body":{"components/HomeQuestionsComponent.html":{},"components/QuestionsListComponent.html":{}}}],["this.questionservice.updatequestion(this.quest",{"_index":1161,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.questionurl",{"_index":1185,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.questionurl}${id",{"_index":1183,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.refreshdata",{"_index":568,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.removetoken",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.renderer.addclass(this.main",{"_index":1040,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.renderer.addclass(this.sidenav",{"_index":1038,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.renderer.removeclass(this.main",{"_index":1044,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.renderer.removeclass(this.sidenav",{"_index":1043,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.respons",{"_index":899,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.response.error",{"_index":902,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.response.error.non_field_error",{"_index":903,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.response.statu",{"_index":900,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.response.statustext",{"_index":901,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.route.parammap.subscribe(pmap",{"_index":487,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.router.navigatebyurl",{"_index":794,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/auth",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl('/auth/login",{"_index":1050,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.saveandadd",{"_index":1163,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.scor",{"_index":579,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.screen",{"_index":496,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/InMemoryDataService.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensListComponent.html":{}}}],["this.screen.nam",{"_index":1240,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.screen.pk",{"_index":578,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.screen.quest",{"_index":1236,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.screen.questions.length",{"_index":586,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.screen.questions[this.idx",{"_index":570,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.screens.filter(",{"_index":1270,"title":{},"body":{"components/ScreensListComponent.html":{}}}],["this.screens.find",{"_index":980,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.screens[0].nam",{"_index":923,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.screens[0].url",{"_index":921,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.screens[1].nam",{"_index":927,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.screens[1].url",{"_index":926,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["this.screenservice.addscreen(this.screen",{"_index":1238,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.screenservice.deletescreen(screen).subscribe((r",{"_index":1271,"title":{},"body":{"components/ScreensListComponent.html":{}}}],["this.screenservice.getscore(this.candidate.pk",{"_index":577,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.screenservice.getscreen",{"_index":493,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["this.screenservice.getscreen(id",{"_index":567,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.screenservice.getscreens().subscribe((r",{"_index":872,"title":{},"body":{"components/HomeScreensComponent.html":{},"components/ScreensListComponent.html":{}}}],["this.screenservice.updatescreen(this.screen",{"_index":1239,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.screenurl",{"_index":1265,"title":{},"body":{"injectables/ScreenService.html":{}}}],["this.screenurl}${id",{"_index":1264,"title":{},"body":{"injectables/ScreenService.html":{}}}],["this.screenurl}${id}/score/?candidate=${candidate_id",{"_index":1263,"title":{},"body":{"injectables/ScreenService.html":{}}}],["this.selectedquest",{"_index":1241,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.selectedquestions.findindex",{"_index":1230,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.selectedquestions.findindex(q",{"_index":1232,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.selectedquestions.push",{"_index":1234,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.selectedquestions.splice(idx",{"_index":1233,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["this.setact",{"_index":1035,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.setinact",{"_index":1036,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.setparammap(initialparam",{"_index":58,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["this.settoken(r",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sidenav",{"_index":1028,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.sidenav.classlist.contains(this.activecl",{"_index":1048,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.spinnerservice.hid",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["this.spinnerservice.show",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.clear(storage_token_key",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storageservice.get(storage_token_key",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.storageservice.set",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.subject.asobserv",{"_index":38,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["this.subject.next(converttoparammap(param",{"_index":59,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["this.submit",{"_index":501,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"classes/Error.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/ScreenAddEditFormComponent.html":{}}}],["this.success",{"_index":910,"title":{},"body":{"classes/HttpResult.html":{}}}],["this.updateanswer(answ",{"_index":594,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["this.updatecandid",{"_index":508,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{}}}],["this.updatequest",{"_index":1164,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["this.updatescreen",{"_index":1242,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["throw",{"_index":737,"title":{},"body":{"modules/CoreModule.html":{}}}],["titl",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/MenuItem.html":{}}}],["titlecas",{"_index":597,"title":{},"body":{"components/CandidateScreenComponent.html":{},"components/CandidatesListComponent.html":{}}}],["toggl",{"_index":1045,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["togglenav",{"_index":1046,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["togglequest",{"_index":1216,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["togglequestions(quest",{"_index":1225,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{}}}],["token",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1478,"title":{},"body":{"license.html":{}}}],["track",{"_index":538,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["transform",{"_index":806,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["transform(candid",{"_index":807,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["transform(quest",{"_index":815,"title":{},"body":{"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["trash",{"_index":641,"title":{},"body":{"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreensListComponent.html":{}}}],["tree",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["tri",{"_index":962,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["true",{"_index":114,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"injectables/CategoryService.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":949,"title":{},"body":{"classes/InMemoryDataService.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"classes/Candidate.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"classes/Error.html":{},"classes/Error-1.html":{},"components/ErrorComponent.html":{},"pipes/FilterPipe.html":{},"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/HttpResult.html":{},"classes/InMemoryDataService.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"classes/Question.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"classes/Screen.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":534,"title":{},"body":{"components/CandidateScreenComponent.html":{}}}],["unit",{"_index":1419,"title":{},"body":{"index.html":{}}}],["up",{"_index":887,"title":{},"body":{"classes/HttpResult.html":{}}}],["updat",{"_index":94,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{}}}],["updateansw",{"_index":70,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{}}}],["updateanswer(answ",{"_index":92,"title":{},"body":{"injectables/AnswerService.html":{},"components/CandidateScreenComponent.html":{}}}],["updatecandid",{"_index":449,"title":{},"body":{"components/CandidateAddEditFormComponent.html":{},"injectables/CandidateService.html":{}}}],["updatecandidate(candid",{"_index":617,"title":{},"body":{"injectables/CandidateService.html":{}}}],["updatequest",{"_index":1128,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{}}}],["updatequestion(quest",{"_index":1180,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updatescreen",{"_index":1217,"title":{},"body":{"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{}}}],["updatescreen(screen",{"_index":1260,"title":{},"body":{"injectables/ScreenService.html":{}}}],["url",{"_index":107,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/InMemoryDataService.html":{},"injectables/QuestionService.html":{},"injectables/ScreenService.html":{}}}],["url?:str",{"_index":715,"title":{},"body":{"classes/Category.html":{}}}],["us",{"_index":14,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"injectables/StorageService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{}}}],["user",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"classes/Error.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{}}}],["usernam",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["v",{"_index":818,"title":{},"body":{"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{},"classes/HttpResult.html":{}}}],["v.category.tolowercase().includes(term",{"_index":820,"title":{},"body":{"pipes/FilterPipe-1.html":{},"pipes/FilterPipe-2.html":{}}}],["valu",{"_index":19,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"injectables/CandidateService.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoryService.html":{},"components/DashboardComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"classes/InMemoryDataService.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"injectables/QuestionService.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"injectables/ScreenService.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{}}}],["variabl",{"_index":1319,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1400,"title":{},"body":{"index.html":{}}}],["via",{"_index":1421,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":780,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["viewchild('loginform",{"_index":788,"title":{},"body":{"classes/Error.html":{},"components/LoginComponent.html":{}}}],["visibl",{"_index":1152,"title":{},"body":{"components/QuestionAddEditFormComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/CandidateAddEditFormComponent.html":{},"components/CandidateScreenComponent.html":{},"components/CandidatesComponent.html":{},"components/CandidatesListComponent.html":{},"components/CategoriesComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/HomeCandidatesComponent.html":{},"components/HomeCategoriesComponent.html":{},"components/HomeComponent.html":{},"components/HomeQuestionsComponent.html":{},"components/HomeScreensComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionAddEditFormComponent.html":{},"components/QuestionsComponent.html":{},"components/QuestionsListComponent.html":{},"components/ScreenAddEditFormComponent.html":{},"components/ScreensComponent.html":{},"components/ScreensListComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["warranti",{"_index":1461,"title":{},"body":{"license.html":{}}}],["web",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"classes/InMemoryDataService.html":{},"dependencies.html":{}}}],["whether",{"_index":1475,"title":{},"body":{"license.html":{}}}],["window.innerwidth",{"_index":1033,"title":{},"body":{"components/LayoutCardBodyComponent.html":{},"components/LayoutCardComponent.html":{},"components/LayoutCardFooterComponent.html":{},"components/LayoutCardHeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutContentComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LayoutSidebarComponent.html":{}}}],["window:res",{"_index":1066,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["without",{"_index":1441,"title":{},"body":{"license.html":{}}}],["won't",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["wrapper",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["ye",{"_index":36,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/CandidateScreenComponent.html":{},"classes/HttpResult.html":{}}}],["zone.j",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CandidatesModule.html":{},"modules/CategoriesModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MiscModule.html":{},"modules/QuestionsModule.html":{},"modules/ScreensModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActivatedRouteStub.html":{"url":"classes/ActivatedRouteStub.html","title":"class - ActivatedRouteStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedRouteStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/activated-route-stub.ts\n        \n\n            \n                Description\n            \n            \n                An ActivateRoute test double with a paramMap observable.\nUse the setParamMap() method to add the next paramMap value.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                paramMap\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setParamMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialParams?: Params)\n                    \n                \n                        \n                            \n                                Defined in src/testing/activated-route-stub.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialParams\n                                                  \n                                                        \n                                                                    Params\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            paramMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramMap:     \n\n                    \n                \n                    \n                        \n                            Default value : this.subject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/activated-route-stub.ts:18\n                            \n                        \n\n                \n                    \n                        The mock paramMap observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     \n\n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/activated-route-stub.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setParamMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetParamMap(params?: Params)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/testing/activated-route-stub.ts:21\n                            \n                        \n\n\n                \n                    \n                            Set the paramMap observables's next value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { convertToParamMap, ParamMap, Params } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n  // Use a ReplaySubject to share previous values with subscribers\n  // and pump new values into the `paramMap` observable\n  private subject = new ReplaySubject();\n\n  constructor(initialParams?: Params) {\n    this.setParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly paramMap = this.subject.asObservable();\n\n  /** Set the paramMap observables's next value */\n  setParamMap(params?: Params) {\n    this.subject.next(convertToParamMap(params));\n  };\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/candidates/services/answer.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing an AnswerService \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                answerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnswer\n                            \n                            \n                                getCurrentAnswer\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/candidates/services/answer.service.ts:14\n                            \n                        \n\n                \n                    \n                            Create an AnswerService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Http client.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnswer(answer: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/answer.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Add candidate answer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        answer\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate answer. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentAnswer(questionId: number, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/answer.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Get the requested current answer for a question / candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questionId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestion id.\n\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/answer.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Handle Http error. \n\n\n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAnswer(answer: any, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/answer.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Update candidate answer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        answer\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate answer. \n\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nAnswer id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            answerUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'screener/answers/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/answer.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { map, catchError } from 'rxjs/operators';\n\n/** Class representing an AnswerService */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  // rest url\n  private answerUrl = 'screener/answers/';\n\n  /**\n   * Create an AnswerService.\n   * @param {HttpClient} http - Injected Http client.\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Get the requested current answer for a question / candidate.\n   * @param {number} questionId - Question id.\n   * @param {number} id - Candidate id.\n   */\n  getCurrentAnswer(questionId: number, id: number): Observable {\n    \n    const url = `${this.answerUrl}?question=${questionId}&candidate=${id}`;\n    \n    return this.http.get(url)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Add candidate answer.\n   * @param {any} answer - Candidate answer. \n   */\n  addAnswer(answer: any): Observable {\n    \n    const url = `${this.answerUrl}`;\n    \n    return this.http.post(url, answer)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Update candidate answer.\n   * @param {any} answer - Candidate answer. \n   * @param {number} id - Answer id.\n   */\n  updateAnswer(answer: any, id: number): Observable {\n    \n    const url = `${this.answerUrl}${id}/`;\n    \n    return this.http.put(url, answer)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Handle Http error. \n   * @returns {HttpResult}\n   */\n  private handleError() {\n    return (error: any): Observable => {\n      return of(\n        new HttpResult(\n          false,\n          error\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a AppComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, spinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            Create a AppComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ng-screener'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  Event,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError,\n  Router\n} from '@angular/router';\nimport { SpinnerService } from './core/services/spinner.service';\n\n/**\n * Class representing a AppComponent\n */\n@Component({\n  selector: 'app-root',\n  template: ''\n})\nexport class AppComponent {\n  title = 'ng-screener';\n\n  /**\n   * Create a AppComponent\n   * @param {Router} router \n   * @param {SpinnerService} spinnerService \n   */\n  constructor(\n    private router: Router,\n    private spinnerService: SpinnerService) {\n      this.router.events.subscribe((event: Event) => {\n        switch (true) {\n          case event instanceof NavigationStart: {\n            //this.spinnerService.show();\n            break;\n          }\n          case event instanceof NavigationCancel:\n          case event instanceof NavigationEnd:\n          case event instanceof NavigationError: {\n            //this.spinnerService.hide();\n            break;\n          }\n        }\n      });\n    }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { environment } from '../environments/environment';\nimport { AuthModule } from './auth/auth.module';\nimport { RoundProgressModule } from 'angular-svg-round-progressbar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule.forRoot(),\n    AuthModule.forRoot(),\n    LayoutModule,\n    FontAwesomeModule,\n    RoundProgressModule,\n    // use fake memory data in dev mode.\n    environment.production ? [] : HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, {dataEncapsulation: false, post204: false}\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './auth/auth.module#AuthModule'\n  },\n  {\n    path: 'dashboard',\n    /* lazy load module */\n    canActivate: [AuthGuard],\n    loadChildren: './dashboard/dashboard.module#DashboardModule'\n  },\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  /* initialize routes and start listening for route changes */\n  imports: [RouterModule.forRoot(routes)],\n  /* Make router directives available for components listed in AppModule */\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing an AuthComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(spinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:11\n                            \n                        \n\n                \n                    \n                            Create an AuthComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected spinner service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { SpinnerService } from '../core/services/spinner.service'\n\n/**\n * Class representing an AuthComponent.\n */\n@Component({\n  selector: 'app-auth',\n  template: ''\n})\nexport class AuthComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Create an AuthComponent\n   * @param {SpinnerService} spinnerService - Injected spinner service.\n   */\n  constructor(\n    private spinnerService: SpinnerService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit () {\n    this.spinnerService.hide();\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Class representing an AuthGuard. \n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Create an AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected router.\n\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected storage service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/guards/auth.guard.ts:30\n                            \n                        \n\n\n                \n                    \n                            Check if route can be accessed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StorageService } from '../../core/services/storage.service';\nimport { Router } from '@angular/router';\nimport { STORAGE_TOKEN_KEY } from '../auth.constants';\n\n\n/** Class representing an AuthGuard. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * Create an AuthGuard.\n   * @param {Router} router - Injected router.\n   * @param {StorageService} storageService - Injected storage service.\n   */\n  constructor(\n    private router: Router,\n    private storageService: StorageService) {\n  }\n\n  /**\n   * Check if route can be accessed.\n   * @param { ActivatedRouteSnapshot } next\n   * @param { RouterStateSnapshot } state\n   * @returns {boolean}\n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    if (this.storageService.get(STORAGE_TOKEN_KEY)) {\n      return true;\n    }\n    this.router.navigateByUrl('/auth');\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interceptors/auth-interceptor.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing an AuthInterceptor\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/interceptors/auth-interceptor.service.ts:13\n                            \n                        \n\n                \n                    \n                            Create an AuthInterceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected auth service. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/interceptors/auth-interceptor.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Intercept Http requests and add Authorization token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { \n  HttpEvent, \n  HttpHandler, \n  HttpInterceptor, \n  HttpRequest \n} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n/** Class representing an AuthInterceptor*/\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor{\n\n  /**\n   * Create an AuthInterceptor.\n   * @param {AuthService} authService - Injected auth service. \n   */\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  /**\n   * Intercept Http requests and add Authorization token.\n   * @param req \n   * @param next \n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable>{\n    if (this.authService.getToken()){\n      // add auth header to request.\n      req = req.clone({\n        setHeaders:{['Authorization']: `Token ${this.authService.getToken()}`}\n      });\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthComponent\n                            \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders } from '@angular/core';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { AuthInterceptorService} from './interceptors/auth-interceptor.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FontAwesomeModule,\n    FormsModule\n  ],\n  declarations: [AuthComponent, LoginComponent]\n})\nexport class AuthModule { \n\n    /* Prevent duplication of provided services when loaded into root and child modules.\n  forRoot will be called in importing module AppModule, registering the providers there.\n  if module get imported by child modules / injectors, the services won't get duplicated using this\n  pattern. */\n  static forRoot(): ModuleWithProviders {\n    /* ModuleWithProviders - wrapper around ngModule that\n    associates the module with providers */\n    return {\n      ngModule: AuthModule,\n      providers:[\n        {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi:true}\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing an AuthService. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                removeToken\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            Create an AuthService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected storage service.\n\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Http client.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Get the auth token.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The auth token.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(res: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Log user in.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Log user out.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Remove the auth token.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetToken(res: HttpResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Sets the auth token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    HttpResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nHttp result object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rest-auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                        service url. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from '../../core/services/storage.service';\nimport { HttpResult } from '../../core/services/http-result';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { STORAGE_TOKEN_KEY } from '../auth.constants';\n\n/** Http request options. */\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n/** Class representing an AuthService. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /** service url. */\n  private authUrl = 'rest-auth';\n\n  /**\n   * Create an AuthService.\n   * @param {StorageService} storageService - Injected storage service.\n   * @param {HttpClient} http - Injected Http client.\n   */\n  constructor(\n    private storageService: StorageService,\n    private http: HttpClient \n  ) { }\n\n  /**\n   * Get the auth token.\n   * @returns {string} The auth token.\n   */\n  getToken() {\n    return this.storageService.get(STORAGE_TOKEN_KEY);\n  }\n\n  /**\n   * Remove the auth token.\n   */\n  removeToken() {\n    this.storageService.clear(STORAGE_TOKEN_KEY);\n  }\n\n  /**\n   * Sets the auth token.\n   * @param {HttpResult} res - Http result object.\n   */\n  setToken(res: HttpResult) {\n    this.storageService.set(\n      STORAGE_TOKEN_KEY,\n      res.getResponse()['key']\n    );\n  }\n\n  /**\n   * Log user in.\n   * @returns {HttpResult} Observable\n   */ \n  login(data: any): Observable {\n    \n    const loginUrl  = `${this.authUrl}/login/`;\n\n    return this.http.post(loginUrl, data, httpOptions)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          // set token in local storage\n          this.setToken(res);\n          return res;\n        }),\n        catchError((res) => {\n          return this.handleError(res)\n        })\n      );\n  }\n\n  /**\n   * Log user out.\n   * @returns {HttpResult} Observable\n   */\n  logout(): Observable {\n    const logoutUrl  = `${this.authUrl}/logout/`;\n    return this.http.post(logoutUrl, {}, httpOptions)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          // remove token from local storage.\n          this.removeToken();\n          return res;\n        }),\n        catchError((res) => {\n          return this.handleError(res);\n        })\n      );\n\n  }\n\n  private handleError(res: any): Observable {\n    return of(\n      new HttpResult(\n        false,\n        res\n      )\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Candidate.html":{"url":"classes/Candidate.html","title":"class - Candidate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Candidate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/candidates/candidate.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a Candidate.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                    Optional\n                                pk\n                            \n                            \n                                    Optional\n                                screen\n                            \n                            \n                                    Optional\n                                screen_pk\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        first_name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pk:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            screen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screen:     Screen\n\n                    \n                \n                    \n                        \n                            Type :     Screen\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate.ts:12\n                            \n                        \n\n                \n                    \n                        Screen association \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            screen_pk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screen_pk:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surname\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        surname:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Screen } from \"../screens/screen\";\n\n/**\n * Class representing a Candidate.\n */\nexport class Candidate {\n    pk?: number;\n    first_name: string;\n    surname: string;\n    email: string;\n    /** Screen association */\n    screen?: Screen;\n    screen_pk?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CandidateAddEditFormComponent.html":{"url":"components/CandidateAddEditFormComponent.html","title":"component - CandidateAddEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CandidateAddEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a CandidateAddEditFormComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-candidate-add-edit-form\n            \n\n            \n                styleUrls\n                candidate-add-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./candidate-add-edit-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidate\n                            \n                            \n                                errors\n                            \n                            \n                                faArrowLeft\n                            \n                            \n                                faDesktop\n                            \n                            \n                                faPlus\n                            \n                            \n                                faSave\n                            \n                            \n                                id\n                            \n                            \n                                screens\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCandidate\n                            \n                            \n                                getCandidate\n                            \n                            \n                                getScreens\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateCandidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, candidateService: CandidateService, screenService: ScreenService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:38\n                            \n                        \n\n                \n                    \n                            Create a CandidateAddEditFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected activated route.\n\n\n                                                        \n                                                \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                    CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected candidate service\n\n\n                                                        \n                                                \n                                                \n                                                        screenService\n                                                  \n                                                        \n                                                                    ScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected screen service.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCandidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Add candidate.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCandidate(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Get the candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \ncandidate id. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreens\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreens()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Get all screens.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Return to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Submit the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCandidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Update the candidate.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            candidate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        candidate:     Candidate\n\n                    \n                \n                    \n                        \n                            Type :     Candidate\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        candidate data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:24\n                            \n                        \n\n                \n                    \n                        form errors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:30\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faDesktop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faDesktop:     \n\n                    \n                \n                    \n                        \n                            Default value : faDesktop\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:34\n                            \n                        \n\n                \n                    \n                        Font Awesome desktop icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faPlus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faPlus:     \n\n                    \n                \n                    \n                        \n                            Default value : faPlus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:36\n                            \n                        \n\n                \n                    \n                        Font Awesome plus icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSave:     \n\n                    \n                \n                    \n                        \n                            Default value : faSave\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:32\n                            \n                        \n\n                \n                    \n                        Font Awesome save icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:28\n                            \n                        \n\n                \n                    \n                        routed id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screens:     Screen[]\n\n                    \n                \n                    \n                        \n                            Type :     Screen[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:38\n                            \n                        \n\n                \n                    \n                        Array of screens \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts:26\n                            \n                        \n\n                \n                    \n                        form submission \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Candidate } from '../candidate';\nimport { CandidateService } from '../services/candidate.service';\nimport { ScreenService } from '../../screens/services/screen.service';\nimport { Screen } from '../../screens/screen';\nimport { Location } from '@angular/common';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { ActivatedRoute } from '@angular/router';\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\nimport { faSave, faPlus, faDesktop} from '@fortawesome/free-solid-svg-icons';\n\n\n/** Class representing a CandidateAddEditFormComponent */\n@Component({\n  selector: 'app-candidate-add-edit-form',\n  templateUrl: './candidate-add-edit-form.component.html',\n  styleUrls: ['./candidate-add-edit-form.component.scss']\n})\nexport class CandidateAddEditFormComponent implements OnInit {\n\n  /** candidate data */\n  candidate: Candidate = {};\n  /** form errors */\n  errors: any = {};\n  /** form submission */\n  submitted: boolean = false;\n  /** routed id */\n  id: number;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n  /** Font Awesome save icon */\n  faSave = faSave;\n  /** Font Awesome desktop icon */\n  faDesktop = faDesktop;\n  /** Font Awesome plus icon */\n  faPlus = faPlus;\n  /** Array of screens */\n  screens: Screen[];\n\n  /**\n   * Create a CandidateAddEditFormComponent.\n   * @param {ActivatedRoute} route - Injected activated route.\n   * @param {CandidateService} candidateService - Injected candidate service\n   * @param {ScreenService} screenService - Injected screen service.\n   * @param {Location} location - Injected location.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private candidateService: CandidateService,\n    private screenService: ScreenService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    // subscribe to get id if routed to.\n    this.route.paramMap.subscribe(pmap => {\n      if(pmap.get('id')) {\n        this.id = +pmap.get('id');\n      }\n  \n      if (this.id) {\n        this.getCandidate(this.id);\n      }\n  \n    });\n\n    this.getScreens();\n  }\n\n  /**\n   * Get all screens.\n   */\n  getScreens(): void {\n    this.screenService.getScreens()\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.screens = res.getResponse();\n        }\n    });\n  }\n\n  /**\n   * Get the candidate.\n   * @param {number} id - candidate id. \n   */\n  getCandidate(id): void {\n    this.candidateService.getCandidate(id)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.candidate = res.getResponse();\n        }\n    });\n  }\n\n  /**\n   * Add candidate.\n   */\n  addCandidate() {\n    this.candidateService.addCandidate(this.candidate)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n      \n        if (!res.isSuccess()) {\n          this.errors = res.getErrors();\n        } else {\n          // return to previous screen if successful\n          this.locationBack();\n        }\n    });\n  }\n\n  /**\n   * Update the candidate.\n   */\n  updateCandidate() {\n    this.candidateService.updateCandidate(this.candidate)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n\n        if (!res.isSuccess()) {\n          this.errors = res.getErrors();\n        } else {\n          // return to previous screen if successful\n          this.locationBack();\n        }\n    });\n  }\n\n  /**\n   * Return to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Submit the form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // edit mode\n    if (this.id) {\n      this.updateCandidate();\n    } else {\n      // new candidate screen\n      this.addCandidate();\n    }    \n\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n       \n      {{this.id ? 'Candidate': 'New Candidate'}}\n  \n\n  \n      \n          \n          \n          \n            First Name\n            \n            \n                 First name is required\n            \n          \n\n          \n            Surname\n            \n            \n                 Surname is required\n            \n          \n\n          \n            Email\n            \n            \n                 Email is required\n            \n          \n          \n          \n              Screen\n              \n                  \n                    {{screen.name}}\n                  \n              \n              \n                   Screen is required\n              \n          \n          \n\n          \n                  \n          \n\n          \n                  Screen Candidate \n          \n        \n  \n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               {{this.id ? \\'Candidate\\': \\'New Candidate\\'}}                                                    First Name                                         First name is required                                            Surname                                         Surname is required                                            Email                                         Email is required                                                        Screen                                                    {{screen.name}}                                                                 Screen is required                                                                                                    Screen Candidate                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CandidateAddEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CandidateScreenComponent.html":{"url":"components/CandidateScreenComponent.html","title":"component - CandidateScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CandidateScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a CandidateScreenComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-candidate-screen\n            \n\n            \n                styleUrls\n                candidate-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./candidate-screen.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidate\n                            \n                            \n                                currentAnswer\n                            \n                            \n                                currentQuestion\n                            \n                            \n                                errors\n                            \n                            \n                                faArrowLeft\n                            \n                            \n                                faArrowRight\n                            \n                            \n                                faSave\n                            \n                            \n                                idx\n                            \n                            \n                                score\n                            \n                            \n                                screen\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnswer\n                            \n                            \n                                checkDone\n                            \n                            \n                                getCandidate\n                            \n                            \n                                getCurrentAnswer\n                            \n                            \n                                getCurrentQuestion\n                            \n                            \n                                getScore\n                            \n                            \n                                getScreen\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                prevQuestion\n                            \n                            \n                                refreshData\n                            \n                            \n                                updateAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(candidateService: CandidateService, answerService: AnswerService, screenService: ScreenService, route: ActivatedRoute, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:42\n                            \n                        \n\n                \n                    \n                            Create a CandidateScreenComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                    CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected candidate service.\n\n\n                                                        \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                    AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected answer service.\n\n\n                                                        \n                                                \n                                                \n                                                        screenService\n                                                  \n                                                        \n                                                                    ScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected screen service.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected activate route.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnswer(answer: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Save candidate answer to current question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answer\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkDone\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Check if all questions have been answered.\nReturn to previous page if done, otherwise\nget the next question.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCandidate(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Get candidate under test.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the candidate id.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentAnswer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Get current answer when in edit mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentQuestion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Get current question under test.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScore\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Get and track the candidate score.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreen(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Get screen under test.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the screen id. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:186\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:201\n                            \n                        \n\n\n                \n                    \n                            save the form data.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \nprevQuestion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:193\n                            \n                        \n\n\n                \n                    \n                            Get previous question.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshData\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:177\n                            \n                        \n\n\n                \n                    \n                            Refresh the page, stats, answer etc.\nCalled after each answer save.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAnswer(answer: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Update candidate answer to current question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answer\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            candidate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        candidate:     Candidate\n\n                    \n                \n                    \n                        \n                            Type :     Candidate\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:22\n                            \n                        \n\n                \n                    \n                        candidate in question \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentAnswer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:40\n                            \n                        \n\n                \n                    \n                        track current questions answer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentQuestion:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:38\n                            \n                        \n\n                \n                    \n                        current question under test \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:32\n                            \n                        \n\n                \n                    \n                        form errors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:26\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowRight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowRight:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowRight\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:30\n                            \n                        \n\n                \n                    \n                        Font Awesome right arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSave:     \n\n                    \n                \n                    \n                        \n                            Default value : faSave\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:28\n                            \n                        \n\n                \n                    \n                        Font Awesome save icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        idx:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:36\n                            \n                        \n\n                \n                    \n                        question idx \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        score:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:34\n                            \n                        \n\n                \n                    \n                        score track \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screen:     Screen\n\n                    \n                \n                    \n                        \n                            Type :     Screen\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:24\n                            \n                        \n\n                \n                    \n                        screen in question \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts:42\n                            \n                        \n\n                \n                    \n                        form submission \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { AnswerService } from '../services/answer.service';\nimport { ScreenService } from '../../screens/services/screen.service';\nimport { Question } from '../../questions/question';\nimport { Screen} from '../../screens/screen';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { Candidate } from '../candidate';\nimport { faSave, faArrowLeft, faArrowRight} from '@fortawesome/free-solid-svg-icons';\nimport { Location } from '@angular/common';\n\n/** Class representing a CandidateScreenComponent */\n@Component({\n  selector: 'app-candidate-screen',\n  templateUrl: './candidate-screen.component.html',\n  styleUrls: ['./candidate-screen.component.scss']\n})\nexport class CandidateScreenComponent implements OnInit {\n\n  /** candidate in question */\n  candidate: Candidate = {};\n  /** screen in question */\n  screen: Screen;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n  /** Font Awesome save icon */\n  faSave = faSave;\n  /** Font Awesome right arrow icon */\n  faArrowRight = faArrowRight;\n  /** form errors */\n  errors: any = {};\n  /** score track */\n  score: any = {};\n  /** question idx */\n  idx: number = 0;\n  /** current question under test */\n  currentQuestion: Question;\n  /** track current questions answer */\n  currentAnswer: any = {};\n  /** form submission */\n  submitted: boolean = false;\n\n  /**\n   * Create a CandidateScreenComponent.\n   * @param {CandidateService} candidateService - Injected candidate service.\n   * @param {AnswerService} answerService - Injected answer service.\n   * @param {ScreenService} screenService - Injected screen service.\n   * @param {ActivatedRoute} route - Injected activate route.\n   * @param {Location} location - Injected location.\n   */\n  constructor(\n    private candidateService: CandidateService,\n    private answerService: AnswerService,\n    private screenService: ScreenService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    // get candidate if edit mode.\n    this.route.paramMap.subscribe(pmap => {\n      const id = +pmap.get('id');\n      this.getCandidate(id);\n    });    \n  }\n\n  /**\n   * Get screen under test.\n   * @param {number} id the screen id. \n   */\n  getScreen(id): void {\n    this.screenService.getScreen(id)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.screen = res.getResponse();\n          this.refreshData();\n        }\n    });\n  }\n\n  /**\n   * Get current question under test.\n   */\n  getCurrentQuestion() {\n    this.currentQuestion = this.screen.questions[this.idx];\n  }\n\n  /**\n   * Get current answer when in edit mode.\n   */\n  getCurrentAnswer(): void {\n    this.currentAnswer = {};\n    this.answerService.getCurrentAnswer(\n      this.currentQuestion.pk, this.candidate.pk)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          if(res.getResponse().length) {\n            this.currentAnswer = res.getResponse()[0];\n          }\n        }\n    });\n  }\n\n  /**\n   * Get and track the candidate score.\n   */\n  getScore(): void {\n    this.screenService.getScore(this.candidate.pk, this.screen.pk)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.score = res.getResponse();\n        }\n    });\n  }\n\n  /**\n   * Get candidate under test.\n   * @param {number} id the candidate id.\n   */\n  getCandidate(id): void {\n    this.candidateService.getCandidate(id)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.candidate = res.getResponse();\n          this.getScreen(this.candidate.screen_pk);\n        }\n    });\n  }\n\n  /**\n   * Save candidate answer to current question.\n   * @param answer\n   */\n  addAnswer(answer: any): void {\n    this.answerService.addAnswer(answer)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n        if (res.isSuccess()) {\n          this.checkDone();\n        }\n    });\n  }\n\n    /**\n   * Update candidate answer to current question.\n   * @param answer\n   */\n  updateAnswer(answer: any): void {\n    this.answerService.updateAnswer(answer, this.currentAnswer.pk)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n        if (res.isSuccess()) {\n          this.checkDone();\n        }\n    });\n  }\n\n  /**\n   * Check if all questions have been answered.\n   * Return to previous page if done, otherwise\n   * get the next question.\n   */\n  checkDone() {\n    if (this.idx === this.screen.questions.length-1) {\n      this.locationBack();\n    } else{\n      this.idx += 1; \n      this.refreshData();\n    }\n  }\n\n  /**\n   * Refresh the page, stats, answer etc.\n   * Called after each answer save.\n   */\n  refreshData() {\n    this.getScore();\n    this.getCurrentQuestion();\n    this.getCurrentAnswer();\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Get previous question.\n   */\n  prevQuestion() {\n    this.idx -= 1;\n    this.refreshData();\n  }\n\n  /**\n   * save the form data.\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    let answer = {\n      \"question\": this.currentQuestion.pk,\n      \"answer_correct\": this.currentAnswer.answer_correct,\n      \"answer_quality\": 1,\n      \"candidate\": this.candidate.pk\n    };\n\n    // edit mode\n    if (this.currentAnswer.pk) {\n      this.updateAnswer(answer);\n    } else{\n      // new screen\n      this.addAnswer(answer);\n    }\n  \n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n    {{candidate.first_name | titlecase}} {{candidate.surname | titlecase}} - {{candidate.screen_name | titlecase}}\n  \n\n  \n    \n      \n\n      \n        Score: {{score.score}}%  \n        Questions Answered: {{score.questions_answered}} of {{screen?.questions.length}}\n      \n\n      \n        \n          Question {{idx + 1}} of {{screen?.questions.length}}\n         \n        {{currentQuestion?.question}}\n      \n\n      \n        \n          Answered correctly?\n        \n\n        \n          \n          Yes\n        \n\n        \n          \n          No\n        \n      \n\n      \n          \n      \n      \n          \n      \n\n\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{candidate.first_name | titlecase}} {{candidate.surname | titlecase}} - {{candidate.screen_name | titlecase}}                            Score: {{score.score}}%          Questions Answered: {{score.questions_answered}} of {{screen?.questions.length}}                              Question {{idx + 1}} of {{screen?.questions.length}}                 {{currentQuestion?.question}}                              Answered correctly?                                    Yes                                    No                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CandidateScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CandidateService.html":{"url":"injectables/CandidateService.html","title":"injectable - CandidateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CandidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/candidates/services/candidate.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a CandidateService \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                candidateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCandidate\n                            \n                            \n                                deleteCandidate\n                            \n                            \n                                getCandidate\n                            \n                            \n                                getCandidates\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateCandidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/candidates/services/candidate.service.ts:15\n                            \n                        \n\n                \n                    \n                            Create a CandidateService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Http client.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCandidate(candidate: Candidate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Add requested candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidate\n                                                        \n                                                                    Candidate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate to add.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCandidate(candidate: Candidate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Delete requested candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidate\n                                                        \n                                                                    Candidate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCandidate(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Get requested candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCandidates\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCandidates()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Get requested candidates.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            Handle Http errors.\n\n\n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCandidate(candidate: Candidate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Update requested candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidate\n                                                        \n                                                                    Candidate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate to update.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            candidateUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        candidateUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'screener/candidates/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/services/candidate.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { map, catchError } from 'rxjs/operators';\nimport { Candidate } from '../candidate';\n\n/** Class representing a CandidateService */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n\n  // rest api\n  private candidateUrl = 'screener/candidates/';\n\n  /**\n   * Create a CandidateService.\n   * @param {HttpClient} http - Injected Http client.\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Get requested candidate.\n   * @param {number} id - Candidate id.\n   * @returns {HttpResult}\n   */\n  getCandidate(id: number): Observable {\n    \n    const url = `${this.candidateUrl}${id}/`;\n    \n    return this.http.get(url)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Delete requested candidate.\n   * @param {Candidate} candidate - Candidate to delete.\n   * @returns {HttpResult}\n   */\n  deleteCandidate(candidate: Candidate): Observable {\n    \n    const id = candidate.pk;\n    const url = `${this.candidateUrl}${id}/`;\n    \n    return this.http.delete(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n\n  }\n\n  /**\n   * Update requested candidate.\n   * @param {Candidate} candidate - Candidate to update.\n   * @returns {HttpResult}\n   */\n  updateCandidate(candidate: Candidate): Observable {\n    \n    const id = candidate.pk;\n    const url = `${this.candidateUrl}${id}/`;\n    \n    return this.http.put(url, candidate)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Add requested candidate.\n   * @param {Candidate} candidate - Candidate to add.\n   * @returns {HttpResult}\n   */\n  addCandidate(candidate: Candidate): Observable {\n\n    const url = `${this.candidateUrl}`;\n    \n    return this.http.post(url, candidate)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );  \n  }\n\n  /**\n   * Get requested candidates.\n   * @returns {HttpResult}\n   */\n  getCandidates(): Observable {\n    const url = `${this.candidateUrl}`;\n\n    return this.http.get(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n\n  /**\n   * Handle Http errors.\n   * @returns {HttpResult}\n   */\n  private handleError() {\n    return (error: any): Observable => {\n      return of(\n        new HttpResult(\n          false,\n          error\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CandidatesComponent.html":{"url":"components/CandidatesComponent.html","title":"component - CandidatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CandidatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/candidates/candidates.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a CandidatesComponent.\nParent component to load child routes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-candidates\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/candidates/candidates.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Class representing a CandidatesComponent.\n * Parent component to load child routes.\n */\n@Component({\n  selector: 'app-candidates',\n  template: ``\n})\nexport class CandidatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CandidatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CandidatesListComponent.html":{"url":"components/CandidatesListComponent.html","title":"component - CandidatesListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CandidatesListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/candidates/candidates-list/candidates-list.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a CandidatesListComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-candidates-list\n            \n\n            \n                styleUrls\n                candidates-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./candidates-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidates\n                            \n                            \n                                faArrowLeft\n                            \n                            \n                                faPlus\n                            \n                            \n                                faTrash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCandidate\n                            \n                            \n                                getCandidates\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(candidateService: CandidateService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Create a CandidatesListComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                    CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected candidate service.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCandidate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCandidate(candidate: Candidate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Delete candidate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        candidate\n                                                        \n                                                                    Candidate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCandidates\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCandidates()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Get all candidates.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            candidates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        candidates:     Candidate[]\n\n                    \n                \n                    \n                        \n                            Type :     Candidate[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:19\n                            \n                        \n\n                \n                    \n                        array of candidates \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faPlus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faPlus:     \n\n                    \n                \n                    \n                        \n                            Default value : faPlus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Font Awesome save icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTrash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faTrash:     \n\n                    \n                \n                    \n                        \n                            Default value : faTrash\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/candidates/candidates-list/candidates-list.component.ts:21\n                            \n                        \n\n                \n                    \n                        Font Awesome trash icon \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Candidate } from '../candidate';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { CandidateService } from '../services/candidate.service';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Location } from '@angular/common';\n\n/** Class representing a CandidatesListComponent */\n@Component({\n  selector: 'app-candidates-list',\n  templateUrl: './candidates-list.component.html',\n  styleUrls: ['./candidates-list.component.scss']\n})\nexport class CandidatesListComponent implements OnInit {\n\n  /** array of candidates */\n  candidates: Candidate[];\n  /** Font Awesome trash icon */\n  faTrash = faTrash;\n  /** Font Awesome save icon */\n  faPlus = faPlus;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n\n  /**\n   * Create a CandidatesListComponent.\n   * @param {CandidateService} candidateService - Injected candidate service.\n   * @param {Location} location - Injected location service.\n   */\n  constructor(\n    private candidateService: CandidateService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getCandidates();\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Get all candidates.\n   */\n  getCandidates(): void {\n    this.candidateService.getCandidates().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.candidates = res.getResponse();\n      }\n    });\n  }\n\n  /**\n   * Delete candidate.\n   */\n  deleteCandidate(candidate: Candidate): void {\n    this.candidates = this.candidates.filter(c => c !== candidate);\n    this.candidateService.deleteCandidate(candidate).subscribe((res: HttpResult) => {\n      console.log(res);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    Candidates\n  \n  \n    \n      \n        \n      \n      \n        New \n      \n    \n  \n\n\n\n  \n    \n      \n        Candidate\n        Start Screen\n        Score\n        #\n      \n    \n    \n      \n        \n          {{candidate.first_name | titlecase }} {{candidate.surname | titlecase }}\n        \n        \n          {{candidate.screen_name}}\n        \n        {{candidate.score ? candidate.score + '%': 'N/A'}}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Candidates                                          New                                 Candidate        Start Screen        Score        #                                      {{candidate.first_name | titlecase }} {{candidate.surname | titlecase }}                          {{candidate.screen_name}}                {{candidate.score ? candidate.score + \\'%\\': \\'N/A\\'}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CandidatesListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CandidatesModule.html":{"url":"modules/CandidatesModule.html","title":"module - CandidatesModule","body":"\n                   \n\n\n\n\n  Modules\n  CandidatesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CandidatesModule\n\n\n\ncluster_CandidatesModule_declarations\n\n\n\ncluster_CandidatesModule_imports\n\n\n\n\nCandidateAddEditFormComponent\n\nCandidateAddEditFormComponent\n\n\n\nCandidatesModule\n\nCandidatesModule\n\nCandidatesModule -->\n\nCandidateAddEditFormComponent->CandidatesModule\n\n\n\n\n\nCandidateScreenComponent\n\nCandidateScreenComponent\n\nCandidatesModule -->\n\nCandidateScreenComponent->CandidatesModule\n\n\n\n\n\nCandidatesComponent\n\nCandidatesComponent\n\nCandidatesModule -->\n\nCandidatesComponent->CandidatesModule\n\n\n\n\n\nCandidatesListComponent\n\nCandidatesListComponent\n\nCandidatesModule -->\n\nCandidatesListComponent->CandidatesModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nCandidatesModule -->\n\nFilterPipe->CandidatesModule\n\n\n\n\n\nCandidatesRoutingModule\n\nCandidatesRoutingModule\n\nCandidatesModule -->\n\nCandidatesRoutingModule->CandidatesModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nCandidatesModule -->\n\nLayoutModule->CandidatesModule\n\n\n\n\n\nMiscModule\n\nMiscModule\n\nCandidatesModule -->\n\nMiscModule->CandidatesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/candidates/candidates.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CandidateAddEditFormComponent\n                            \n                            \n                                CandidateScreenComponent\n                            \n                            \n                                CandidatesComponent\n                            \n                            \n                                CandidatesListComponent\n                            \n                            \n                                FilterPipe\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CandidatesRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                            \n                                    MiscModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\n\nimport { CandidatesRoutingModule } from './candidates-routing.module';\nimport { CandidatesComponent } from './candidates.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { CandidateAddEditFormComponent } from './candidate-add-edit-form/candidate-add-edit-form.component';\nimport { CandidatesListComponent } from './candidates-list/candidates-list.component';\nimport { MiscModule } from '../misc/misc.module';\nimport { LayoutModule } from '../../layout/layout.module';\nimport { CandidateScreenComponent } from './candidate-screen/candidate-screen.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CandidatesRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    MiscModule,\n    LayoutModule\n  ],\n  declarations: [\n    CandidatesComponent, \n    FilterPipe, \n    CandidateAddEditFormComponent, \n    CandidatesListComponent, CandidateScreenComponent\n  ]\n})\nexport class CandidatesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CandidatesRoutingModule.html":{"url":"modules/CandidatesRoutingModule.html","title":"module - CandidatesRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  CandidatesRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/candidates/candidates-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CandidatesComponent } from './candidates.component';\nimport { \n  CandidateAddEditFormComponent \n} from './candidate-add-edit-form/candidate-add-edit-form.component';\nimport { CandidatesListComponent } from './candidates-list/candidates-list.component';\nimport { CandidateScreenComponent } from './candidate-screen/candidate-screen.component';\n\n/**\n * Candidate routes.\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: CandidatesComponent,\n    children:[\n      {\n        path:'new',\n        component: CandidateAddEditFormComponent\n      },\n      {\n        path:'detail/:id',\n        component: CandidateAddEditFormComponent\n      },\n      {\n        path:'screen/:id',\n        component: CandidateScreenComponent\n      },\n      {\n        path:'',\n        component: CandidatesListComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CandidatesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a CategoriesComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                faArrowLeft\n                            \n                            \n                                faSave\n                            \n                            \n                                faTrash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                getCategories\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/categories/categories.component.ts:27\n                            \n                        \n\n                \n                    \n                            Create a CategoriesComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                    CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected category service.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCategory(category: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Add category.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory name to add.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Delete category.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \neditCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Edit category.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to edit.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCategories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCategories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Get categories.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     Category[]\n\n                    \n                \n                    \n                        \n                            Type :     Category[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:21\n                            \n                        \n\n                \n                    \n                        Array of categories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:27\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSave:     \n\n                    \n                \n                    \n                        \n                            Default value : faSave\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:25\n                            \n                        \n\n                \n                    \n                        Font Awesome save icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTrash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faTrash:     \n\n                    \n                \n                    \n                        \n                            Default value : faTrash\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/categories.component.ts:23\n                            \n                        \n\n                \n                    \n                        Font Awesome trash icon \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Category } from './category';\nimport { HttpResult } from '../../core/services/http-result';\nimport { CategoryService } from './services/category.service';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Location } from '@angular/common';\n\n/**\n * Class representing a CategoriesComponent.\n */\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n\n  /** Array of categories */\n  categories: Category[];\n  /** Font Awesome trash icon */\n  faTrash = faTrash;\n  /** Font Awesome save icon */\n  faSave = faSave;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n\n  /**\n   * Create a CategoriesComponent.\n   * @param {CategoryService} categoryService - Injected category service.\n   * @param {Location} location - Injected location service.\n   */\n  constructor(\n    private categoryService: CategoryService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getCategories();\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Edit category.\n   * @param {Category} category - Category to edit.\n   */\n  editCategory(category: Category) {\n    if (!category) {return;}\n    this.categoryService.editCategory(category)\n      .subscribe();\n  }\n  \n  /**\n   * Add category.\n   * @param {string} category - Category name to add.\n   */\n  addCategory(category: string) {\n    category = category.trim();\n    if (!category) {return;}\n    this.categoryService.addCategory({ category } as Category)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.categories.push(\n            res.getResponse() as Category\n          );\n        }\n      });\n  }\n\n  /**\n   * Get categories.\n   */\n  getCategories(): void {\n    this.categoryService.getCategories().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.categories = res.getResponse() as Category[];\n      }\n    });\n  }\n\n  /**\n   * Delete category.\n   * @param {Category} category - Category to delete.\n   */\n  deleteCategory(category: Category): void {\n    this.categories = this.categories.filter(c => c !== category);\n    this.categoryService.deleteCategory(category).subscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n     New Category\n  \n  \n    \n      \n        Category: \n        \n      \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        Category\n        #\n      \n    \n    \n      \n        \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       New Category                      Category:                                                             Category        #                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n  Modules\n  CategoriesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_declarations\n\n\n\ncluster_CategoriesModule_imports\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesComponent->CategoriesModule\n\n\n\n\n\nCategoriesRoutingModule\n\nCategoriesRoutingModule\n\nCategoriesModule -->\n\nCategoriesRoutingModule->CategoriesModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nCategoriesModule -->\n\nLayoutModule->CategoriesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/categories/categories.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CategoriesComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CategoriesRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { CategoriesRoutingModule } from './categories-routing.module';\nimport { CategoriesComponent } from './categories.component';\nimport { FormsModule } from '@angular/forms';\nimport { ContenteditableDirective} from 'ng-contenteditable';\nimport { LayoutModule} from '../../layout/layout.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    LayoutModule\n  ],\n  declarations: [CategoriesComponent, ContenteditableDirective]\n})\nexport class CategoriesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesRoutingModule.html":{"url":"modules/CategoriesRoutingModule.html","title":"module - CategoriesRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  CategoriesRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/categories/categories-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoriesComponent } from './categories.component';\n\n/** Category child routes. */\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/categories/category.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a Category.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                    Optional\n                                pk\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        category:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/category.ts:6\n                            \n                        \n\n                \n                    \n                        category name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pk:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/category.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/category.ts:9\n                            \n                        \n\n                \n                    \n                        rest hyperlinked url \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category {\n    /** category name */\n    category: string\n    pk?: number\n    /** rest hyperlinked url */\n    url?:string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/categories/services/category.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a CategoryService.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                categoryUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                getCategories\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/categories/services/category.service.ts:17\n                            \n                        \n\n                \n                    \n                            Create a CategoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Http client. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/services/category.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Add category\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to add.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/services/category.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Delete category\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \neditCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/services/category.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Edit category\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to edit.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCategories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCategories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/services/category.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            Get all categories.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(res: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/categories/services/category.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Handle Http errors.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            categoryUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categoryUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'screener/categories/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/categories/services/category.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Category } from '../category';\n\n/**\n * Class representing a CategoryService.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  // rest api\n  private categoryUrl = 'screener/categories/';\n\n  /**\n   * Create a CategoryService.\n   * @param {HttpClient} http - Injected Http client. \n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Edit category\n   * @param {Category} category - Category to edit.\n   * @returns {HttpResult}\n   */\n  editCategory(category: Category): Observable {\n    const id = category.pk;\n    const url = `${this.categoryUrl}${id}/`;\n\n    return this.http.put(url, category)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError((res) => {\n          return this.handleError(res);\n        })\n      );  \n  }\n\n  /**\n   * Add category\n   * @param {Category} category - Category to add.\n   * @returns {HttpResult}\n   */\n  addCategory(category: Category): Observable {\n\n    const url = `${this.categoryUrl}`;\n    \n    return this.http.post(url, category)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError((res) => {\n          return this.handleError(res);\n        })\n      );  \n  }\n\n  /**\n   * Delete category\n   * @param {Category} category - Category to delete.\n   * @returns {HttpResult}\n   */\n  deleteCategory(category: Category): Observable {\n    \n    const id = category.pk;\n    const url = `${this.categoryUrl}${id}/`;\n    \n    return this.http.delete(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError((res) => {\n          return this.handleError(res);\n        })\n      );\n\n  }\n\n  /**\n   * Get all categories.\n   * @returns {HttpResult}\n   */\n  getCategories(): Observable {\n\n    const url = `${this.categoryUrl}`;\n\n    return this.http.get(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError((res) => {\n          return this.handleError(res);\n        })\n      );\n  }\n\n  /**\n   * Handle Http errors.\n   * @param res \n   */\n  private handleError(res: any): Observable {\n    return of(\n      new HttpResult(\n        false,\n        res\n      )\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnerService } from './services/spinner.service';\nimport { StorageService } from './services/storage.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class CoreModule { \n  /* Tell angular to inject coreModule into itself.\n     SkipSelf - look for it in ancestor injectors not this one\n     Optional - Injector will throw error if it can't find requested provider\n     so set optional as not finding it is ok. */\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error(\n        'CoreModule is already loaded. Import it in the AppModule only.');\n    }\n  }\n\n  /* Prevent duplication of provided services when loaded into root and child modules.\n  forRoot will be called in importing module AppModule, registering the providers there.\n  if module get imported by child modules / injectors, the services won't get duplicated using this\n  pattern. */\n  static forRoot(): ModuleWithProviders {\n    /* ModuleWithProviders - wrapper around ngModule that\n    associates the module with providers */\n    return {\n      ngModule: CoreModule,\n      providers: [SpinnerService, StorageService]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a DashboardComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n            \n                template\n                \n  \n  \n  \n    \n  \n  Copyright &copy; 2018, Richard Leahy, All rights reserved.\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:57\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menu:     MenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Home',\n      icon: faHome,\n      path: 'home'\n    },\n    {\n      title: 'Categories',\n      icon: faListAlt,\n      path: 'categories'\n    },\n    {\n      title: 'Questions',\n      icon: faQuestion,\n      path: 'questions'\n    },\n    {\n      title: 'Screens',\n      icon: faDesktop,\n      path: 'screens'\n    },\n    {\n      title: 'Candidates',\n      icon: faUser,\n      path: 'candidates'\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:31\n                            \n                        \n\n                \n                    \n                        menu items.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from '../layout/menu-item';\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons';\nimport { faDesktop } from '@fortawesome/free-solid-svg-icons';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Class representing a DashboardComponent.\n */\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    \n      \n      \n      \n        \n      \n      Copyright &copy; 2018, Richard Leahy, All rights reserved.\n    \n  `\n})\nexport class DashboardComponent implements OnInit {\n  \n  /**\n   * menu items.\n   * @type {MenuItem[]}\n   */\n  menu: MenuItem[] = [\n    {\n      title: 'Home',\n      icon: faHome,\n      path: 'home'\n    },\n    {\n      title: 'Categories',\n      icon: faListAlt,\n      path: 'categories'\n    },\n    {\n      title: 'Questions',\n      icon: faQuestion,\n      path: 'questions'\n    },\n    {\n      title: 'Screens',\n      icon: faDesktop,\n      path: 'screens'\n    },\n    {\n      title: 'Candidates',\n      icon: faUser,\n      path: 'candidates'\n    },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Copyright © 2018, Richard Leahy, All rights reserved.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nDashboardModule -->\n\nHomeModule->DashboardModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nDashboardModule -->\n\nLayoutModule->DashboardModule\n\n\n\n\n\nMiscModule\n\nMiscModule\n\nDashboardModule -->\n\nMiscModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DashboardRoutingModule\n                            \n                            \n                                    HomeModule\n                            \n                            \n                                    LayoutModule\n                            \n                            \n                                    MiscModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { HomeModule } from './home/home.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MiscModule } from './misc/misc.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    HomeModule,\n    LayoutModule,\n    MiscModule\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\nimport { HomeComponent } from './home/home.component';\n\n/**\n * Dashboard routes.\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'categories',\n        loadChildren: './categories/categories.module#CategoriesModule'\n      },\n      {\n        path: 'questions',\n        loadChildren: './questions/questions.module#QuestionsModule'\n      },\n      {\n        path: 'screens',\n        loadChildren: './screens/screens.module#ScreensModule'\n      },\n      {\n        path: 'candidates',\n        loadChildren: './candidates/candidates.module#CandidatesModule'\n      },\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Error.html":{"url":"classes/Error.html","title":"class - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/login/login.component.ts\n        \n\n            \n                Description\n            \n            \n                Class representing an error \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                        Array of errors\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { faKey } from '@fortawesome/free-solid-svg-icons';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../services/auth.service';\nimport { HttpResult } from '../../core/services/http-result';\nimport { Router } from '@angular/router';\nimport { FormGroup, NgForm } from '@angular/forms';\n\n/** Class representing an error */\nclass Error {\n  /**\n   * Array of errors\n   * @type {string[]}\n   */\n  errors: string[];\n}\n\n/** Class representing a LoginComponent */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements AfterViewInit {\n  @ViewChild('loginForm') loginForm: NgForm;\n  /** Font Awesome key icon */\n  faKey = faKey;\n  /** Font Awesome @ icon */\n  faAt = faAt;\n  /** Font Awesome spinner icon */\n  faSpinner = faSpinner;\n  /** User data */\n  user: any = {};\n  /** Form submit */\n  submitted: boolean = false;\n  /** Form errors */\n  errors: Error;\n\n  /**\n   * Create a LoginComponent.\n   * @param {AuthService} authService - Injected auth service.\n   * @param {Router} router - Injected router.\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit() {}\n\n  /**\n   * Submit the form.\n   */\n  onSubmit() {\n    this.submitted = true;\n    // attempt to log in user.\n    this.authService.login(this.user).subscribe((res: HttpResult) => {\n      this.submitted = false;\n      \n      if(res.isSuccess()) {\n        this.router.navigateByUrl('/');\n      } else {\n        this.errors = res.getErrors();\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Error-1.html":{"url":"classes/Error-1.html","title":"class - Error-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/misc/error/error.ts\n        \n\n            \n                Description\n            \n            \n                Class representing an Error.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/misc/error/error.ts:6\n                            \n                        \n\n                \n                    \n                        array of errors. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Error {\n    /** array of errors. */\n    errors: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/misc/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing an ErrorComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/misc/error/error.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errors\n                    \n                    \n                        array of errors \n\n                            \n                            Type :    Error\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/misc/error/error.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        error card title \n\n                            \n                            Type :    number | string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/misc/error/error.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/misc/error/error.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Error } from './error';\n\n/**\n * Class representing an ErrorComponent.\n */\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  /** array of errors */\n  @Input() errors: Error;\n  /** error card title */\n  @Input() title: number | string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    {{title}}\n    \n      {{error}}\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}          {{error}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/candidates/pipes/filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a FilterPipe. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(candidates: any[], term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/candidates/pipes/filter.pipe.ts:14\n                            \n                        \n\n\n                \n                    \n                            Filter candidates by screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidates\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of candidates.\n\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen name.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/** Class representing a FilterPipe. */\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * Filter candidates by screen.\n   * @param {any} candidates - Array of candidates.\n   * @param {string} term - Screen name.\n   */\n  transform(candidates: any[], term: string): any[] {\n\n    if (!term) {\n      return candidates;\n    }\n\n    term = term.toLowerCase();\n\n    return candidates.filter(\n      c => c.screen_name.toLowerCase().includes(term));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe-1.html":{"url":"pipes/FilterPipe-1.html","title":"pipe - FilterPipe-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/questions/pipes/filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a FilterPipe.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(questions: any[], term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/pipes/filter.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n                            Filter questions by category.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questions\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestions to filter.\n\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to filter by. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Class representing a FilterPipe.\n */\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * Filter questions by category.\n   * @param {Array} questions - Questions to filter.\n   * @param {string} term - Category to filter by. \n   */\n  transform(questions: any[], term: string): any[] {\n\n    if (!term) {\n      return questions;\n    }\n\n    term = term.toLowerCase();\n\n    return questions.filter(q => {\n      for (let v of q.categories) {\n        return v.category.toLowerCase().includes(term);\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe-2.html":{"url":"pipes/FilterPipe-2.html","title":"pipe - FilterPipe-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/screens/pipes/filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a FilterPipe.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(questions: any[], term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/pipes/filter.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n                            Filter questions by category\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questions\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestions to filter.\n\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCategory to filter by. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Class representing a FilterPipe.\n */\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * Filter questions by category\n   * @param questions - Questions to filter.\n   * @param {string} term - Category to filter by. \n   */\n  transform(questions: any[], term: string): any[] {\n\n    if (!term) {\n      return questions;\n    }\n\n    term = term.toLowerCase();\n\n    return questions.filter(q => {\n      for (let v of q.categories) {\n        return v.category.toLowerCase().includes(term);\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeCandidatesComponent.html":{"url":"components/HomeCandidatesComponent.html","title":"component - HomeCandidatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeCandidatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/home/home-candidates/home-candidates.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a HomeCandidatesComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-candidates\n            \n\n\n\n\n            \n                templateUrl\n                ./candidates.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCandidates\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(candidateService: CandidateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/home/home-candidates/home-candidates.component.ts:15\n                            \n                        \n\n                \n                    \n                            Create a HomeCandidatesComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                    CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected candidate service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCandidates\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCandidates()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-candidates/home-candidates.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Get candidate count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-candidates/home-candidates.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/home/home-candidates/home-candidates.component.ts:15\n                            \n                        \n\n                \n                    \n                        candidate count \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../../candidates/services/candidate.service';\nimport { HttpResult } from '../../../core/services/http-result';\n\n/**\n * Class representing a HomeCandidatesComponent.\n */\n@Component({\n  selector: 'app-candidates',\n  templateUrl: './candidates.component.html'\n})\nexport class HomeCandidatesComponent implements OnInit {\n\n  /** candidate count */\n  current: number = 0;\n\n  /**\n   * Create a HomeCandidatesComponent.\n   * @param {CandidateService} candidateService - Injected candidate service.\n   */\n  constructor(\n    private candidateService: CandidateService\n  ) { }\n\n  ngOnInit() {\n    this.getCandidates();\n  }\n\n  /**\n   * Get candidate count.\n   */\n  getCandidates() {\n    this.candidateService.getCandidates().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.current = res.getResponse().length;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Candidates\n    \n    \n        \n            {{current}}\n            \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Candidates                            {{current}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeCandidatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeCategoriesComponent.html":{"url":"components/HomeCategoriesComponent.html","title":"component - HomeCategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeCategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/home/home-categories/home-categories.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a HomeCategoriesComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/home/home-categories/home-categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            Create a HomeCategoriesComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                    CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected category service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCategories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCategories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-categories/home-categories.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Get categories count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-categories/home-categories.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/home/home-categories/home-categories.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../../categories/services/category.service';\nimport { HttpResult } from '../../../core/services/http-result';\n\n/**\n * Class representing a HomeCategoriesComponent.\n */\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html'\n})\nexport class HomeCategoriesComponent implements OnInit {\n\n  current: number = 0;\n\n  /**\n   * Create a HomeCategoriesComponent.\n   * @param {CategoryService} categoryService - Injected category service.\n   */\n  constructor(\n    private categoryService: CategoryService\n  ) { }\n\n  ngOnInit() {\n    this.getCategories();\n  }\n\n  /**\n   * Get categories count.\n   */\n  getCategories() {\n    this.categoryService.getCategories().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.current = res.getResponse().length;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n        Categories\n      \n      \n          \n              {{current}}\n              \n          \n      \n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Categories                                    {{current}}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeCategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a HomeComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/home/home.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Class representing a HomeComponent.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n  \n      \n  \n  \n        \n  \n  \n        \n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeCandidatesComponent\n\nHomeCandidatesComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeCandidatesComponent->HomeModule\n\n\n\n\n\nHomeCategoriesComponent\n\nHomeCategoriesComponent\n\nHomeModule -->\n\nHomeCategoriesComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeQuestionsComponent\n\nHomeQuestionsComponent\n\nHomeModule -->\n\nHomeQuestionsComponent->HomeModule\n\n\n\n\n\nHomeScreensComponent\n\nHomeScreensComponent\n\nHomeModule -->\n\nHomeScreensComponent->HomeModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeCandidatesComponent\n                            \n                            \n                                HomeCategoriesComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                HomeQuestionsComponent\n                            \n                            \n                                HomeScreensComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { FormsModule } from '@angular/forms';\nimport { RoundProgressModule } from 'angular-svg-round-progressbar';\nimport { HomeCategoriesComponent } from './home-categories/home-categories.component';\nimport { HomeQuestionsComponent } from './home-questions/home-questions.component';\nimport { HomeScreensComponent } from './home-screens/home-screens.component';\nimport { HomeCandidatesComponent } from './home-candidates/home-candidates.component';\nimport { LayoutModule} from '../../layout/layout.module';\nimport {RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RoundProgressModule,\n    LayoutModule,\n    RouterModule\n  ],\n  declarations: [\n    HomeComponent, \n    HomeCategoriesComponent, \n    HomeQuestionsComponent, \n    HomeScreensComponent, \n    HomeCandidatesComponent]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeQuestionsComponent.html":{"url":"components/HomeQuestionsComponent.html","title":"component - HomeQuestionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeQuestionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/home/home-questions/home-questions.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a HomeQuestionsComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-questions\n            \n\n\n\n\n            \n                templateUrl\n                ./questions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuestions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/home/home-questions/home-questions.component.ts:15\n                            \n                        \n\n                \n                    \n                            Create a HomeQuestionsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected question service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-questions/home-questions.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Get questions count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-questions/home-questions.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/home/home-questions/home-questions.component.ts:15\n                            \n                        \n\n                \n                    \n                        questions count \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../../questions/services/question.service';\nimport { HttpResult } from '../../../core/services/http-result';\n\n/**\n * Class representing a HomeQuestionsComponent.\n */\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html'\n})\nexport class HomeQuestionsComponent implements OnInit {\n\n  /** questions count */\n  current: number = 0;\n\n  /**\n   * Create a HomeQuestionsComponent.\n   * @param {QuestionService} questionService - Injected question service.\n   */\n  constructor(\n    private questionService: QuestionService\n  ) { }\n\n  ngOnInit() {\n    this.getQuestions();\n  }\n\n  /**\n   * Get questions count.\n   */\n  getQuestions() {\n    this.questionService.getQuestions().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.current = res.getResponse().length;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n        Questions\n      \n      \n          \n              {{current}}\n              \n          \n      \n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Questions                                    {{current}}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeQuestionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeScreensComponent.html":{"url":"components/HomeScreensComponent.html","title":"component - HomeScreensComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeScreensComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/home/home-screens/home-screens.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a HomeScreensComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screens\n            \n\n\n\n\n            \n                templateUrl\n                ./screens.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScreens\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(screenService: ScreenService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/home/home-screens/home-screens.component.ts:15\n                            \n                        \n\n                \n                    \n                            Create a HomeScreensComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        screenService\n                                                  \n                                                        \n                                                                    ScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected screen service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreens\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreens()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-screens/home-screens.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Get screens count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/home/home-screens/home-screens.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/home/home-screens/home-screens.component.ts:15\n                            \n                        \n\n                \n                    \n                        screens count \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ScreenService } from '../../screens/services/screen.service';\nimport { HttpResult } from '../../../core/services/http-result';\n\n/**\n * Class representing a HomeScreensComponent.\n */\n@Component({\n  selector: 'app-screens',\n  templateUrl: './screens.component.html'\n})\nexport class HomeScreensComponent implements OnInit {\n\n  /** screens count */\n  current: number = 0;\n\n  /**\n   * Create a HomeScreensComponent.\n   * @param {ScreenService} screenService - Injected screen service.\n   */\n  constructor(\n    private screenService: ScreenService\n  ) { }\n\n  ngOnInit() {\n    this.getScreens();\n  }\n\n  /**\n   * Get screens count.\n   */\n  getScreens() {\n    this.screenService.getScreens().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.current = res.getResponse().length;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n        Screens\n      \n      \n          \n              {{current}}\n              \n          \n      \n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Screens                                    {{current}}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeScreensComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResult.html":{"url":"classes/HttpResult.html","title":"class - HttpResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http-result.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a HttpResult. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBodyError\n                            \n                            \n                                getErrors\n                            \n                            \n                                getResponse\n                            \n                            \n                                getStatus\n                            \n                            \n                                getStatusText\n                            \n                            \n                                isSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success: boolean, response?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http-result.ts:2\n                            \n                        \n\n                \n                    \n                            Create a HttpResult.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrequest success.\n\n\n                                                        \n                                                \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nrequest response.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBodyError\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBodyError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http-result.ts:51\n                            \n                        \n\n\n                \n                    \n                            Get the http response errors.\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    Array of errors.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http-result.ts:18\n                            \n                        \n\n\n                \n                    \n                            Bundle up request error response.\n\n\n                            \n                            \n                            \n                                Returns :     { errors: {}; statusText: string; statusCode: number; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http-result.ts:29\n                            \n                        \n\n\n                \n                    \n                            Get the http response.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http-result.ts:36\n                            \n                        \n\n\n                \n                    \n                            Get the http status.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http-result.ts:43\n                            \n                        \n\n\n                \n                    \n                            Get the http status text.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http-result.ts:74\n                            \n                        \n\n\n                \n                    \n                            Get response success.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class HttpResult {\n\n    /**\n     * Create a HttpResult.\n     * @param {boolean} success - request success.\n     * @param {any} response - request response.\n     */\n    constructor(\n        private success: boolean,\n        private response?: any\n    ) { }\n\n    /**\n     * Bundle up request error response.\n     * @returns {object}\n     */\n    getErrors() {\n        return {\n            errors: this.getBodyError(),\n            statusText: this.getStatusText(),\n            statusCode: this.getStatus()\n        };\n    }\n\n    /**\n     * Get the http response.\n     */\n    getResponse() {\n        return this.response;\n    }\n    \n    /**\n     * Get the http status.\n     */\n    getStatus(): number {\n        return this.response.status;\n    }\n\n    /**\n     * Get the http status text.\n     */\n    getStatusText(): string {\n        return this.response.statusText;\n    }\n\n    /**\n     * Get the http response errors.\n     * @returns {Array} Array of errors.\n     */\n    getBodyError(): string[] {\n        let errors = [];\n        \n        if (this.response.error) {\n            if (this.response.error.non_field_errors) {\n                for (let err of this.response.error.non_field_errors) {\n                    errors.push(err);\n                }\n            } else if (this.response.error) {\n                for (let [k, v] of Object.entries(this.response.error)) {\n                    errors.push(v);\n                }\n            }else{\n                errors.push(this.response.statusText);\n            }\n        }\n        \n        return errors;\n    }\n\n    /**\n     * Get response success.\n     */\n    isSuccess(): boolean {\n        return this.success\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryDataService.html":{"url":"classes/InMemoryDataService.html","title":"class - InMemoryDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/in-memory-data.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        InMemoryDbService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidates\n                            \n                            \n                                categories\n                            \n                            \n                                questions\n                            \n                            \n                                screens\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                responseInterceptor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            candidates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        candidates:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      pk: 1,\n      first_name: 'Bob',\n      surname: 'Jones',\n      email: 'bob@bob.com',\n      screen: this.screens[0].url,\n      screen_pk: 1,\n      screen_name: this.screens[0].name\n    },\n    {\n      id: 2,\n      pk: 2,\n      first_name: 'Billy',\n      surname: 'Bob',\n      email: 'billy@bob.com',\n      screen: this.screens[1].url,\n      screen_pk: 2,\n      screen_name: this.screens[1].name\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {id: 1, pk:1, category: 'JavaScript'},\n    {id: 2, pk:2, category: 'Sass'},\n    {id: 3, pk:3, category: 'HTML'},\n    {id: 4, pk:4, category: 'Angular'},\n    {id: 5, pk:5, category: 'CSS'},\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      pk: 1,\n      question: 'What is JavaScript', \n      categories: [this.categories[0]]\n    },\n    {\n      id: 2, \n      pk: 2,\n      question: 'What is HTML', \n      categories: [this.categories[2]]\n    },\n    {\n      id: 3, \n      pk: 3,\n      question: 'What is CSS', \n      categories: [this.categories[4]]\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screens:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      pk: 1,\n      name: \"JavaScript Developer\",\n      questions: [this.questions[0], this.questions[1]],\n      score: 0,\n      questions_answered: 0,\n      url: 'one',\n    },\n    {\n      id: 2,\n      pk: 2,\n      name: \"HTML Developer\",\n      questions: [this.questions[1]],\n      url: 'two',\n      score: 0,\n      questions_answered: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createDb\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateDb()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:165\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { categories: {}; questions: {}; screens: {}; candidates: {}; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(reqInfo: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reqInfo\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(reqInfo: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reqInfo\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            responseInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \nresponseInterceptor(responseOptions: , requestInfo: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/in-memory-data.service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseOptions\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestInfo\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  \n  categories = [\n    {id: 1, pk:1, category: 'JavaScript'},\n    {id: 2, pk:2, category: 'Sass'},\n    {id: 3, pk:3, category: 'HTML'},\n    {id: 4, pk:4, category: 'Angular'},\n    {id: 5, pk:5, category: 'CSS'},\n  ];\n  \n  questions = [\n    {\n      id: 1,\n      pk: 1,\n      question: 'What is JavaScript', \n      categories: [this.categories[0]]\n    },\n    {\n      id: 2, \n      pk: 2,\n      question: 'What is HTML', \n      categories: [this.categories[2]]\n    },\n    {\n      id: 3, \n      pk: 3,\n      question: 'What is CSS', \n      categories: [this.categories[4]]\n    },\n  ];\n\n  screens = [\n    {\n      id: 1,\n      pk: 1,\n      name: \"JavaScript Developer\",\n      questions: [this.questions[0], this.questions[1]],\n      score: 0,\n      questions_answered: 0,\n      url: 'one',\n    },\n    {\n      id: 2,\n      pk: 2,\n      name: \"HTML Developer\",\n      questions: [this.questions[1]],\n      url: 'two',\n      score: 0,\n      questions_answered: 0\n    }\n  ];\n\n  candidates = [\n    {\n      id: 1,\n      pk: 1,\n      first_name: 'Bob',\n      surname: 'Jones',\n      email: 'bob@bob.com',\n      screen: this.screens[0].url,\n      screen_pk: 1,\n      screen_name: this.screens[0].name\n    },\n    {\n      id: 2,\n      pk: 2,\n      first_name: 'Billy',\n      surname: 'Bob',\n      email: 'billy@bob.com',\n      screen: this.screens[1].url,\n      screen_pk: 2,\n      screen_name: this.screens[1].name\n    }\n  ];\n\n  responseInterceptor(responseOptions, requestInfo) {\n    try {\n      if (Array.isArray(responseOptions.body)) {\n        responseOptions.body.map(i => i.pk = i.id);\n      } else{\n        responseOptions.body.pk = responseOptions.body.id;\n      }\n    } catch (err) {}\n\n    return responseOptions;\n  }\n  \n  post(reqInfo): Observable> {\n    const resourceUrl = reqInfo.resourceUrl;\n    \n    if (resourceUrl.includes('login')){\n      return of(new HttpResponse(\n        {\n          body: {token: \"faketoken\"},\n          status: 200\n        }\n      ));\n    } else if (resourceUrl.includes('logout')){\n      return of(new HttpResponse(\n        {\n          body: {},\n          status: 200\n        }\n      ));\n    } else if (resourceUrl.includes('candidates')) {\n      let data = reqInfo.req.body;\n      let screen = this.screens.find(\n        s => s.url === reqInfo.req.body.screen);\n      //data.screen = screen;\n      data.screen_name = screen.name;\n      data.id = Math.max(...reqInfo.collection.map(c => c.pk)) + 1;\n      data.pk = data.id;\n      data.screen_pk = screen.pk;\n      reqInfo.collection.push(data);\n\n      return of(new HttpResponse(\n        {\n          body: {},\n          status: 200\n        }\n      ));\n    }\n  }\n\n  \n  put(reqInfo): Observable> {\n    const resourceUrl = reqInfo.resourceUrl;\n    let item = reqInfo.collection.find(i => i.id === reqInfo.req.body.pk);\n\n    if (resourceUrl.includes('screens')){\n      item.name = reqInfo.req.body.name;\n      item.questions = reqInfo.req.body.questions;\n      return of(new HttpResponse(\n        {\n          body: {},\n          status: 200\n        }\n      ));\n    } else if (resourceUrl.includes('candidates')) {\n      let data = reqInfo.req.body;\n      item.first_name = data.first_name;\n      item.surname = data.surname;\n      item.email = data.email;\n      item.screen = data.screen;\n      let screen = this.screens.find(\n        s => s.url === reqInfo.req.body.screen);\n      item.screen_name = screen.name;\n      item.screen_pk = screen.pk;\n\n      return of(new HttpResponse(\n        {\n          body: {},\n          status: 200\n        }\n      ));\n    }\n\n  } \n\n\n  createDb() {\n\n    const categories = this.categories;\n\n    const questions = this.questions;\n\n    const screens = this.screens;\n\n    const candidates = this.candidates;\n\n    return {\n      categories, \n      questions,\n      screens,\n      candidates\n    };\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutCardBodyComponent.html":{"url":"components/LayoutCardBodyComponent.html","title":"component - LayoutCardBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutCardBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutCardBodyComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-card-body\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:261\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutCardBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutCardComponent.html":{"url":"components/LayoutCardComponent.html","title":"component - LayoutCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutCardComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-card\n            \n\n            \n                styleUrls\n                layout.component.scss\n            \n\n\n            \n                template\n                \n\n\n\n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:294\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutCardFooterComponent.html":{"url":"components/LayoutCardFooterComponent.html","title":"component - LayoutCardFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutCardFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutCardFooterComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-card-footer\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:275\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutCardFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutCardHeaderComponent.html":{"url":"components/LayoutCardHeaderComponent.html","title":"component - LayoutCardHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutCardHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutCardHeaderComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-card-header\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:248\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutCardHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                layout.component.scss\n            \n\n\n            \n                template\n                \n\n  \n  \n    \n    \n      \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(spinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:231\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:235\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutContentComponent.html":{"url":"components/LayoutContentComponent.html","title":"component - LayoutContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutContentComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-content\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:149\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutFooterComponent.html":{"url":"components/LayoutFooterComponent.html","title":"component - LayoutFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutFooterComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-footer\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:164\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutHeaderComponent.html":{"url":"components/LayoutHeaderComponent.html","title":"component - LayoutHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutHeaderComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-header\n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n    ng-screener\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active\n                            \n                            \n                                    Private\n                                activeCls\n                            \n                            \n                                faSignOutAlt\n                            \n                            \n                                    Private\n                                main\n                            \n                            \n                                    Private\n                                sideNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkActive\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setActive\n                            \n                            \n                                setInactive\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, renderer: Renderer2, document: )\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:49\n                            \n                        \n\n                \n                    \n                            Create a LayoutHeaderComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Listen for resize events.\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkActive\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckActive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Check if menu active.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Log out user.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:101\n                            \n                        \n\n\n                \n                    \n                            Make menu active.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setInactive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetInactive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Make menu inactive.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Toggle menu active state.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeCls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeCls:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'active'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSignOutAlt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSignOutAlt:     \n\n                    \n                \n                    \n                        \n                            Default value : faSignOutAlt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:49\n                            \n                        \n\n                \n                    \n                        Font Awesome sign out icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            main\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        main:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sideNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sideNav:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              ng-screener                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_exports\n\n\n\n\nLayoutCardBodyComponent\n\nLayoutCardBodyComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nLayoutCardBodyComponent->LayoutModule\n\n\n\n\n\nLayoutCardComponent\n\nLayoutCardComponent\n\nLayoutModule -->\n\nLayoutCardComponent->LayoutModule\n\n\n\n\n\nLayoutCardFooterComponent\n\nLayoutCardFooterComponent\n\nLayoutModule -->\n\nLayoutCardFooterComponent->LayoutModule\n\n\n\n\n\nLayoutCardHeaderComponent\n\nLayoutCardHeaderComponent\n\nLayoutModule -->\n\nLayoutCardHeaderComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nLayoutContentComponent\n\nLayoutContentComponent\n\nLayoutModule -->\n\nLayoutContentComponent->LayoutModule\n\n\n\n\n\nLayoutFooterComponent\n\nLayoutFooterComponent\n\nLayoutModule -->\n\nLayoutFooterComponent->LayoutModule\n\n\n\n\n\nLayoutHeaderComponent\n\nLayoutHeaderComponent\n\nLayoutModule -->\n\nLayoutHeaderComponent->LayoutModule\n\n\n\n\n\nLayoutSidebarComponent\n\nLayoutSidebarComponent\n\nLayoutModule -->\n\nLayoutSidebarComponent->LayoutModule\n\n\n\n\n\nLayoutCardBodyComponent \n\nLayoutCardBodyComponent \n\nLayoutCardBodyComponent  -->\n\nLayoutModule->LayoutCardBodyComponent \n\n\n\n\n\nLayoutCardComponent \n\nLayoutCardComponent \n\nLayoutCardComponent  -->\n\nLayoutModule->LayoutCardComponent \n\n\n\n\n\nLayoutCardFooterComponent \n\nLayoutCardFooterComponent \n\nLayoutCardFooterComponent  -->\n\nLayoutModule->LayoutCardFooterComponent \n\n\n\n\n\nLayoutCardHeaderComponent \n\nLayoutCardHeaderComponent \n\nLayoutCardHeaderComponent  -->\n\nLayoutModule->LayoutCardHeaderComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nLayoutContentComponent \n\nLayoutContentComponent \n\nLayoutContentComponent  -->\n\nLayoutModule->LayoutContentComponent \n\n\n\n\n\nLayoutFooterComponent \n\nLayoutFooterComponent \n\nLayoutFooterComponent  -->\n\nLayoutModule->LayoutFooterComponent \n\n\n\n\n\nLayoutHeaderComponent \n\nLayoutHeaderComponent \n\nLayoutHeaderComponent  -->\n\nLayoutModule->LayoutHeaderComponent \n\n\n\n\n\nLayoutSidebarComponent \n\nLayoutSidebarComponent \n\nLayoutSidebarComponent  -->\n\nLayoutModule->LayoutSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LayoutCardBodyComponent\n                            \n                            \n                                LayoutCardComponent\n                            \n                            \n                                LayoutCardFooterComponent\n                            \n                            \n                                LayoutCardHeaderComponent\n                            \n                            \n                                LayoutComponent\n                            \n                            \n                                LayoutContentComponent\n                            \n                            \n                                LayoutFooterComponent\n                            \n                            \n                                LayoutHeaderComponent\n                            \n                            \n                                LayoutSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LayoutCardBodyComponent\n                            \n                            \n                                    LayoutCardComponent\n                            \n                            \n                                    LayoutCardFooterComponent\n                            \n                            \n                                    LayoutCardHeaderComponent\n                            \n                            \n                                    LayoutComponent\n                            \n                            \n                                    LayoutContentComponent\n                            \n                            \n                                    LayoutFooterComponent\n                            \n                            \n                                    LayoutHeaderComponent\n                            \n                            \n                                    LayoutSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { \n  LayoutComponent, \n  LayoutHeaderComponent, \n  LayoutFooterComponent, \n  LayoutContentComponent, \n  LayoutSidebarComponent,\n  LayoutCardComponent,\n  LayoutCardHeaderComponent,\n  LayoutCardBodyComponent,\n  LayoutCardFooterComponent\n} from './layout.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {RouterModule } from '@angular/router';\n\nconst LAYOUT_COMPONENTS = [\n  LayoutComponent,\n  LayoutHeaderComponent,\n  LayoutFooterComponent,\n  LayoutContentComponent,\n  LayoutSidebarComponent,\n  LayoutCardComponent,\n  LayoutCardHeaderComponent,\n  LayoutCardBodyComponent,\n  LayoutCardFooterComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    RouterModule\n  ],\n  declarations: [...LAYOUT_COMPONENTS],\n  exports: [...LAYOUT_COMPONENTS]\n})\nexport class LayoutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutSidebarComponent.html":{"url":"components/LayoutSidebarComponent.html","title":"component - LayoutSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LayoutSidebarComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-sidebar\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n          \n            {{item.title}}\n          \n        \n        \n          \n             {{item.title}}\n          \n          \n            \n               {{child.title}}\n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:206\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        menu items \n\n                            \n                            Type :    MenuItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:206\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { \n  Component, \n  OnInit, \n  AfterViewInit, \n  Renderer2,\n  HostListener, \n  Inject \n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { SpinnerService } from '../core/services/spinner.service';\nimport { DOCUMENT } from '@angular/common';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MenuItem } from './menu-item';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\nimport { HttpResult } from '../core/services/http-result';\n\n/**\n * Class representing a LayoutHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-header',\n  template: `\n    \n      \n        \n      \n      \n        ng-screener\n      \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n  private sideNav: HTMLElement;\n  private main: HTMLElement; \n  private active: boolean;\n  private activeCls = 'active';\n  /** Font Awesome sign out icon */\n  faSignOutAlt = faSignOutAlt;\n  \n  /**\n   * Create a LayoutHeaderComponent\n   * @param router \n   * @param authService \n   * @param renderer \n   * @param document \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document) {}\n\n  /**\n   * Listen for resize events.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.checkActive();\n  }\n\n  ngOnInit() {\n    this.sideNav = this.document.getElementById('sidebar');\n    this.main = this.document.getElementById('main');\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationEnd: {\n          this.checkActive();\n          break;\n        }\n      }\n    });\n    this.checkActive();\n  }\n\n  /**\n   * Check if menu active.\n   */\n  checkActive() {\n    if (window.innerWidth >= 768) {\n      this.setActive();\n    } else{\n      this.setInactive();\n    }\n  }\n\n  /**\n   * Make menu active.\n   */\n  setActive() {\n    this.renderer.addClass(this.sideNav, this.activeCls);\n    this.renderer.addClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Make menu inactive.\n   */\n  setInactive() {\n    this.renderer.removeClass(this.sideNav, this.activeCls);\n    this.renderer.removeClass(this.main, this.activeCls);\n  }\n\n  /**\n   * Toggle menu active state.\n   */\n  toggleNav() {\n    this.active = this.sideNav.classList.contains(this.activeCls);\n    \n    if (this.active) {\n      this.setInactive();\n    } else {\n      this.setActive();\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.authService.logout().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.router.navigateByUrl('/auth/login');\n      }\n    });\n  }\n\n}\n\n/**\n * Class representing a LayoutContentComponent.\n */\n@Component({\n  selector: 'app-layout-content',\n  template: `\n    \n  `\n})\nexport class LayoutContentComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutFooterComponent.\n */\n@Component({\n  selector: 'app-layout-footer',\n  template: `\n    \n  `\n})\nexport class LayoutFooterComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutSidebarComponent.\n */\n@Component({\n  selector: 'app-layout-sidebar',\n  template: `\n    \n      \n        \n          \n            \n              \n                {{item.title}}\n              \n            \n            \n              \n                 {{item.title}}\n              \n              \n                \n                   {{child.title}}\n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class LayoutSidebarComponent {\n\n  /** menu items */\n  @Input() items:MenuItem; \n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutComponent.\n */\n@Component({\n  selector: 'app-layout',\n  template: `\n    \n    \n      \n      \n          \n        \n           \n        \n      \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor(private spinnerService: SpinnerService) { }\n\n  ngAfterViewInit() {\n    this.spinnerService.hide();\n  }\n\n}\n\n/**\n * Class representing a LayoutCardHeaderComponent.\n */\n@Component({\n  selector: 'app-layout-card-header',\n  template: ``\n})\nexport class LayoutCardHeaderComponent {\n\n  constructor() { }\n\n}\n\n/**\n * Class representing a LayoutCardBodyComponent.\n */\n@Component({\n  selector: 'app-layout-card-body',\n  template: ``\n})\nexport class LayoutCardBodyComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardFooterComponent.\n */\n@Component({\n  selector: 'app-layout-card-footer',\n  template: ``\n})\nexport class LayoutCardFooterComponent {\n\n  constructor() { }\n\n}\n\n\n/**\n * Class representing a LayoutCardComponent.\n */\n@Component({\n  selector: 'app-layout-card',\n  template: `\n    \n    \n    \n  `,\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutCardComponent {\n\n  constructor() { }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{item.title}}                                                 {{item.title}}                                               {{child.title}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a LoginComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                faAt\n                            \n                            \n                                faKey\n                            \n                            \n                                faSpinner\n                            \n                            \n                                loginForm\n                            \n                            \n                                submitted\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                            Create a LoginComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected auth service.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected router.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Submit the form.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                        Form errors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faAt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faAt:     \n\n                    \n                \n                    \n                        \n                            Default value : faAt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Font Awesome @ icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faKey:     \n\n                    \n                \n                    \n                        \n                            Default value : faKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                        Font Awesome key icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSpinner:     \n\n                    \n                \n                    \n                        \n                            Default value : faSpinner\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Font Awesome spinner icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     NgForm\n\n                    \n                \n                    \n                        \n                            Type :     NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                        Form submit \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:34\n                            \n                        \n\n                \n                    \n                        User data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { faKey } from '@fortawesome/free-solid-svg-icons';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../services/auth.service';\nimport { HttpResult } from '../../core/services/http-result';\nimport { Router } from '@angular/router';\nimport { FormGroup, NgForm } from '@angular/forms';\n\n/** Class representing an error */\nclass Error {\n  /**\n   * Array of errors\n   * @type {string[]}\n   */\n  errors: string[];\n}\n\n/** Class representing a LoginComponent */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements AfterViewInit {\n  @ViewChild('loginForm') loginForm: NgForm;\n  /** Font Awesome key icon */\n  faKey = faKey;\n  /** Font Awesome @ icon */\n  faAt = faAt;\n  /** Font Awesome spinner icon */\n  faSpinner = faSpinner;\n  /** User data */\n  user: any = {};\n  /** Form submit */\n  submitted: boolean = false;\n  /** Form errors */\n  errors: Error;\n\n  /**\n   * Create a LoginComponent.\n   * @param {AuthService} authService - Injected auth service.\n   * @param {Router} router - Injected router.\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit() {}\n\n  /**\n   * Submit the form.\n   */\n  onSubmit() {\n    this.submitted = true;\n    // attempt to log in user.\n    this.authService.login(this.user).subscribe((res: HttpResult) => {\n      this.submitted = false;\n      \n      if(res.isSuccess()) {\n        this.router.navigateByUrl('/');\n      } else {\n        this.errors = res.getErrors();\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Sign in\n            Sign in with your email or username\n            \n                \n                    {{error}}\n                \n                \n                    \n                \n                \n                    Email address\n                    \n                        \n                            \n                                \n                            \n                        \n                        \n                    \n                    \n                        Username is required\n                    \n                \n\n\n                \n                    Password\n                    \n                        \n                            \n                                \n                            \n                        \n                        \n                    \n                    \n                        Password is required\n                    \n                \n                \n                    SIGN IN\n                \n            \n        \n        \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Sign in            Sign in with your email or username                                                {{error}}                                                                                                        Email address                                                                                                                                                                                                                                                    Username is required                                                                        Password                                                                                                                                                                                                                                                    Password is required                                                                        SIGN IN                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/menu-item.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a menu item. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     MenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/menu-item.ts:29\n                            \n                        \n\n                \n                    \n                        Menu children\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     IconDefinition\n\n                    \n                \n                    \n                        \n                            Type :     IconDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/menu-item.ts:19\n                            \n                        \n\n                \n                    \n                        Menu icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/menu-item.ts:24\n                            \n                        \n\n                \n                    \n                        Menu id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        path:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/menu-item.ts:14\n                            \n                        \n\n                \n                    \n                        Menu path\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/menu-item.ts:9\n                            \n                        \n\n                \n                    \n                        Menu title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\n\n/** Class representing a menu item. */\nexport class MenuItem {\n    /**\n     * Menu title\n     * @type {string}\n     */\n    title: string;\n    /**\n     * Menu path\n     * @type {string}\n     */\n    path?:string;\n    /**\n     * Menu icon\n     * @type {IconDefinition}\n     */\n    icon?: IconDefinition;\n    /**\n     * Menu id\n     * @type {string}\n     */\n    id?: string;\n    /**\n     * Menu children\n     * @type {MenuItem[]}\n     */\n    children?: MenuItem[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MiscModule.html":{"url":"modules/MiscModule.html","title":"module - MiscModule","body":"\n                   \n\n\n\n\n  Modules\n  MiscModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MiscModule\n\n\n\ncluster_MiscModule_declarations\n\n\n\ncluster_MiscModule_imports\n\n\n\ncluster_MiscModule_exports\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nMiscModule\n\nMiscModule\n\nMiscModule -->\n\nErrorComponent->MiscModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nMiscModule -->\n\nSpinnerComponent->MiscModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nMiscModule->ErrorComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nMiscModule->SpinnerComponent \n\n\n\n\n\nMiscRoutingModule\n\nMiscRoutingModule\n\nMiscModule -->\n\nMiscRoutingModule->MiscModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/misc/misc.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ErrorComponent\n                            \n                            \n                                SpinnerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MiscRoutingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ErrorComponent\n                            \n                            \n                                    SpinnerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MiscRoutingModule } from './misc-routing.module';\nimport { ErrorComponent } from './error/error.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MiscRoutingModule,\n    FontAwesomeModule\n  ],\n  declarations: [ErrorComponent, SpinnerComponent],\n  exports : [ErrorComponent, SpinnerComponent]\n})\nexport class MiscModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MiscRoutingModule.html":{"url":"modules/MiscRoutingModule.html","title":"module - MiscRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MiscRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/misc/misc-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MiscRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/questions/question.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a Question.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                categories\n                            \n                            \n                                    Optional\n                                pk\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     Category[]\n\n                    \n                \n                    \n                        \n                            Type :     Category[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question.ts:11\n                            \n                        \n\n                \n                    \n                        categories question associated to \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pk:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question.ts:9\n                            \n                        \n\n                \n                    \n                        question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Category } from \"../categories/category\";\n\n/**\n * Class representing a Question.\n */\nexport class Question {\n    pk?: number;\n    /** question */\n    question: string;\n    /** categories question associated to */\n    categories?: Category[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionAddEditFormComponent.html":{"url":"components/QuestionAddEditFormComponent.html","title":"component - QuestionAddEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionAddEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a QuestionAddEditFormComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-add-edit-form\n            \n\n            \n                styleUrls\n                question-add-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-add-edit-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                errors\n                            \n                            \n                                faArrowLeft\n                            \n                            \n                                faPlus\n                            \n                            \n                                faSave\n                            \n                            \n                                id\n                            \n                            \n                                question\n                            \n                            \n                                saveAndAdd\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestion\n                            \n                            \n                                compareFn\n                            \n                            \n                                getCategories\n                            \n                            \n                                getQuestion\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, questionService: QuestionService, location: Location, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:39\n                            \n                        \n\n                \n                    \n                            Create a QuestionAddEditFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected route.\n\n\n                                                        \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Question service.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location.\n\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                    CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected category service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddQuestion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Add question.\nReturn to previous page if successful, otherwise\nsets errors.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareFn\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareFn(c1: Category, c2: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Compare objects for multiselect.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCategories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCategories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Get all categories.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestion(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Get question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:153\n                            \n                        \n\n\n                \n                    \n                            Submit the form.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateQuestion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Update question.\nReturn to previous page if successful, otherwise\nsets errors.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     Category[]\n\n                    \n                \n                    \n                        \n                            Type :     Category[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:25\n                            \n                        \n\n                \n                    \n                        Array of categories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:27\n                            \n                        \n\n                \n                    \n                        form errors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:35\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faPlus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faPlus:     \n\n                    \n                \n                    \n                        \n                            Default value : faPlus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:39\n                            \n                        \n\n                \n                    \n                        Font Awesome plus icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSave:     \n\n                    \n                \n                    \n                        \n                            Default value : faSave\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:37\n                            \n                        \n\n                \n                    \n                        Font Awesome save icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:33\n                            \n                        \n\n                \n                    \n                        routed question \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:23\n                            \n                        \n\n                \n                    \n                        Question data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAndAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveAndAdd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:31\n                            \n                        \n\n                \n                    \n                        save add btn visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts:29\n                            \n                        \n\n                \n                    \n                        form submission \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Question } from '../question';\nimport { QuestionService } from '../services/question.service';\nimport { Location } from '@angular/common';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { CategoryService } from '../../categories/services/category.service';\nimport { Category } from '../../categories/category';\nimport { ActivatedRoute } from '@angular/router';\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\nimport { faSave, faPlus} from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Class representing a QuestionAddEditFormComponent.\n */\n@Component({\n  selector: 'app-question-add-edit-form',\n  templateUrl: './question-add-edit-form.component.html',\n  styleUrls: ['./question-add-edit-form.component.scss']\n})\nexport class QuestionAddEditFormComponent implements OnInit {\n\n  /** Question data */\n  question: Question = {};\n  /** Array of categories */\n  categories: Category[];\n  /** form errors */\n  errors: any = {};\n  /** form submission */\n  submitted: boolean = false;\n  /** save add btn visible */\n  saveAndAdd: boolean = false;\n  /** routed question */\n  id: number;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n  /** Font Awesome save icon */\n  faSave = faSave;\n  /** Font Awesome plus icon */\n  faPlus = faPlus;\n\n  /**\n   * Create a QuestionAddEditFormComponent.\n   * @param {ActivatedRoute} route - Injected route.\n   * @param {QuestionService} questionService - Injected Question service.\n   * @param {Location} location - Injected location.\n   * @param {CategoryService} categoryService - Injected category service.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private questionService: QuestionService,\n    private location: Location,\n    private categoryService: CategoryService\n  ) { }\n\n  ngOnInit() {\n    // get question if routed.\n    this.route.paramMap.subscribe(pmap => {\n      if(pmap.get('id')) {\n        this.id = +pmap.get('id');\n      }\n  \n      if (this.id) {\n        this.getQuestion(this.id);\n      }\n  \n    });\n\n    this.getCategories();\n  }\n\n  /**\n   * Compare objects for multiselect.\n   */\n  compareFn(c1: Category, c2: Category ): boolean {\n    return c1 && c2 ? c1.pk === c2.pk: c1 === c2\n  }\n\n  /**\n   * Get all categories.\n   */\n  getCategories(): void {\n    this.categoryService.getCategories()\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.categories = res.getResponse();\n        }\n    });\n  }\n\n  /**\n   * Get question\n   * @param id \n   */\n  getQuestion(id): void {\n    this.questionService.getQuestion(id)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.question = res.getResponse();\n        }\n    });\n  }\n\n  /**\n   * Add question.\n   * Return to previous page if successful, otherwise\n   * sets errors.\n   */\n  addQuestion() {\n    this.questionService.addQuestion(this.question)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n      \n        if (!res.isSuccess()) {\n          this.errors = res.getErrors();\n        } else {\n          this.locationBack();\n        }\n    });\n  }\n\n    /**\n   * Update question.\n   * Return to previous page if successful, otherwise\n   * sets errors.\n   */\n  updateQuestion() {\n    this.questionService.updateQuestion(this.question)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n\n        if (!res.isSuccess()) {\n          this.errors = res.getErrors();\n        } else {\n          this.locationBack();\n        }\n    });\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    // save and add another\n    if (!this.saveAndAdd) {\n      this.location.back();\n    }\n    this.saveAndAdd = false;\n  }\n\n  /**\n   * Submit the form.\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // edit mode.\n    if (this.id) {\n      this.updateQuestion();\n    } else {\n      // new question.\n      this.addQuestion();\n    }    \n\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n       \n      {{this.id ? 'Edit Question': 'New Question'}}\n  \n\n  \n      \n          \n          \n          \n            Question\n            \n            \n                 Question is required\n            \n          \n          \n          \n              Category [Ctrl + Click]\n              \n                  \n                    {{category.category}}\n                  \n              \n              \n                   Category is required\n              \n          \n          \n          \n                  \n          \n          \n                  \n          \n        \n  \n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               {{this.id ? \\'Edit Question\\': \\'New Question\\'}}                                                    Question                                         Question is required                                                        Category [Ctrl + Click]                                                    {{category.category}}                                                                 Category is required                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionAddEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/questions/services/question.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a QuestionService.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                questionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestion\n                            \n                            \n                                deleteQuestion\n                            \n                            \n                                getQuestion\n                            \n                            \n                                getQuestions\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/questions/services/question.service.ts:17\n                            \n                        \n\n                \n                    \n                            Create a QuestionService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected http client. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddQuestion(question: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Add question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestion to add.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteQuestion(question: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Delete question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestion to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestion(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Get question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestion id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:123\n                            \n                        \n\n\n                \n                    \n                            Get questions.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     (error: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateQuestion(question: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Update question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestion to update.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            questionUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'screener/questions/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/services/question.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { map, catchError } from 'rxjs/operators';\nimport { Question } from '../question';\n\n/**\n * Class representing a QuestionService.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  // rest url.\n  private questionUrl = 'screener/questions/';\n\n  /**\n   * Create a QuestionService.\n   * @param {HttpClient} http - Injected http client. \n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Get question.\n   * @param {number} id - Question id.\n   * @returns {HttpResult}\n   */\n  getQuestion(id: number): Observable {\n    \n    const url = `${this.questionUrl}${id}/`;\n    \n    return this.http.get(url)\n      .pipe(\n        // map result to HttpResult\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Delete question.\n   * @param {Question} question - Question to delete.\n   * @returns {HttpResult}\n   */\n  deleteQuestion(question: Question): Observable {\n    \n    const id = question.pk;\n    const url = `${this.questionUrl}${id}/`;\n    \n    return this.http.delete(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n\n  }\n\n  /**\n   * Update question.\n   * @param {Question} question - Question to update.\n   * @returns {HttpResult}\n   */\n  updateQuestion(question: Question): Observable {\n    \n    const id = question.pk;\n    const url = `${this.questionUrl}${id}/`;\n    \n    return this.http.put(url, question)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Add question.\n   * @param {Question} question - Question to add.\n   * @returns {HttpResult}\n   */\n  addQuestion(question: Question): Observable {\n\n    const url = `${this.questionUrl}`;\n    \n    return this.http.post(url, question)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );  \n  }\n\n  /**\n   * Get questions.\n   * @returns {HttpResult}\n   */\n  getQuestions(): Observable {\n    const url = `${this.questionUrl}`;\n\n    return this.http.get(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n\n  private handleError() {\n    return (error: any): Observable => {\n      return of(\n        new HttpResult(\n          false,\n          error\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionsComponent.html":{"url":"components/QuestionsComponent.html","title":"component - QuestionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/questions/questions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-questions\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/questions/questions.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-questions',\n  template: ``\n})\nexport class QuestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionsListComponent.html":{"url":"components/QuestionsListComponent.html","title":"component - QuestionsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/questions/questions-list/questions-list.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a QuestionsListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-questions-list\n            \n\n            \n                styleUrls\n                questions-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./questions-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faArrowLeft\n                            \n                            \n                                faPlus\n                            \n                            \n                                faTrash\n                            \n                            \n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuestion\n                            \n                            \n                                getQuestions\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            Create a QuestionsListComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteQuestion(question: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Delete question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nQuestion to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Get all questions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faPlus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faPlus:     \n\n                    \n                \n                    \n                        \n                            Default value : faPlus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        Font Awesome plus icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTrash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faTrash:     \n\n                    \n                \n                    \n                        \n                            Default value : faTrash\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Font Awesome trash icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     Question[]\n\n                    \n                \n                    \n                        \n                            Type :     Question[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/questions/questions-list/questions-list.component.ts:21\n                            \n                        \n\n                \n                    \n                        Array of questions. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Question } from '../question';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { QuestionService } from '../services/question.service';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Location } from '@angular/common';\n\n/**\n * Class representing a QuestionsListComponent.\n */\n@Component({\n  selector: 'app-questions-list',\n  templateUrl: './questions-list.component.html',\n  styleUrls: ['./questions-list.component.scss']\n})\nexport class QuestionsListComponent implements OnInit {\n\n  /** Array of questions. */\n  questions: Question[];\n  /** Font Awesome trash icon */\n  faTrash = faTrash;\n  /** Font Awesome plus icon */\n  faPlus = faPlus;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n\n  /**\n   * Create a QuestionsListComponent\n   * @param questionService \n   * @param location \n   */\n  constructor(\n    private questionService: QuestionService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getQuestions();\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Get all questions.\n   */\n  getQuestions(): void {\n    this.questionService.getQuestions().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.questions = res.getResponse() as Question[];\n      }\n    });\n  }\n\n  /**\n   * Delete question.\n   * @param {Question} question - Question to delete.\n   */\n  deleteQuestion(question: Question): void {\n    this.questions = this.questions.filter(q => q !== question);\n    this.questionService.deleteQuestion(question).subscribe((res: HttpResult) => {\n      console.log(res);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    Questions\n  \n  \n    \n      \n        \n      \n      \n        New \n      \n    \n  \n\n\n\n  \n    \n      \n        Question\n        Category\n        #\n      \n    \n    \n      \n        {{question.question}}\n        \n            {{cat.category}} {{last ? '': '| '}}\n        \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Questions                                          New                                 Question        Category        #                            {{question.question}}                    {{cat.category}} {{last ? \\'\\': \\'| \\'}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuestionsModule.html":{"url":"modules/QuestionsModule.html","title":"module - QuestionsModule","body":"\n                   \n\n\n\n\n  Modules\n  QuestionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuestionsModule\n\n\n\ncluster_QuestionsModule_declarations\n\n\n\ncluster_QuestionsModule_imports\n\n\n\n\nQuestionAddEditFormComponent\n\nQuestionAddEditFormComponent\n\n\n\nQuestionsModule\n\nQuestionsModule\n\nQuestionsModule -->\n\nQuestionAddEditFormComponent->QuestionsModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nQuestionsModule -->\n\nQuestionsComponent->QuestionsModule\n\n\n\n\n\nQuestionsListComponent\n\nQuestionsListComponent\n\nQuestionsModule -->\n\nQuestionsListComponent->QuestionsModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nQuestionsModule -->\n\nLayoutModule->QuestionsModule\n\n\n\n\n\nMiscModule\n\nMiscModule\n\nQuestionsModule -->\n\nMiscModule->QuestionsModule\n\n\n\n\n\nQuestionsRoutingModule\n\nQuestionsRoutingModule\n\nQuestionsModule -->\n\nQuestionsRoutingModule->QuestionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/questions/questions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                QuestionAddEditFormComponent\n                            \n                            \n                                QuestionsComponent\n                            \n                            \n                                QuestionsListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    LayoutModule\n                            \n                            \n                                    MiscModule\n                            \n                            \n                                    QuestionsRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\n\nimport { QuestionsRoutingModule } from './questions-routing.module';\nimport { QuestionsComponent } from './questions.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { QuestionAddEditFormComponent } from './question-add-edit-form/question-add-edit-form.component';\nimport { QuestionsListComponent } from './questions-list/questions-list.component';\nimport { MiscModule } from '../misc/misc.module';\nimport { LayoutModule } from '../../layout/layout.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    QuestionsRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    MiscModule,\n    LayoutModule\n  ],\n  declarations: [\n    QuestionsComponent, \n    FilterPipe, \n    QuestionAddEditFormComponent, \n    QuestionsListComponent\n  ]\n})\nexport class QuestionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuestionsRoutingModule.html":{"url":"modules/QuestionsRoutingModule.html","title":"module - QuestionsRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  QuestionsRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/questions/questions-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuestionsComponent } from './questions.component';\nimport { QuestionAddEditFormComponent } from './question-add-edit-form/question-add-edit-form.component';\nimport { QuestionsListComponent } from './questions-list/questions-list.component';\n\n/**\n * Question child routes.\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionsComponent,\n    children:[\n      {\n        path:'new',\n        component: QuestionAddEditFormComponent\n      },\n      {\n        path:'detail/:id',\n        component: QuestionAddEditFormComponent\n      },\n      {\n        path:'',\n        component: QuestionsListComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QuestionsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Screen.html":{"url":"classes/Screen.html","title":"class - Screen","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Screen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/screens/screen.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a Screen.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                    Optional\n                                pk\n                            \n                            \n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen.ts:9\n                            \n                        \n\n                \n                    \n                        screen name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pk:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     Question[]\n\n                    \n                \n                    \n                        \n                            Type :     Question[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen.ts:11\n                            \n                        \n\n                \n                    \n                        associated questions \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Question } from \"../questions/question\";\n\n/**\n * Class representing a Screen.\n */\nexport class Screen {\n    pk?: number;\n    /** screen name */\n    name: string;\n    /** associated questions */\n    questions: Question[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenAddEditFormComponent.html":{"url":"components/ScreenAddEditFormComponent.html","title":"component - ScreenAddEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScreenAddEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a ScreenAddEditFormComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen-add-edit-form\n            \n\n            \n                styleUrls\n                screen-add-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./screen-add-edit-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                faArrowLeft\n                            \n                            \n                                faPlus\n                            \n                            \n                                faSave\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                screen\n                            \n                            \n                                selectedQuestions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addScreen\n                            \n                            \n                                checkSelected\n                            \n                            \n                                getQuestions\n                            \n                            \n                                getScreen\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleQuestions\n                            \n                            \n                                updateScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, screenService: ScreenService, location: Location, questionService: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:39\n                            \n                        \n\n                \n                    \n                            Create a ScreenAddEditFormComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected activated route.\n\n\n                                                        \n                                                \n                                                \n                                                        screenService\n                                                  \n                                                        \n                                                                    ScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected screen service.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location.\n\n\n                                                        \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected question service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \naddScreen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Add screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckSelected(question: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Check which questions are selected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Get questions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreen(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Get screen\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Submit form.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleQuestions(question: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Add / remove selected question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateScreen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Update screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:29\n                            \n                        \n\n                \n                    \n                        form errors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:35\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faPlus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faPlus:     \n\n                    \n                \n                    \n                        \n                            Default value : faPlus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:39\n                            \n                        \n\n                \n                    \n                        Font Awesome plus icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSave:     \n\n                    \n                \n                    \n                        \n                            Default value : faSave\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:37\n                            \n                        \n\n                \n                    \n                        Font Awesome save icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:33\n                            \n                        \n\n                \n                    \n                        routed id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     Question[]\n\n                    \n                \n                    \n                        \n                            Type :     Question[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:25\n                            \n                        \n\n                \n                    \n                        array of questions \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screen:     Screen\n\n                    \n                \n                    \n                        \n                            Type :     Screen\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:23\n                            \n                        \n\n                \n                    \n                        screen data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedQuestions:     Question[]\n\n                    \n                \n                    \n                        \n                            Type :     Question[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:27\n                            \n                        \n\n                \n                    \n                        selected questions \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts:31\n                            \n                        \n\n                \n                    \n                        form submission \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Screen } from '../screen';\nimport { ScreenService } from '../services/screen.service';\nimport { Location } from '@angular/common';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { QuestionService } from '../../questions/services/question.service';\nimport { Question } from '../../questions/question';\nimport { ActivatedRoute } from '@angular/router';\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\nimport { faSave, faPlus} from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Class representing a ScreenAddEditFormComponent.\n */\n@Component({\n  selector: 'app-screen-add-edit-form',\n  templateUrl: './screen-add-edit-form.component.html',\n  styleUrls: ['./screen-add-edit-form.component.scss']\n})\nexport class ScreenAddEditFormComponent implements OnInit {\n\n  /** screen data */\n  screen: Screen = {};\n  /** array of questions */\n  questions: Question[];\n  /** selected questions */\n  selectedQuestions: Question[] = [];\n  /** form errors */\n  errors: any = {};\n  /** form submission */\n  submitted: boolean = false;\n  /** routed id */\n  id: number;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n  /** Font Awesome save icon */\n  faSave = faSave;\n  /** Font Awesome plus icon */\n  faPlus = faPlus;\n\n  /**\n   * Create a ScreenAddEditFormComponent\n   * @param {ActivatedRoute} route - Injected activated route.\n   * @param {ScreenService} screenService - Injected screen service.\n   * @param {Location} location - Injected location.\n   * @param {QuestionService} questionService - Injected question service.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private screenService: ScreenService,\n    private location: Location,\n    private questionService: QuestionService\n  ) { }\n\n  ngOnInit() {\n    // get screen in edit mode.\n    this.route.paramMap.subscribe(pmap => {\n      if(pmap.get('id')) {\n        this.id = +pmap.get('id');\n      }\n      \n      if (this.id) {\n        this.getScreen(this.id);\n      }\n    });\n\n    this.getQuestions();\n  }\n\n  /**\n   * Check which questions are selected.\n   * @param question \n   */\n  checkSelected(question: Question) {\n    return this.selectedQuestions.findIndex(\n      q => q.pk === question.pk) > -1;\n  }\n\n  /**\n   * Add / remove selected question.\n   * @param {Question} question \n   */\n  toggleQuestions(question: Question) {\n    let idx = this.selectedQuestions.findIndex(q => q.pk === question.pk);\n    if (idx !== -1) {\n      this.selectedQuestions.splice(idx, 1);\n    } else {\n      this.selectedQuestions.push(\n        {\n          question: question.question,\n          pk: question.pk\n        }\n      );\n    }\n  }\n\n  /**\n   * Get questions.\n   */\n  getQuestions(): void {\n    this.questionService.getQuestions()\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.questions = res.getResponse();\n        }\n    });\n  }\n\n  /**\n   * Get screen\n   * @param {number} id - Screen id.\n   */\n  getScreen(id): void {\n    this.screenService.getScreen(id)\n      .subscribe((res: HttpResult) => {\n        if (res.isSuccess()) {\n          this.screen = res.getResponse();\n          for (let q of this.screen.questions) {\n            this.selectedQuestions.push(\n              {question:q.question,\n               pk: q.pk} as Question\n            );\n          }\n        }\n    });\n  }\n\n  /**\n   * Add screen\n   */\n  addScreen() {\n    this.screenService.addScreen(this.screen)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n      \n        if (!res.isSuccess()) {\n          this.errors = res.getErrors();\n        } else {\n          this.locationBack();\n        }\n    });\n  }\n\n  /**\n   * Update screen\n   */\n  updateScreen() {\n    this.screenService.updateScreen(this.screen)\n      .subscribe((res: HttpResult) => {\n        this.submitted = false;\n\n        if (!res.isSuccess()) {\n          this.errors = res.getErrors();\n        } else {\n          this.locationBack();\n        }\n    });\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Submit form.\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    this.screen = {\n      pk: this.screen.pk,\n      name: this.screen.name,\n      questions: this.selectedQuestions\n    };\n\n    // edit mode\n    if (this.id) {\n      this.updateScreen();\n    } else {\n      // new screen\n      this.addScreen();\n    }    \n\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n    {{this.id ? 'Edit Screen': 'New Screen'}}\n  \n\n  \n    \n      \n\n      \n        Screen (eg Python Developer)\n        \n        \n          Screen is required\n        \n      \n\n      \n        Questions\n        \n          \n        \n      \n\n      \n        \n          \n            \n              #\n              Question\n            \n          \n          \n            \n              \n              \n              {{question.question}}\n            \n          \n        \n      \n\n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{this.id ? \\'Edit Screen\\': \\'New Screen\\'}}                            Screen (eg Python Developer)                          Screen is required                            Questions                                                                                  #              Question                                                                                      {{question.question}}                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreenAddEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenService.html":{"url":"injectables/ScreenService.html","title":"injectable - ScreenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScreenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/screens/services/screen.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a ScreenService.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                screenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addScreen\n                            \n                            \n                                deleteScreen\n                            \n                            \n                                getScore\n                            \n                            \n                                getScreen\n                            \n                            \n                                getScreens\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/screens/services/screen.service.ts:16\n                            \n                        \n\n                \n                    \n                            Create a ScreenService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Http client.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \naddScreen(screen: Screen)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:123\n                            \n                        \n\n\n                \n                    \n                            Add screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        screen\n                                                        \n                                                                    Screen\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen to add.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteScreen(screen: Screen)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:76\n                            \n                        \n\n\n                \n                    \n                            Delete screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        screen\n                                                        \n                                                                    Screen\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScore\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScore(candidate_id: number, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Get candidate score.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        candidate_id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nCandidate id.\n\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreen(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Get screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen id.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreens\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreens()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:144\n                            \n                        \n\n\n                \n                    \n                            Get screens.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:161\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     (error: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateScreen(screen: Screen)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Update screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        screen\n                                                        \n                                                                    Screen\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen to update.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            screenUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screenUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'screener/screens/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/services/screen.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { map, catchError } from 'rxjs/operators';\nimport { Screen } from '../screen';\n\n/**\n * Class representing a ScreenService.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScreenService {\n\n  private screenUrl = 'screener/screens/';\n\n  /**\n   * Create a ScreenService.\n   * @param {HttpClient} http - Injected Http client.\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Get candidate score.\n   * @param {number} candidate_id - Candidate id.\n   * @param {number} id - Screen id.\n   * @returns {HttpResult}\n   */\n  getScore(candidate_id: number, id: number): Observable {\n    \n    const url = `${this.screenUrl}${id}/score/?candidate=${candidate_id}`;\n    \n    return this.http.get(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Get screen.\n   * @param {number} id - Screen id.\n   * @returns {HttpResult}\n   */\n  getScreen(id: number): Observable {\n    \n    const url = `${this.screenUrl}${id}/`;\n    \n    return this.http.get(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Delete screen.\n   * @param {Screen} screen - Screen to delete.\n   * @returns {HttpResult}\n   */\n  deleteScreen(screen: Screen): Observable {\n    \n    const id = screen.pk;\n    const url = `${this.screenUrl}${id}/`;\n    \n    return this.http.delete(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n\n  }\n\n  /**\n   * Update screen.\n   * @param {Screen} screen - Screen to update.\n   * @returns {HttpResult}\n   */\n  updateScreen(screen: Screen): Observable {\n    \n    const id = screen.pk;\n    const url = `${this.screenUrl}${id}/`;\n    \n    return this.http.put(url, screen)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n  /**\n   * Add screen.\n   * @param {Screen} screen - Screen to add.\n   * @returns {HttpResult}\n   */\n  addScreen(screen: Screen): Observable {\n\n    const url = `${this.screenUrl}`;\n    \n    return this.http.post(url, screen)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );  \n  }\n\n  /**\n   * Get screens.\n   * @returns {HttpResult}\n   */\n  getScreens(): Observable {\n    const url = `${this.screenUrl}`;\n\n    return this.http.get(url)\n      .pipe(\n        map((res) => {\n          res = new HttpResult(\n            true,\n            res\n          );\n          return res;\n        }),\n        catchError(this.handleError())\n      );\n  }\n\n\n  private handleError() {\n    return (error: any): Observable => {\n      return of(\n        new HttpResult(\n          false,\n          error\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreensComponent.html":{"url":"components/ScreensComponent.html","title":"component - ScreensComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScreensComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/screens/screens.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a ScreensComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screens\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/screens/screens.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Class representing a ScreensComponent.\n */\n@Component({\n  selector: 'app-screens',\n  template: ``\n})\nexport class ScreensComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreensComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreensListComponent.html":{"url":"components/ScreensListComponent.html","title":"component - ScreensListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScreensListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/screens/screens-list/screens-list.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a ScreensListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screens-list\n            \n\n            \n                styleUrls\n                screens-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./screens-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faArrowLeft\n                            \n                            \n                                faPlus\n                            \n                            \n                                faTrash\n                            \n                            \n                                screens\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteScreen\n                            \n                            \n                                getScreens\n                            \n                            \n                                locationBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(screenService: ScreenService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            Create a ScreensListComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        screenService\n                                                  \n                                                        \n                                                                    ScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected screen service.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected location.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteScreen(screen: Screen)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Delete screen\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        screen\n                                                        \n                                                                    Screen\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nScreen to delete.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScreens\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScreens()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Get screens.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationBack\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocationBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Navigate to previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faArrowLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faArrowLeft:     \n\n                    \n                \n                    \n                        \n                            Default value : faArrowLeft\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Font Awesome left arrow icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faPlus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faPlus:     \n\n                    \n                \n                    \n                        \n                            Default value : faPlus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        Font awesome plus icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTrash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faTrash:     \n\n                    \n                \n                    \n                        \n                            Default value : faTrash\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Font Awesome trash icon \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screens:     Screen[]\n\n                    \n                \n                    \n                        \n                            Type :     Screen[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/screens/screens-list/screens-list.component.ts:21\n                            \n                        \n\n                \n                    \n                        array of screens \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Screen } from '../screen';\nimport { HttpResult } from '../../../core/services/http-result';\nimport { ScreenService } from '../services/screen.service';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Location } from '@angular/common';\n\n/**\n * Class representing a ScreensListComponent.\n */\n@Component({\n  selector: 'app-screens-list',\n  templateUrl: './screens-list.component.html',\n  styleUrls: ['./screens-list.component.scss']\n})\nexport class ScreensListComponent implements OnInit {\n\n  /** array of screens */\n  screens: Screen[];\n  /** Font Awesome trash icon */\n  faTrash = faTrash;\n  /** Font awesome plus icon */\n  faPlus = faPlus;\n  /** Font Awesome left arrow icon */\n  faArrowLeft = faArrowLeft;\n\n  /**\n   * Create a ScreensListComponent.\n   * @param {ScreenService} screenService - Injected screen service.\n   * @param {Location} location - Injected location.\n   */\n  constructor(\n    private screenService: ScreenService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getScreens();\n  }\n\n  /**\n   * Navigate to previous page.\n   */\n  locationBack() {\n    this.location.back();\n  }\n\n  /**\n   * Get screens.\n   */\n  getScreens(): void {\n    this.screenService.getScreens().subscribe((res: HttpResult) => {\n      if (res.isSuccess()) {\n        this.screens = res.getResponse();\n      }\n    });\n  }\n\n  /**\n   * Delete screen\n   * @param {Screen} screen - Screen to delete.\n   */\n  deleteScreen(screen: Screen): void {\n    this.screens = this.screens.filter(s => s !== screen);\n    this.screenService.deleteScreen(screen).subscribe((res: HttpResult) => {\n      console.log(res);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    Screens\n  \n  \n    \n      \n        New \n      \n    \n  \n\n\n\n  \n    \n      \n        Screen\n        #\n      \n    \n    \n      \n        {{screen.name}}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Screens                      New                                 Screen        #                            {{screen.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreensListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScreensModule.html":{"url":"modules/ScreensModule.html","title":"module - ScreensModule","body":"\n                   \n\n\n\n\n  Modules\n  ScreensModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScreensModule\n\n\n\ncluster_ScreensModule_declarations\n\n\n\ncluster_ScreensModule_imports\n\n\n\n\nScreenAddEditFormComponent\n\nScreenAddEditFormComponent\n\n\n\nScreensModule\n\nScreensModule\n\nScreensModule -->\n\nScreenAddEditFormComponent->ScreensModule\n\n\n\n\n\nScreensComponent\n\nScreensComponent\n\nScreensModule -->\n\nScreensComponent->ScreensModule\n\n\n\n\n\nScreensListComponent\n\nScreensListComponent\n\nScreensModule -->\n\nScreensListComponent->ScreensModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nScreensModule -->\n\nLayoutModule->ScreensModule\n\n\n\n\n\nMiscModule\n\nMiscModule\n\nScreensModule -->\n\nMiscModule->ScreensModule\n\n\n\n\n\nScreensRoutingModule\n\nScreensRoutingModule\n\nScreensModule -->\n\nScreensRoutingModule->ScreensModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/screens/screens.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ScreenAddEditFormComponent\n                            \n                            \n                                ScreensComponent\n                            \n                            \n                                ScreensListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    LayoutModule\n                            \n                            \n                                    MiscModule\n                            \n                            \n                                    ScreensRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\n\nimport { ScreensRoutingModule } from './screens-routing.module';\nimport { ScreensComponent } from './screens.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { ScreenAddEditFormComponent } from './screen-add-edit-form/screen-add-edit-form.component';\nimport { ScreensListComponent } from './screens-list/screens-list.component';\nimport { MiscModule } from '../misc/misc.module';\nimport { LayoutModule } from '../../layout/layout.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScreensRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    MiscModule,\n    LayoutModule\n  ],\n  declarations: [\n    ScreensComponent, \n    FilterPipe, \n    ScreenAddEditFormComponent, \n    ScreensListComponent\n  ]\n})\nexport class ScreensModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScreensRoutingModule.html":{"url":"modules/ScreensRoutingModule.html","title":"module - ScreensRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ScreensRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/screens/screens-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ScreensComponent } from './screens.component';\nimport { ScreenAddEditFormComponent } from './screen-add-edit-form/screen-add-edit-form.component';\nimport { ScreensListComponent } from './screens-list/screens-list.component';\n\n/** Screen child routes. */\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScreensComponent,\n    children:[\n      {\n        path:'new',\n        component: ScreenAddEditFormComponent\n      },\n      {\n        path:'detail/:id',\n        component: ScreenAddEditFormComponent\n      },\n      {\n        path:'',\n        component: ScreensListComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScreensRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/misc/spinner/spinner.component.ts\n\n\n    \n        Description\n    \n    \n        Class representing a SpinnerComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n            \n                styleUrls\n                spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/misc/spinner/spinner.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/misc/spinner/spinner.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faSpinner:     \n\n                    \n                \n                    \n                        \n                            Default value : faSpinner\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/misc/spinner/spinner.component.ts:15\n                            \n                        \n\n                \n                    \n                        Font Awesome spinner icon. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Class representing a SpinnerComponent.\n */\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  /** Font Awesome spinner icon. */\n  faSpinner = faSpinner;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n   \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CandidateAddEditFormComponent', 'selector': 'app-candidate-add-edit-form'},{'name': 'CandidateScreenComponent', 'selector': 'app-candidate-screen'},{'name': 'CandidatesComponent', 'selector': 'app-candidates'},{'name': 'CandidatesListComponent', 'selector': 'app-candidates-list'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeCandidatesComponent', 'selector': 'app-candidates'},{'name': 'HomeCategoriesComponent', 'selector': 'app-categories'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeQuestionsComponent', 'selector': 'app-questions'},{'name': 'HomeScreensComponent', 'selector': 'app-screens'},{'name': 'LayoutCardBodyComponent', 'selector': 'app-layout-card-body'},{'name': 'LayoutCardComponent', 'selector': 'app-layout-card'},{'name': 'LayoutCardFooterComponent', 'selector': 'app-layout-card-footer'},{'name': 'LayoutCardHeaderComponent', 'selector': 'app-layout-card-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutContentComponent', 'selector': 'app-layout-content'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutHeaderComponent', 'selector': 'app-layout-header'},{'name': 'LayoutSidebarComponent', 'selector': 'app-layout-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionAddEditFormComponent', 'selector': 'app-question-add-edit-form'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'QuestionsListComponent', 'selector': 'app-questions-list'},{'name': 'ScreenAddEditFormComponent', 'selector': 'app-screen-add-edit-form'},{'name': 'ScreensComponent', 'selector': 'app-screens'},{'name': 'ScreensListComponent', 'selector': 'app-screens-list'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpinnerService.html":{"url":"injectables/SpinnerService.html","title":"injectable - SpinnerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpinnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/spinner.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a SpinnerService \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                el\n                            \n                            \n                                    Private\n                                selector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: )\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/spinner.service.ts:8\n                            \n                        \n\n                \n                    \n                            Create a SpinnerService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/spinner.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Hide the spinner.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/spinner.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Show the spinner.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/spinner.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selector:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'global-spinner'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/spinner.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/** Class representing a SpinnerService */\n@Injectable()\nexport class SpinnerService {\n  private selector: string = 'global-spinner';\n  private el: HTMLElement;\n\n  /**\n   * Create a SpinnerService.\n   * @param document\n   */\n  constructor(\n    @Inject(DOCUMENT) private document) { \n    this.el = this.document.getElementById(this.selector);\n  }\n\n  /**\n   * Show the spinner.\n   */\n  show() {\n    this.el.style['display'] = 'block';\n  }\n\n  /**\n   * Hide the spinner.\n   */\n  hide() {\n    this.el.style['display'] = 'none';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a StorageService.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/storage.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/storage.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Remove data associated with local storage key.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nkey to use.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/storage.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Get the data associated with the key.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nlocal storage key. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(key: string, value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/storage.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Set data assocaited with key.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nkey to use.\n\n\n                                                        \n                                                \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nvalue to set. \n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Class representing a StorageService.\n */\n@Injectable()\nexport class StorageService {\n\n  constructor() { }\n\n  /**\n   * Get the data associated with the key.\n   * @param {string} key - local storage key. \n   */\n  get(key: string) {\n    return localStorage.getItem(key);\n  }\n\n  /**\n   * Set data assocaited with key.\n   * @param {string} key - key to use.\n   * @param {string} value - value to set. \n   */\n  set(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  /**\n   * Remove data associated with local storage key.\n   * @param {string} key - key to use.\n   */\n  clear(key: string) {\n    localStorage.removeItem(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.constants.ts\n            \n            \n                variable\n            \n            \n                STORAGE_TOKEN_KEY\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                class\n            \n            \n                Error\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/http-result.ts\n            \n            \n                class\n            \n            \n                HttpResult\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/services/spinner.service.ts\n            \n            \n                injectable\n            \n            \n                SpinnerService\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/candidate-add-edit-form/candidate-add-edit-form.component.ts\n            \n            \n                component\n            \n            \n                CandidateAddEditFormComponent\n            \n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/candidate-screen/candidate-screen.component.ts\n            \n            \n                component\n            \n            \n                CandidateScreenComponent\n            \n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/candidate.ts\n            \n            \n                class\n            \n            \n                Candidate\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/candidates-list/candidates-list.component.ts\n            \n            \n                component\n            \n            \n                CandidatesListComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/candidates.component.ts\n            \n            \n                component\n            \n            \n                CandidatesComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/pipes/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/services/answer.service.ts\n            \n            \n                injectable\n            \n            \n                AnswerService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/candidates/services/candidate.service.ts\n            \n            \n                injectable\n            \n            \n                CandidateService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/dashboard/categories/category.ts\n            \n            \n                class\n            \n            \n                Category\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/categories/services/category.service.ts\n            \n            \n                injectable\n            \n            \n                CategoryService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/home/home-candidates/home-candidates.component.ts\n            \n            \n                component\n            \n            \n                HomeCandidatesComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/home/home-categories/home-categories.component.ts\n            \n            \n                component\n            \n            \n                HomeCategoriesComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/home/home-questions/home-questions.component.ts\n            \n            \n                component\n            \n            \n                HomeQuestionsComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/home/home-screens/home-screens.component.ts\n            \n            \n                component\n            \n            \n                HomeScreensComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/misc/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/misc/error/error.ts\n            \n            \n                class\n            \n            \n                Error\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/dashboard/misc/spinner/spinner.component.ts\n            \n            \n                component\n            \n            \n                SpinnerComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/questions/pipes/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/questions/question-add-edit-form/question-add-edit-form.component.ts\n            \n            \n                component\n            \n            \n                QuestionAddEditFormComponent\n            \n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/dashboard/questions/question.ts\n            \n            \n                class\n            \n            \n                Question\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/questions/questions-list/questions-list.component.ts\n            \n            \n                component\n            \n            \n                QuestionsListComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/questions/questions.component.ts\n            \n            \n                component\n            \n            \n                QuestionsComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/questions/services/question.service.ts\n            \n            \n                injectable\n            \n            \n                QuestionService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/screens/pipes/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/screens/screen-add-edit-form/screen-add-edit-form.component.ts\n            \n            \n                component\n            \n            \n                ScreenAddEditFormComponent\n            \n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                src/app/dashboard/screens/screen.ts\n            \n            \n                class\n            \n            \n                Screen\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/screens/screens-list/screens-list.component.ts\n            \n            \n                component\n            \n            \n                ScreensListComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/screens/screens.component.ts\n            \n            \n                component\n            \n            \n                ScreensComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/screens/services/screen.service.ts\n            \n            \n                injectable\n            \n            \n                ScreenService\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/in-memory-data.service.ts\n            \n            \n                class\n            \n            \n                InMemoryDataService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutCardBodyComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutCardComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutCardFooterComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutCardHeaderComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutContentComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutFooterComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutHeaderComponent\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutSidebarComponent\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/layout/layout.module.ts\n            \n            \n                variable\n            \n            \n                LAYOUT_COMPONENTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/menu-item.ts\n            \n            \n                class\n            \n            \n                MenuItem\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/activated-route-stub.ts\n            \n            \n                class\n            \n            \n                ActivatedRouteStub\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/testing/spinner-service-stub.ts\n            \n            \n                variable\n            \n            \n                spinnerServiceStub\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.7\n        \n            @angular/common : ^6.1.7\n        \n            @angular/compiler : ^6.1.7\n        \n            @angular/core : ^6.1.7\n        \n            @angular/forms : ^6.1.7\n        \n            @angular/http : ^6.1.7\n        \n            @angular/platform-browser : ^6.1.7\n        \n            @angular/platform-browser-dynamic : ^6.1.7\n        \n            @angular/router : ^6.1.7\n        \n            @fortawesome/angular-fontawesome : ^0.1.1\n        \n            @fortawesome/fontawesome-free : ^5.3.1\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.4\n        \n            @fortawesome/free-solid-svg-icons : ^5.3.1\n        \n            angular-in-memory-web-api : ^0.6.1\n        \n            angular-svg-round-progressbar : ^2.0.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            jquery : ^3.3.1\n        \n            ng-contenteditable : ^1.0.5\n        \n            rxjs : ^6.3.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngScreener\nThis project was generated with Angular CLI version 6.1.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Richard Leahy\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CandidatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CandidatesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MiscModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MiscRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuestionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuestionsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScreensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScreensRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CandidatesModule\n\n\n\ncluster_CandidatesModule_declarations\n\n\n\ncluster_CandidatesModule_imports\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_declarations\n\n\n\ncluster_CategoriesModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_MiscModule\n\n\n\ncluster_MiscModule_declarations\n\n\n\ncluster_MiscModule_imports\n\n\n\ncluster_MiscModule_exports\n\n\n\ncluster_QuestionsModule\n\n\n\ncluster_QuestionsModule_declarations\n\n\n\ncluster_QuestionsModule_imports\n\n\n\ncluster_ScreensModule\n\n\n\ncluster_ScreensModule_declarations\n\n\n\ncluster_ScreensModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nCandidatesModule\n\nCandidatesModule\n\nCandidatesModule -->\n\nLayoutModule->CandidatesModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nLayoutModule->CategoriesModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nLayoutModule->DashboardModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\nLayoutCardBodyComponent \n\nLayoutCardBodyComponent \n\nLayoutCardBodyComponent  -->\n\nLayoutModule->LayoutCardBodyComponent \n\n\n\n\n\nLayoutCardComponent \n\nLayoutCardComponent \n\nLayoutCardComponent  -->\n\nLayoutModule->LayoutCardComponent \n\n\n\n\n\nLayoutCardFooterComponent \n\nLayoutCardFooterComponent \n\nLayoutCardFooterComponent  -->\n\nLayoutModule->LayoutCardFooterComponent \n\n\n\n\n\nLayoutCardHeaderComponent \n\nLayoutCardHeaderComponent \n\nLayoutCardHeaderComponent  -->\n\nLayoutModule->LayoutCardHeaderComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nLayoutContentComponent \n\nLayoutContentComponent \n\nLayoutContentComponent  -->\n\nLayoutModule->LayoutContentComponent \n\n\n\n\n\nLayoutFooterComponent \n\nLayoutFooterComponent \n\nLayoutFooterComponent  -->\n\nLayoutModule->LayoutFooterComponent \n\n\n\n\n\nLayoutHeaderComponent \n\nLayoutHeaderComponent \n\nLayoutHeaderComponent  -->\n\nLayoutModule->LayoutHeaderComponent \n\n\n\n\n\nLayoutSidebarComponent \n\nLayoutSidebarComponent \n\nLayoutSidebarComponent  -->\n\nLayoutModule->LayoutSidebarComponent \n\n\n\n\n\nQuestionsModule\n\nQuestionsModule\n\nQuestionsModule -->\n\nLayoutModule->QuestionsModule\n\n\n\n\n\nScreensModule\n\nScreensModule\n\nScreensModule -->\n\nLayoutModule->ScreensModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCandidateAddEditFormComponent\n\nCandidateAddEditFormComponent\n\nCandidatesModule -->\n\nCandidateAddEditFormComponent->CandidatesModule\n\n\n\n\n\nCandidateScreenComponent\n\nCandidateScreenComponent\n\nCandidatesModule -->\n\nCandidateScreenComponent->CandidatesModule\n\n\n\n\n\nCandidatesComponent\n\nCandidatesComponent\n\nCandidatesModule -->\n\nCandidatesComponent->CandidatesModule\n\n\n\n\n\nCandidatesListComponent\n\nCandidatesListComponent\n\nCandidatesModule -->\n\nCandidatesListComponent->CandidatesModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nCandidatesModule -->\n\nFilterPipe->CandidatesModule\n\n\n\n\n\nCandidatesRoutingModule\n\nCandidatesRoutingModule\n\nCandidatesModule -->\n\nCandidatesRoutingModule->CandidatesModule\n\n\n\n\n\nMiscModule\n\nMiscModule\n\nCandidatesModule -->\n\nMiscModule->CandidatesModule\n\n\n\nDashboardModule -->\n\nMiscModule->DashboardModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nMiscModule->ErrorComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nMiscModule->SpinnerComponent \n\n\n\nQuestionsModule -->\n\nMiscModule->QuestionsModule\n\n\n\nScreensModule -->\n\nMiscModule->ScreensModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nCategoriesModule -->\n\nCategoriesComponent->CategoriesModule\n\n\n\n\n\nCategoriesRoutingModule\n\nCategoriesRoutingModule\n\nCategoriesModule -->\n\nCategoriesRoutingModule->CategoriesModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\nDashboardModule -->\n\nHomeModule->DashboardModule\n\n\n\n\n\nHomeCandidatesComponent\n\nHomeCandidatesComponent\n\nHomeModule -->\n\nHomeCandidatesComponent->HomeModule\n\n\n\n\n\nHomeCategoriesComponent\n\nHomeCategoriesComponent\n\nHomeModule -->\n\nHomeCategoriesComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeQuestionsComponent\n\nHomeQuestionsComponent\n\nHomeModule -->\n\nHomeQuestionsComponent->HomeModule\n\n\n\n\n\nHomeScreensComponent\n\nHomeScreensComponent\n\nHomeModule -->\n\nHomeScreensComponent->HomeModule\n\n\n\n\n\nLayoutCardBodyComponent\n\nLayoutCardBodyComponent\n\nLayoutModule -->\n\nLayoutCardBodyComponent->LayoutModule\n\n\n\n\n\nLayoutCardComponent\n\nLayoutCardComponent\n\nLayoutModule -->\n\nLayoutCardComponent->LayoutModule\n\n\n\n\n\nLayoutCardFooterComponent\n\nLayoutCardFooterComponent\n\nLayoutModule -->\n\nLayoutCardFooterComponent->LayoutModule\n\n\n\n\n\nLayoutCardHeaderComponent\n\nLayoutCardHeaderComponent\n\nLayoutModule -->\n\nLayoutCardHeaderComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nLayoutContentComponent\n\nLayoutContentComponent\n\nLayoutModule -->\n\nLayoutContentComponent->LayoutModule\n\n\n\n\n\nLayoutFooterComponent\n\nLayoutFooterComponent\n\nLayoutModule -->\n\nLayoutFooterComponent->LayoutModule\n\n\n\n\n\nLayoutHeaderComponent\n\nLayoutHeaderComponent\n\nLayoutModule -->\n\nLayoutHeaderComponent->LayoutModule\n\n\n\n\n\nLayoutSidebarComponent\n\nLayoutSidebarComponent\n\nLayoutModule -->\n\nLayoutSidebarComponent->LayoutModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nMiscModule -->\n\nErrorComponent->MiscModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nMiscModule -->\n\nSpinnerComponent->MiscModule\n\n\n\n\n\nMiscRoutingModule\n\nMiscRoutingModule\n\nMiscModule -->\n\nMiscRoutingModule->MiscModule\n\n\n\n\n\nQuestionAddEditFormComponent\n\nQuestionAddEditFormComponent\n\nQuestionsModule -->\n\nQuestionAddEditFormComponent->QuestionsModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nQuestionsModule -->\n\nQuestionsComponent->QuestionsModule\n\n\n\n\n\nQuestionsListComponent\n\nQuestionsListComponent\n\nQuestionsModule -->\n\nQuestionsListComponent->QuestionsModule\n\n\n\n\n\nQuestionsRoutingModule\n\nQuestionsRoutingModule\n\nQuestionsModule -->\n\nQuestionsRoutingModule->QuestionsModule\n\n\n\n\n\nScreenAddEditFormComponent\n\nScreenAddEditFormComponent\n\nScreensModule -->\n\nScreenAddEditFormComponent->ScreensModule\n\n\n\n\n\nScreensComponent\n\nScreensComponent\n\nScreensModule -->\n\nScreensComponent->ScreensModule\n\n\n\n\n\nScreensListComponent\n\nScreensListComponent\n\nScreensModule -->\n\nScreensListComponent->ScreensModule\n\n\n\n\n\nScreensRoutingModule\n\nScreensRoutingModule\n\nScreensModule -->\n\nScreensRoutingModule->ScreensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        62 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpOptions   (src/.../auth.service.ts)\n                        \n                        \n                            LAYOUT_COMPONENTS   (src/.../layout.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            spinnerServiceStub   (src/.../spinner-service-stub.ts)\n                        \n                        \n                            STORAGE_TOKEN_KEY   (src/.../auth.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/auth/services/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n                \n                    \n                        Http request options. \n\n                    \n                \n\n            \n        \n\n    src/app/layout/layout.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LAYOUT_COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LAYOUT_COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  LayoutComponent,\n  LayoutHeaderComponent,\n  LayoutFooterComponent,\n  LayoutContentComponent,\n  LayoutSidebarComponent,\n  LayoutCardComponent,\n  LayoutCardHeaderComponent,\n  LayoutCardBodyComponent,\n  LayoutCardFooterComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/testing/spinner-service-stub.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerServiceStub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        spinnerServiceStub:     Partial\n\n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n\n\n            \n        \n\n    src/app/auth/auth.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STORAGE_TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n                \n                    \n                        local storage token key \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
